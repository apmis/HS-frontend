{"version":3,"file":"react-jitsi.cjs.production.min.js","sources":["../src/defaults.tsx","../src/Jitsi.tsx","../src/utils.ts"],"sourcesContent":["import React from 'react'\nimport * as Type from './types'\n\nexport const Loader = (): React.ReactElement => <div>Loading meeting...</div>\n\nexport const Props: Type.Props = {\n    domain: 'meet.jit.si',\n    roomName: (Math.random() + 0.48151642).toString(36).substring(2),\n}\n\nexport const ContainerStyle: React.CSSProperties = {\n    width: '800px',\n    height: '400px',\n}\n\nexport const FrameStyle = (loading: boolean): React.CSSProperties => ({\n    display: loading ? 'none' : 'block',\n    width: '100%',\n    height: '100%',\n})\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Props, JitsiMeetAPIOptions } from './types'\nimport * as Default from './defaults'\nimport { importJitsiApi } from './utils'\n\nconst Jitsi: React.FC<Props> = (props: Props) => {\n    const {\n        containerStyle,\n        frameStyle,\n        loadingComponent,\n        onAPILoad,\n        onIframeLoad,\n        domain,\n        roomName,\n        password,\n        displayName,\n        config,\n        interfaceConfig,\n        noSSL,\n        jwt,\n        devices,\n        userInfo,\n    } = { ...Default.Props, ...props }\n\n    const [loading, setLoading] = useState(true)\n    const ref = useRef<HTMLDivElement | null>(null)\n\n    const Loader = loadingComponent || Default.Loader\n\n    const startConference = (JitsiMeetExternalAPI: any): void => {\n\n        try {\n\n            console.log('interfaceConfig', interfaceConfig);\n            \n\n            const options: JitsiMeetAPIOptions = {\n                roomName,\n                parentNode: ref.current,\n                configOverwrite: config,\n                interfaceConfigOverwrite: interfaceConfig,\n                noSSL,\n                jwt,\n                onLoad: onIframeLoad,\n                devices,\n                userInfo,\n            }\n\n            const api = new JitsiMeetExternalAPI(domain, options)\n\n            if (!api) throw new Error('Failed to create JitsiMeetExternalAPI istance')\n\n            if (onAPILoad) onAPILoad(api)\n\n            api.addEventListener('videoConferenceJoined', () => {\n\n                setLoading(false)\n\n                api.executeCommand('displayName', displayName)\n\n                if (domain === Default.Props.domain && password)\n                    api.executeCommand('password', password)\n\n            })\n\n            /** \n             * If we are on a self hosted Jitsi domain, we need to become moderators before setting a password\n             * Issue: https://community.jitsi.org/t/lock-failed-on-jitsimeetexternalapi/32060\n             */\n            api.addEventListener('participantRoleChanged', (e: { id: string; role: string }) => {\n\n                if (domain !== Default.Props.domain && password && e.role === 'moderator')\n                    api.executeCommand('password', password)\n\n            })\n\n        } catch (error) { console.error('Failed to start the conference', error) }\n\n    }\n\n    useEffect(() => { \n        importJitsiApi().then(jitsiApi => {\n            startConference(jitsiApi);\n        }).catch(err => {\n            console.error('Jitsi Meet API library not loaded.', err)\n        })\n    }, [])\n\n    return (\n        <div id='react-jitsi-container' style={{ ...Default.ContainerStyle, ...containerStyle }}>\n            {loading && <Loader />}\n            <div id='react-jitsi-frame' style={{ ...Default.FrameStyle(loading), ...frameStyle }} ref={ref} />\n        </div>\n    )\n}\n\nexport default Jitsi\n","export const importJitsiApi = (): Promise<void> => new Promise(async (resolve) => {\n    if(window.JitsiMeetExternalAPI) {\n        resolve(window.JitsiMeetExternalAPI)\n    } else {\n        const head = document.getElementsByTagName(\"head\")[0];\n        const script = document.createElement(\"script\"); \n\n        script.setAttribute(\"type\", \"text/javascript\");\n        script.setAttribute(\"src\", \"https://meet.jit.si/external_api.js\");\n\n        head.addEventListener(\"load\", function(event: any) {\n            if (event.target.nodeName === \"SCRIPT\") {\n                resolve(window.JitsiMeetExternalAPI)\n            }\n        }, true);\n\n        head.appendChild(script); \n    }\n})"],"names":["Loader","React","Props","domain","roomName","Math","random","toString","substring","ContainerStyle","width","height","FrameStyle","loading","display","props","Default","containerStyle","frameStyle","loadingComponent","onAPILoad","onIframeLoad","password","displayName","config","interfaceConfig","noSSL","jwt","devices","userInfo","useState","setLoading","ref","useRef","useEffect","Promise","resolve","window","JitsiMeetExternalAPI","head","document","getElementsByTagName","script","createElement","setAttribute","addEventListener","event","target","nodeName","appendChild","then","jitsiApi","console","log","api","parentNode","current","configOverwrite","interfaceConfigOverwrite","onLoad","Error","executeCommand","e","role","error","startConference","err","id","style"],"mappings":"mWAGO,IAAMA,EAAS,kBAA0BC,kDAEnCC,EAAoB,CAC7BC,OAAQ,cACRC,UAAWC,KAAKC,SAAW,WAAYC,SAAS,IAAIC,UAAU,IAGrDC,EAAsC,CAC/CC,MAAO,QACPC,OAAQ,SAGCC,EAAa,SAACC,SAA2C,CAClEC,QAASD,EAAU,OAAS,QAC5BH,MAAO,OACPC,OAAQ,yBCbmB,SAACI,cAiBnBC,KAAkBD,GAfvBE,IAAAA,eACAC,IAAAA,WACAC,IAAAA,iBACAC,IAAAA,UACAC,IAAAA,aACAlB,IAAAA,OACAC,IAAAA,SACAkB,IAAAA,SACAC,IAAAA,YACAC,IAAAA,OACAC,IAAAA,gBACAC,IAAAA,MACAC,IAAAA,IACAC,IAAAA,QACAC,IAAAA,WAG0BC,YAAS,GAAhCjB,OAASkB,OACVC,EAAMC,SAA8B,MAEpCjC,EAASmB,GAAoBH,SAqDnCkB,aAAU,WChFqC,IAAIC,kBAAeC,UAC/DC,OAAOC,qBACNF,EAAQC,OAAOC,0BACZ,KACGC,EAAOC,SAASC,qBAAqB,QAAQ,GAC7CC,EAASF,SAASG,cAAc,UAEtCD,EAAOE,aAAa,OAAQ,mBAC5BF,EAAOE,aAAa,MAAO,uCAE3BL,EAAKM,iBAAiB,QAAQ,SAASC,GACL,WAA1BA,EAAMC,OAAOC,UACbZ,EAAQC,OAAOC,yBAEpB,GAEHC,EAAKU,YAAYP,kEDiEAQ,MAAK,SAAAC,IApDF,SAACb,OAIjBc,QAAQC,IAAI,kBAAmB5B,OAezB6B,EAAM,IAAIhB,EAAqBnC,EAZA,CACjCC,SAAAA,EACAmD,WAAYvB,EAAIwB,QAChBC,gBAAiBjC,EACjBkC,yBAA0BjC,EAC1BC,MAAAA,EACAC,IAAAA,EACAgC,OAAQtC,EACRO,QAAAA,EACAC,SAAAA,QAKCyB,EAAK,MAAM,IAAIM,MAAM,iDAEtBxC,GAAWA,EAAUkC,GAEzBA,EAAIT,iBAAiB,yBAAyB,WAE1Cd,GAAW,GAEXuB,EAAIO,eAAe,cAAetC,GAE9BpB,IAAWa,EAAcb,QAAUmB,GACnCgC,EAAIO,eAAe,WAAYvC,MAQvCgC,EAAIT,iBAAiB,0BAA0B,SAACiB,GAExC3D,IAAWa,EAAcb,QAAUmB,GAAuB,cAAXwC,EAAEC,MACjDT,EAAIO,eAAe,WAAYvC,MAIzC,MAAO0C,GAASZ,QAAQY,MAAM,iCAAkCA,IAM9DC,CAAgBd,aACX,SAAAe,GACLd,QAAQY,MAAM,qCAAsCE,QAEzD,IAGCjE,uBAAKkE,GAAG,wBAAwBC,WAAYpD,KAA2BC,IAClEJ,GAAWZ,gBAACD,QACbC,uBAAKkE,GAAG,oBAAoBC,WAAYpD,EAAmBH,MAAaK,GAAcc,IAAKA"}