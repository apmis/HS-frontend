{"ast":null,"code":"import _slicedToArray from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context.js';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, forwardedRef) {\n    var _useElement$current = useElement(props).current,\n        instance = _useElement$current.instance,\n        context = _useElement$current.context;\n    useImperativeHandle(forwardedRef, function () {\n      return instance;\n    });\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, forwardedRef) {\n    var _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpen = _useState2[0],\n        setOpen = _useState2[1];\n\n    var instance = useElement(props, setOpen).current.instance;\n    useImperativeHandle(forwardedRef, function () {\n      return instance;\n    });\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    var contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, forwardedRef) {\n    var instance = useElement(props).current.instance;\n    useImperativeHandle(forwardedRef, function () {\n      return instance;\n    });\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/@react-leaflet/core/lib/component.js"],"names":["React","forwardRef","useEffect","useImperativeHandle","useState","createPortal","LeafletProvider","createContainerComponent","useElement","ContainerComponent","props","forwardedRef","current","instance","context","children","createElement","value","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","updateOverlay","update","contentNode","_contentNode","createLeafComponent","LeafComponent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,mBAAvC,EAA4DC,QAA5D,QAA4E,OAA5E;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,OAAO,SAASC,wBAAT,CAAkCC,UAAlC,EAA8C;AACjD,WAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,YAAnC,EAAiD;AAAA,8BACbH,UAAU,CAACE,KAAD,CAAV,CAAkBE,OADL;AAAA,QACrCC,QADqC,uBACrCA,QADqC;AAAA,QAC1BC,OAD0B,uBAC1BA,OAD0B;AAE7CX,IAAAA,mBAAmB,CAACQ,YAAD,EAAe;AAAA,aAAIE,QAAJ;AAAA,KAAf,CAAnB;AAEA,WAAOH,KAAK,CAACK,QAAN,IAAkB,IAAlB,GAAyB,IAAzB,GAAgC,aAAcf,KAAK,CAACgB,aAAN,CAAoBV,eAApB,EAAqC;AACtFW,MAAAA,KAAK,EAAEH;AAD+E,KAArC,EAElDJ,KAAK,CAACK,QAF4C,CAArD;AAGH;;AACD,SAAO,aAAcd,UAAU,CAACQ,kBAAD,CAA/B;AACH;AACD,OAAO,SAASS,yBAAT,CAAmCV,UAAnC,EAA+C;AAClD,WAASW,gBAAT,CAA0BT,KAA1B,EAAiCC,YAAjC,EAA+C;AAAA,oBACjBP,QAAQ,CAAC,KAAD,CADS;AAAA;AAAA,QACpCgB,MADoC;AAAA,QAC5BC,OAD4B;;AAAA,QAEnCR,QAFmC,GAErBL,UAAU,CAACE,KAAD,EAAQW,OAAR,CAAV,CAA2BT,OAFN,CAEnCC,QAFmC;AAG3CV,IAAAA,mBAAmB,CAACQ,YAAD,EAAe;AAAA,aAAIE,QAAJ;AAAA,KAAf,CAAnB;AAEAX,IAAAA,SAAS,CAAC,SAASoB,aAAT,GAAyB;AAC/B,UAAIF,MAAJ,EAAY;AACRP,QAAAA,QAAQ,CAACU,MAAT;AACH;AACJ,KAJQ,EAIN,CACCV,QADD,EAECO,MAFD,EAGCV,KAAK,CAACK,QAHP,CAJM,CAAT,CAL2C,CAc3C;;AACA,QAAMS,WAAW,GAAGX,QAAQ,CAACY,YAA7B;AACA,WAAOD,WAAW,GAAG,aAAcnB,YAAY,CAACK,KAAK,CAACK,QAAP,EAAiBS,WAAjB,CAA7B,GAA6D,IAA/E;AACH;;AACD,SAAO,aAAcvB,UAAU,CAACkB,gBAAD,CAA/B;AACH;AACD,OAAO,SAASO,mBAAT,CAA6BlB,UAA7B,EAAyC;AAC5C,WAASmB,aAAT,CAAuBjB,KAAvB,EAA8BC,YAA9B,EAA4C;AAAA,QAChCE,QADgC,GAClBL,UAAU,CAACE,KAAD,CAAV,CAAkBE,OADA,CAChCC,QADgC;AAExCV,IAAAA,mBAAmB,CAACQ,YAAD,EAAe;AAAA,aAAIE,QAAJ;AAAA,KAAf,CAAnB;AAEA,WAAO,IAAP;AACH;;AACD,SAAO,aAAcZ,UAAU,CAAC0B,aAAD,CAA/B;AACH","sourcesContent":["import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context.js';\nexport function createContainerComponent(useElement) {\n    function ContainerComponent(props, forwardedRef) {\n        const { instance , context  } = useElement(props).current;\n        useImperativeHandle(forwardedRef, ()=>instance\n        );\n        return props.children == null ? null : /*#__PURE__*/ React.createElement(LeafletProvider, {\n            value: context\n        }, props.children);\n    }\n    return /*#__PURE__*/ forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n    function OverlayComponent(props, forwardedRef) {\n        const [isOpen, setOpen] = useState(false);\n        const { instance  } = useElement(props, setOpen).current;\n        useImperativeHandle(forwardedRef, ()=>instance\n        );\n        useEffect(function updateOverlay() {\n            if (isOpen) {\n                instance.update();\n            }\n        }, [\n            instance,\n            isOpen,\n            props.children\n        ]);\n        // @ts-ignore _contentNode missing in type definition\n        const contentNode = instance._contentNode;\n        return contentNode ? /*#__PURE__*/ createPortal(props.children, contentNode) : null;\n    }\n    return /*#__PURE__*/ forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n    function LeafComponent(props, forwardedRef) {\n        const { instance  } = useElement(props).current;\n        useImperativeHandle(forwardedRef, ()=>instance\n        );\n        return null;\n    }\n    return /*#__PURE__*/ forwardRef(LeafComponent);\n}\n"]},"metadata":{},"sourceType":"module"}