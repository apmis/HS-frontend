{"ast":null,"code":"var _require = require('@feathersjs/commons'),\n    _ = _require._;\n\nvar assignArguments = function assignArguments(context) {\n  var service = context.service,\n      method = context.method;\n  var parameters = service.methods[method];\n  context.arguments.forEach(function (value, index) {\n    context[parameters[index]] = value;\n  });\n\n  if (!context.params) {\n    context.params = {};\n  }\n\n  return context;\n};\n\nvar validate = function validate(context) {\n  var service = context.service,\n      method = context.method,\n      path = context.path;\n  var parameters = service.methods[method];\n\n  if (parameters.includes('id') && context.id === undefined) {\n    throw new Error(\"An id must be provided to the '\".concat(path, \".\").concat(method, \"' method\"));\n  }\n\n  if (parameters.includes('data') && !_.isObjectOrArray(context.data)) {\n    throw new Error(\"A data object must be provided to the '\".concat(path, \".\").concat(method, \"' method\"));\n  }\n\n  return context;\n};\n\nmodule.exports = [assignArguments, validate];","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/@feathersjs/feathers/lib/hooks/base.js"],"names":["require","_","assignArguments","context","service","method","parameters","methods","arguments","forEach","value","index","params","validate","path","includes","id","undefined","Error","isObjectOrArray","data","module","exports"],"mappings":"eAAcA,OAAO,CAAC,qBAAD,C;IAAbC,C,YAAAA,C;;AAER,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,OAAO,EAAI;AAAA,MACzBC,OADyB,GACLD,OADK,CACzBC,OADyB;AAAA,MAChBC,MADgB,GACLF,OADK,CAChBE,MADgB;AAEjC,MAAMC,UAAU,GAAGF,OAAO,CAACG,OAAR,CAAgBF,MAAhB,CAAnB;AAEAF,EAAAA,OAAO,CAACK,SAAR,CAAkBC,OAAlB,CAA0B,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC1CR,IAAAA,OAAO,CAACG,UAAU,CAACK,KAAD,CAAX,CAAP,GAA6BD,KAA7B;AACD,GAFD;;AAIA,MAAI,CAACP,OAAO,CAACS,MAAb,EAAqB;AACnBT,IAAAA,OAAO,CAACS,MAAR,GAAiB,EAAjB;AACD;;AAED,SAAOT,OAAP;AACD,CAbD;;AAeA,IAAMU,QAAQ,GAAG,SAAXA,QAAW,CAAAV,OAAO,EAAI;AAAA,MAClBC,OADkB,GACQD,OADR,CAClBC,OADkB;AAAA,MACTC,MADS,GACQF,OADR,CACTE,MADS;AAAA,MACDS,IADC,GACQX,OADR,CACDW,IADC;AAE1B,MAAMR,UAAU,GAAGF,OAAO,CAACG,OAAR,CAAgBF,MAAhB,CAAnB;;AAEA,MAAIC,UAAU,CAACS,QAAX,CAAoB,IAApB,KAA6BZ,OAAO,CAACa,EAAR,KAAeC,SAAhD,EAA2D;AACzD,UAAM,IAAIC,KAAJ,0CAA4CJ,IAA5C,cAAoDT,MAApD,cAAN;AACD;;AAED,MAAIC,UAAU,CAACS,QAAX,CAAoB,MAApB,KAA+B,CAACd,CAAC,CAACkB,eAAF,CAAkBhB,OAAO,CAACiB,IAA1B,CAApC,EAAqE;AACnE,UAAM,IAAIF,KAAJ,kDAAoDJ,IAApD,cAA4DT,MAA5D,cAAN;AACD;;AAED,SAAOF,OAAP;AACD,CAbD;;AAeAkB,MAAM,CAACC,OAAP,GAAiB,CAAEpB,eAAF,EAAmBW,QAAnB,CAAjB","sourcesContent":["const { _ } = require('@feathersjs/commons');\n\nconst assignArguments = context => {\n  const { service, method } = context;\n  const parameters = service.methods[method];\n\n  context.arguments.forEach((value, index) => {\n    context[parameters[index]] = value;\n  });\n\n  if (!context.params) {\n    context.params = {};\n  }\n\n  return context;\n};\n\nconst validate = context => {\n  const { service, method, path } = context;\n  const parameters = service.methods[method];\n\n  if (parameters.includes('id') && context.id === undefined) {\n    throw new Error(`An id must be provided to the '${path}.${method}' method`);\n  }\n\n  if (parameters.includes('data') && !_.isObjectOrArray(context.data)) {\n    throw new Error(`A data object must be provided to the '${path}.${method}' method`);\n  }\n\n  return context;\n};\n\nmodule.exports = [ assignArguments, validate ];\n"]},"metadata":{},"sourceType":"script"}