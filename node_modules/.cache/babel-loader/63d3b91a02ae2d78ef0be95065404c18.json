{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.populateHeader = void 0;\n\nvar populateHeader = function populateHeader() {\n  return function (context) {\n    var app = context.app,\n        accessToken = context.params.accessToken;\n    var authentication = app.authentication; // Set REST header if necessary\n\n    if (app.rest && accessToken) {\n      var _authentication$optio = authentication.options,\n          scheme = _authentication$optio.scheme,\n          header = _authentication$optio.header;\n      var authHeader = \"\".concat(scheme, \" \").concat(accessToken);\n      context.params.headers = Object.assign({}, _defineProperty({}, header, authHeader), context.params.headers);\n    }\n\n    return context;\n  };\n};\n\nexports.populateHeader = populateHeader;","map":{"version":3,"sources":["../../src/hooks/populate-header.ts"],"names":[],"mappings":";;;;;;;;;AAEO,IAAM,cAAc,GAAG,SAAjB,cAAiB,GAAK;AACjC,SAAO,UAAC,OAAD,EAAyB;AAAA,QACtB,GADsB,GACW,OADX,CACtB,GADsB;AAAA,QACP,WADO,GACW,OADX,CACjB,MADiB,CACP,WADO;AAE9B,QAAM,cAAc,GAAG,GAAG,CAAC,cAA3B,CAF8B,CAI9B;;AACA,QAAI,GAAG,CAAC,IAAJ,IAAY,WAAhB,EAA6B;AAAA,kCACA,cAAc,CAAC,OADf;AAAA,UACnB,MADmB,yBACnB,MADmB;AAAA,UACX,MADW,yBACX,MADW;AAE3B,UAAM,UAAU,aAAM,MAAN,cAAgB,WAAhB,CAAhB;AAEA,MAAA,OAAO,CAAC,MAAR,CAAe,OAAf,GAAyB,MAAM,CAAC,MAAP,CAAc,EAAd,sBACtB,MADsB,EACb,UADa,GAEtB,OAAO,CAAC,MAAR,CAAe,OAFO,CAAzB;AAGD;;AAED,WAAO,OAAP;AACD,GAfD;AAgBD,CAjBM;;AAAM,OAAA,CAAA,cAAA,GAAc,cAAd","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.populateHeader = void 0;\nconst populateHeader = () => {\n    return (context) => {\n        const { app, params: { accessToken } } = context;\n        const authentication = app.authentication;\n        // Set REST header if necessary\n        if (app.rest && accessToken) {\n            const { scheme, header } = authentication.options;\n            const authHeader = `${scheme} ${accessToken}`;\n            context.params.headers = Object.assign({}, {\n                [header]: authHeader\n            }, context.params.headers);\n        }\n        return context;\n    };\n};\nexports.populateHeader = populateHeader;\n//# sourceMappingURL=populate-header.js.map"]},"metadata":{},"sourceType":"script"}