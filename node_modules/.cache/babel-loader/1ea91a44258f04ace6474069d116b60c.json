{"ast":null,"code":"import io from'socket.io-client';import feathers from'@feathersjs/feathers';import socketio from'@feathersjs/socketio-client';import authentication from'@feathersjs/authentication-client';var herok='https://healthstack-backend.herokuapp.com';var url='http://localhost:3035';var API=process.env.NODE_ENV!=='production'?url:'https://healthstack-backend.herokuapp.com';var socket=io(herok,{transports:['websocket'],forceNew:true});var client=feathers();client.configure(socketio(socket,{timeout:700000}));client.configure(authentication({storage:window.localStorage}));//client.configure(restClient.axios(axios));\nexport default client;","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/src/feathers.js"],"names":["io","feathers","socketio","authentication","herok","url","API","process","env","NODE_ENV","socket","transports","forceNew","client","configure","timeout","storage","window","localStorage"],"mappings":"AAAA,MAAOA,CAAAA,EAAP,KAAe,kBAAf,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,mCAA3B,CAEA,GAAMC,CAAAA,KAAK,CAAE,2CAAb,CACA,GAAMC,CAAAA,GAAG,CAAE,uBAAX,CACA,GAAMC,CAAAA,GAAG,CAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAAzB,CAAyCJ,GAAzC,CAA8C,2CAA1D,CACA,GAAMK,CAAAA,MAAM,CAACV,EAAE,CAACI,KAAD,CAAQ,CACnBO,UAAU,CAAE,CAAC,WAAD,CADO,CAEnBC,QAAQ,CAAE,IAFS,CAAR,CAAf,CAIA,GAAMC,CAAAA,MAAM,CAACZ,QAAQ,EAArB,CACAY,MAAM,CAACC,SAAP,CAAiBZ,QAAQ,CAACQ,MAAD,CAAQ,CAACK,OAAO,CAAC,MAAT,CAAR,CAAzB,EACAF,MAAM,CAACC,SAAP,CAAiBX,cAAc,CAAC,CAC5Ba,OAAO,CAACC,MAAM,CAACC,YADa,CAAD,CAA/B,EAGA;AAEA,cAAeL,CAAAA,MAAf","sourcesContent":["import io from 'socket.io-client'\nimport feathers from '@feathersjs/feathers'\nimport socketio from '@feathersjs/socketio-client'\nimport authentication from '@feathersjs/authentication-client'\n\nconst herok= 'https://healthstack-backend.herokuapp.com'\nconst url= 'http://localhost:3035'\nconst API = process.env.NODE_ENV !== 'production' ?  url :'https://healthstack-backend.herokuapp.com' ;\nconst socket=io(herok, {\n    transports: ['websocket'],\n    forceNew: true                                                                \n  })\nconst client=feathers()\nclient.configure(socketio(socket,{timeout:700000}))\nclient.configure(authentication({\n    storage:window.localStorage\n}))  \n//client.configure(restClient.axios(axios));\n\nexport default client"]},"metadata":{},"sourceType":"module"}