{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/mfybaby/Documents/HealthStack2/HS-frontend/src/components/Epidemiology/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { MapContainer, TileLayer, useMap, Marker, Popup, GeoJSON } from 'react-leaflet';\nimport L, { Icon } from 'leaflet';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport * as hospData from \"../../data/nigeriahealthfacilities.json\";\nimport 'leaflet/dist/leaflet.css';\nvar DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow\n});\n/* \nlet iconImage =L.icon({\n    iconUrl: icon,\n}) */\n//const fetcher=(...args)=>fetch(..args).then(response=>resp.json())\n//inside component\n//const url = \"link\"\n//const {data, error}=useSwr(url,{fetcher})\n//const hosp=data && !error?data.slice(0,100)\n\nL.Marker.prototype.options.icon = DefaultIcon;\nexport default function Map() {\n  _s();\n\n  var _useState = useState([9.0820, 8.6753]),\n      _useState2 = _slicedToArray(_useState, 2),\n      position = _useState2[0],\n      setPosition = _useState2[1];\n\n  var _useState3 = useState([7.418090, 3.905210]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      position2 = _useState4[0],\n      setPosition2 = _useState4[1];\n\n  var _useState5 = useState(5),\n      _useState6 = _slicedToArray(_useState5, 2),\n      zoom = _useState6[0],\n      setZoom = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      scrollwh = _useState8[0],\n      setScrollWl = _useState8[1];\n\n  var hpdata = hospData.features.slice(0, 100);\n  useEffect(function () {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(position);\n      setPosition2([position.coords.latitude, position.coords.longitude]);\n    }); //console.log(hospData.features.length)\n\n    return function () {// setPosition([9.081999,8.675277])\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      className: \"map\",\n      center: position,\n      zoom: zoom,\n      scrollWheelZoom: scrollwh,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: hpdata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"NyUjVmuYQeMjf+5+f2mLtNY98aA=\");\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/src/components/Epidemiology/Map.js"],"names":["React","useState","useContext","useEffect","MapContainer","TileLayer","useMap","Marker","Popup","GeoJSON","L","Icon","icon","iconShadow","hospData","DefaultIcon","iconUrl","shadowUrl","prototype","options","Map","position","setPosition","position2","setPosition2","zoom","setZoom","scrollwh","setScrollWl","hpdata","features","slice","navigator","geolocation","getCurrentPosition","console","log","coords","latitude","longitude"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,UAAvB,EAAkCC,SAAlC,QAAkD,OAAlD;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,MAA1C,EAAkDC,KAAlD,EAAyDC,OAAzD,QAAwE,eAAxE;AACA,OAAOC,CAAP,IAAWC,IAAX,QAAsB,SAAtB;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAO,KAAMC,QAAb,MAA2B,yCAA3B;AACA,OAAO,0BAAP;AACA,IAAIC,WAAW,GAAGL,CAAC,CAACE,IAAF,CAAO;AACrBI,EAAAA,OAAO,EAAEJ,IADY;AAErBK,EAAAA,SAAS,EAAEJ;AAFU,CAAP,CAAlB;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAH,CAAC,CAACH,MAAF,CAASW,SAAT,CAAmBC,OAAnB,CAA2BP,IAA3B,GAAiCG,WAAjC;AAEA,eAAe,SAASK,GAAT,GAAe;AAAA;;AAAA,kBACInB,QAAQ,CAAC,CAAC,MAAD,EAAQ,MAAR,CAAD,CADZ;AAAA;AAAA,MACnBoB,QADmB;AAAA,MACTC,WADS;;AAAA,mBAEMrB,QAAQ,CAAC,CAAC,QAAD,EAAU,QAAV,CAAD,CAFd;AAAA;AAAA,MAEnBsB,SAFmB;AAAA,MAERC,YAFQ;;AAAA,mBAGJvB,QAAQ,CAAC,CAAD,CAHJ;AAAA;AAAA,MAGnBwB,IAHmB;AAAA,MAGbC,OAHa;;AAAA,mBAIIzB,QAAQ,CAAC,KAAD,CAJZ;AAAA;AAAA,MAInB0B,QAJmB;AAAA,MAITC,WAJS;;AAK1B,MAAMC,MAAM,GAACf,QAAQ,CAACgB,QAAT,CAAkBC,KAAlB,CAAwB,CAAxB,EAA0B,GAA1B,CAAb;AAEJ5B,EAAAA,SAAS,CAAC,YAAM;AAEb6B,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACb,QAAD,EAAY;AAClDc,MAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AACAG,MAAAA,YAAY,CAAC,CAAEH,QAAQ,CAACgB,MAAT,CAAgBC,QAAlB,EAA4BjB,QAAQ,CAACgB,MAAT,CAAgBE,SAA5C,CAAD,CAAZ;AACH,KAHA,EAFa,CAMd;;AAEA,WAAO,YAAM,CACZ;AACA,KAFD;AAGD,GAXQ,EAWN,EAXM,CAAT;AAcE,sBACE;AAAA,2BACI,QAAC,YAAD;AAAc,MAAA,SAAS,EAAC,KAAxB;AAA8B,MAAA,MAAM,EAAElB,QAAtC;AAAiD,MAAA,IAAI,EAAEI,IAAvD;AAA6D,MAAA,eAAe,EAAEE,QAA9E;AAAA,8BACA,QAAC,SAAD;AACI,QAAA,WAAW,EAAC,yFADhB;AAEI,QAAA,GAAG,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,cADA,eAKA,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEE;AAAf;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAtCuBT,G;;KAAAA,G","sourcesContent":["import React,{useState,useContext,useEffect} from 'react'\nimport { MapContainer, TileLayer, useMap, Marker, Popup, GeoJSON } from 'react-leaflet'\nimport L ,{Icon} from 'leaflet';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport *  as hospData from \"../../data/nigeriahealthfacilities.json\"\nimport 'leaflet/dist/leaflet.css'\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow\n});\n\n/* \nlet iconImage =L.icon({\n    iconUrl: icon,\n}) */\n//const fetcher=(...args)=>fetch(..args).then(response=>resp.json())\n//inside component\n//const url = \"link\"\n//const {data, error}=useSwr(url,{fetcher})\n\n//const hosp=data && !error?data.slice(0,100)\nL.Marker.prototype.options.icon =DefaultIcon;\n\nexport default function Map() {\n    const [position, setPosition]=useState([9.0820,8.6753])\n    const [position2, setPosition2]=useState([7.418090,3.905210])\n    const [zoom, setZoom]=useState(5)\n    const [scrollwh, setScrollWl]=useState(false)\n    const hpdata=hospData.features.slice(0,100)\n\nuseEffect(() => {\n   \n   navigator.geolocation.getCurrentPosition((position)=>{\n      console.log(position)\n      setPosition2([ position.coords.latitude, position.coords.longitude  ])\n  })\n  //console.log(hospData.features.length)\n\n  return () => {\n   // setPosition([9.081999,8.675277])\n  }\n}, [])\n\n\n  return (\n    <div>\n        <MapContainer className=\"map\" center={position}  zoom={zoom} scrollWheelZoom={scrollwh}>\n        <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <GeoJSON data={hpdata}/>\n      {/*  <Marker position={position} >\n            <Popup>\n            A pretty CSS3 popup. <br /> Easily customizable.\n            </Popup>\n        </Marker>  */}\n        </MapContainer>\n    \n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}