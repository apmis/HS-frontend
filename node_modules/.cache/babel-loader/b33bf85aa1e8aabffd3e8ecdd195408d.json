{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable */import React,{useState,useContext,useEffect,useRef,useCallback}from'react';import client from'../../feathers';import{DebounceInput}from'react-debounce-input';import{useForm}from\"react-hook-form\";import{DocumentClassList}from'./DocumentClass';//import {useHistory} from 'react-router-dom'\nimport{UserContext,ObjectContext}from'../../context';import{toast}from'bulma-toast';import AsthmaIntake from'./AsthmaIntake';import PulmonologyIntake from'./Pulmonology';import NewPatientConsult from'./NewPatientConsult';import ProgressNote from'./ProgressNote';import MedicationList from'./MedicationList';import Dropzone from'react-dropzone-uploader';//import 'react-dropzone-uploader/dist/styles.css'\nexport default function Clerking(){var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,setValue=_useForm.setValue,getValues=_useForm.getValues;//, watch, errors, reset \nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),success=_useState4[0],setSuccess=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),message=_useState6[0],setMessage=_useState6[1];// eslint-disable-next-line\nvar _useState7=useState(),_useState8=_slicedToArray(_useState7,2),facility=_useState8[0],setFacility=_useState8[1];var ClientServ=client.service('clinicaldocument');var uploadserv=client.service('upload');//const history = useHistory()\nvar _useContext=useContext(UserContext),user=_useContext.user;//,setUser\n// eslint-disable-next-line\nvar _useState9=useState(),_useState10=_slicedToArray(_useState9,2),currentUser=_useState10[0],setCurrentUser=_useState10[1];var _useContext2=useContext(ObjectContext),state=_useContext2.state;var _useState11=useState(\"Draft\"),_useState12=_slicedToArray(_useState11,2),docStatus=_useState12[0],setDocStatus=_useState12[1];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),selectedFile=_useState14[0],setSelectedFile=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isFilePicked=_useState16[0],setIsFilePicked=_useState16[1];var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var formData,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(data.files);formData=new FormData();formData.append(\"files\",data.files[0]);_context.next=5;return fetch('http://localhost:3035/upload',{method:\"POST\",body:formData}).then(function(resp){/* resp = resp.json */console.log(JSON.stringify(resp));}).catch(function(err){console.log(err);});case 5:res=_context.sent;case 6:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),encType:\"multipart/form-data\",children:[/*#__PURE__*/_jsx(\"input\",{ref:register,type:\"file\",name:\"files\"}),/*#__PURE__*/_jsx(\"button\",{children:\"Submit\"})]});}","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/src/components/EncounterMgt/Clerking.js"],"names":["React","useState","useContext","useEffect","useRef","useCallback","client","DebounceInput","useForm","DocumentClassList","UserContext","ObjectContext","toast","AsthmaIntake","PulmonologyIntake","NewPatientConsult","ProgressNote","MedicationList","Dropzone","Clerking","register","handleSubmit","setValue","getValues","error","setError","success","setSuccess","message","setMessage","facility","setFacility","ClientServ","service","uploadserv","user","currentUser","setCurrentUser","state","docStatus","setDocStatus","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","onSubmit","data","console","log","files","formData","FormData","append","fetch","method","body","then","resp","JSON","stringify","catch","err","res"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, {useState,useContext, useEffect,useRef, useCallback} from 'react'\nimport client from '../../feathers'\nimport {DebounceInput} from 'react-debounce-input';\nimport { useForm} from \"react-hook-form\";\nimport {DocumentClassList} from './DocumentClass'\n//import {useHistory} from 'react-router-dom'\nimport {UserContext,ObjectContext} from '../../context'\nimport {toast} from 'bulma-toast'\nimport AsthmaIntake from './AsthmaIntake';\nimport PulmonologyIntake from './Pulmonology';\nimport NewPatientConsult from './NewPatientConsult';\nimport ProgressNote from './ProgressNote';\nimport MedicationList from './MedicationList';\nimport Dropzone from 'react-dropzone-uploader'\n//import 'react-dropzone-uploader/dist/styles.css'\n\n\nexport default function Clerking(){\n    const { register, handleSubmit,setValue , getValues } = useForm(); //, watch, errors, reset \n    const [error, setError] =useState(false)\n    const [success, setSuccess] =useState(false)\n    const [message,setMessage] = useState(\"\")\n    // eslint-disable-next-line\n    const [facility,setFacility] = useState()\n    const ClientServ=client.service('clinicaldocument')\n    const uploadserv=client.service('upload')\n    //const history = useHistory()\n    const {user} = useContext(UserContext) //,setUser\n    // eslint-disable-next-line\n    const [currentUser,setCurrentUser] = useState()\n    const {state}=useContext(ObjectContext)\n    const [docStatus,setDocStatus] = useState(\"Draft\")\n    const [selectedFile, setSelectedFile] = useState();\n\tconst [isFilePicked, setIsFilePicked] = useState(false)\n\n\n  const onSubmit= async(data)=>{\n      console.log(data.files)\n       const formData = new FormData()\n       formData.append(\"files\", data.files[0])\n       const res= await fetch('http://localhost:3035/upload',{\n           method:\"POST\",\n           body:formData\n       }).then((resp)=>{ \n           /* resp = resp.json */\n            console.log(JSON.stringify(resp))\n        })\n       .catch((err)=>{console.log(err)})\n       \n     /*  uploadserv.create(data.file,{\n        headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n      }) */\n  }\n\n    return(\n        <form onSubmit={handleSubmit(onSubmit)} encType=\"multipart/form-data\">\n            <input ref={register} type=\"file\" name=\"files\" />\n            <button>Submit</button>\n        </form>\n    )\n\n  \n}"]},"metadata":{},"sourceType":"module"}