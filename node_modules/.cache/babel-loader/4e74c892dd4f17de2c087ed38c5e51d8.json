{"ast":null,"code":"var debug = require('debug')('feathers:application');\n\nvar _require = require('@feathersjs/commons'),\n    stripSlashes = _require.stripSlashes;\n\nvar Uberproto = require('uberproto');\n\nvar events = require('./events');\n\nvar hooks = require('./hooks');\n\nvar version = require('./version');\n\nvar Proto = Uberproto.extend({\n  create: null\n});\nvar application = {\n  init: function init() {\n    Object.assign(this, {\n      version: version,\n      methods: ['find', 'get', 'create', 'update', 'patch', 'remove'],\n      mixins: [],\n      services: {},\n      providers: [],\n      _setup: false,\n      settings: {}\n    });\n    this.configure(hooks());\n    this.configure(events());\n  },\n  get: function get(name) {\n    return this.settings[name];\n  },\n  set: function set(name, value) {\n    this.settings[name] = value;\n    return this;\n  },\n  disable: function disable(name) {\n    this.settings[name] = false;\n    return this;\n  },\n  disabled: function disabled(name) {\n    return !this.settings[name];\n  },\n  enable: function enable(name) {\n    this.settings[name] = true;\n    return this;\n  },\n  enabled: function enabled(name) {\n    return !!this.settings[name];\n  },\n  configure: function configure(fn) {\n    fn.call(this, this);\n    return this;\n  },\n  service: function service(path, _service) {\n    if (typeof _service !== 'undefined') {\n      throw new Error('Registering a new service with `app.service(path, service)` is no longer supported. Use `app.use(path, service)` instead.');\n    }\n\n    var location = stripSlashes(path) || '/';\n    var current = this.services[location];\n\n    if (typeof current === 'undefined' && typeof this.defaultService === 'function') {\n      return this.use(location, this.defaultService(location)).service(location);\n    }\n\n    return current;\n  },\n  use: function use(path, service) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (typeof path !== 'string') {\n      throw new Error(\"'\".concat(path, \"' is not a valid service path.\"));\n    }\n\n    var location = stripSlashes(path) || '/';\n    var isSubApp = typeof service.service === 'function' && service.services;\n    var isService = this.methods.concat('setup').some(function (name) {\n      return typeof service[name] === 'function';\n    });\n\n    if (isSubApp) {\n      var subApp = service;\n      Object.keys(subApp.services).forEach(function (subPath) {\n        return _this.use(\"\".concat(location, \"/\").concat(subPath), subApp.service(subPath));\n      });\n      return this;\n    }\n\n    if (!isService) {\n      throw new Error(\"Invalid service object passed for path `\".concat(location, \"`\"));\n    } // If the service is already Uberproto'd use it directly\n\n\n    var protoService = Proto.isPrototypeOf(service) ? service : Proto.extend(service);\n    debug(\"Registering new service at `\".concat(location, \"`\")); // Add all the mixins\n\n    this.mixins.forEach(function (fn) {\n      return fn.call(_this, protoService, location, options);\n    });\n\n    if (typeof protoService._setup === 'function') {\n      protoService._setup(this, location);\n    } // Run the provider functions to register the service\n\n\n    this.providers.forEach(function (provider) {\n      return provider.call(_this, protoService, location, options);\n    }); // If we ran setup already, set this service up explicitly\n\n    if (this._isSetup && typeof protoService.setup === 'function') {\n      debug(\"Setting up service for `\".concat(location, \"`\"));\n      protoService.setup(this, location);\n    }\n\n    this.services[location] = protoService;\n    return this;\n  },\n  setup: function setup() {\n    var _this2 = this;\n\n    // Setup each service (pass the app so that they can look up other services etc.)\n    Object.keys(this.services).forEach(function (path) {\n      var service = _this2.services[path];\n      debug(\"Setting up service for `\".concat(path, \"`\"));\n\n      if (typeof service.setup === 'function') {\n        service.setup(_this2, path);\n      }\n    });\n    this._isSetup = true;\n    return this;\n  }\n};\nmodule.exports = application;","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/@feathersjs/feathers/lib/application.js"],"names":["debug","require","stripSlashes","Uberproto","events","hooks","version","Proto","extend","create","application","init","Object","assign","methods","mixins","services","providers","_setup","settings","configure","get","name","set","value","disable","disabled","enable","enabled","fn","call","service","path","Error","location","current","defaultService","use","options","isSubApp","isService","concat","some","subApp","keys","forEach","subPath","protoService","isPrototypeOf","provider","_isSetup","setup","module","exports"],"mappings":"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","sourcesContent":["const debug = require('debug')('feathers:application');\nconst { stripSlashes } = require('@feathersjs/commons');\n\nconst Uberproto = require('uberproto');\nconst events = require('./events');\nconst hooks = require('./hooks');\nconst version = require('./version');\n\nconst Proto = Uberproto.extend({\n  create: null\n});\n\nconst application = {\n  init () {\n    Object.assign(this, {\n      version,\n      methods: [\n        'find', 'get', 'create', 'update', 'patch', 'remove'\n      ],\n      mixins: [],\n      services: {},\n      providers: [],\n      _setup: false,\n      settings: {}\n    });\n\n    this.configure(hooks());\n    this.configure(events());\n  },\n\n  get (name) {\n    return this.settings[name];\n  },\n\n  set (name, value) {\n    this.settings[name] = value;\n    return this;\n  },\n\n  disable (name) {\n    this.settings[name] = false;\n    return this;\n  },\n\n  disabled (name) {\n    return !this.settings[name];\n  },\n\n  enable (name) {\n    this.settings[name] = true;\n    return this;\n  },\n\n  enabled (name) {\n    return !!this.settings[name];\n  },\n\n  configure (fn) {\n    fn.call(this, this);\n\n    return this;\n  },\n\n  service (path, service) {\n    if (typeof service !== 'undefined') {\n      throw new Error('Registering a new service with `app.service(path, service)` is no longer supported. Use `app.use(path, service)` instead.');\n    }\n\n    const location = stripSlashes(path) || '/';\n    const current = this.services[location];\n\n    if (typeof current === 'undefined' && typeof this.defaultService === 'function') {\n      return this.use(location, this.defaultService(location))\n        .service(location);\n    }\n\n    return current;\n  },\n\n  use (path, service, options = {}) {\n    if (typeof path !== 'string') {\n      throw new Error(`'${path}' is not a valid service path.`);\n    }\n\n    const location = stripSlashes(path) || '/';\n    const isSubApp = typeof service.service === 'function' && service.services;\n    const isService = this.methods.concat('setup').some(name => typeof service[name] === 'function');\n\n    if (isSubApp) {\n      const subApp = service;\n\n      Object.keys(subApp.services).forEach(subPath =>\n        this.use(`${location}/${subPath}`, subApp.service(subPath))\n      );\n\n      return this;\n    }\n\n    if (!isService) {\n      throw new Error(`Invalid service object passed for path \\`${location}\\``);\n    }\n\n    // If the service is already Uberproto'd use it directly\n    const protoService = Proto.isPrototypeOf(service) ? service : Proto.extend(service);\n\n    debug(`Registering new service at \\`${location}\\``);\n\n    // Add all the mixins\n    this.mixins.forEach(fn => fn.call(this, protoService, location, options));\n\n    if (typeof protoService._setup === 'function') {\n      protoService._setup(this, location);\n    }\n\n    // Run the provider functions to register the service\n    this.providers.forEach(provider =>\n      provider.call(this, protoService, location, options)\n    );\n\n    // If we ran setup already, set this service up explicitly\n    if (this._isSetup && typeof protoService.setup === 'function') {\n      debug(`Setting up service for \\`${location}\\``);\n      protoService.setup(this, location);\n    }\n\n    this.services[location] = protoService;\n\n    return this;\n  },\n\n  setup () {\n    // Setup each service (pass the app so that they can look up other services etc.)\n    Object.keys(this.services).forEach(path => {\n      const service = this.services[path];\n\n      debug(`Setting up service for \\`${path}\\``);\n\n      if (typeof service.setup === 'function') {\n        service.setup(this, path);\n      }\n    });\n\n    this._isSetup = true;\n\n    return this;\n  }\n};\n\nmodule.exports = application;\n"]},"metadata":{},"sourceType":"script"}