{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.authentication = void 0;\n\nvar commons_1 = require(\"@feathersjs/commons\");\n\nvar authentication = function authentication() {\n  return function (context) {\n    var app = context.app,\n        params = context.params,\n        path = context.path,\n        method = context.method,\n        service = context.app.authentication;\n\n    if (commons_1.stripSlashes(service.options.path) === path && method === 'create') {\n      return context;\n    }\n\n    return Promise.resolve(app.get('authentication')).then(function (authResult) {\n      if (authResult) {\n        context.params = Object.assign({}, authResult, params);\n      }\n\n      return context;\n    });\n  };\n};\n\nexports.authentication = authentication;","map":{"version":3,"sources":["../../src/hooks/authentication.ts"],"names":[],"mappings":";;;;;;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AAEO,IAAM,cAAc,GAAG,SAAjB,cAAiB,GAAK;AACjC,SAAO,UAAC,OAAD,EAAyB;AAAA,QACtB,GADsB,GAC0C,OAD1C,CACtB,GADsB;AAAA,QACjB,MADiB,GAC0C,OAD1C,CACjB,MADiB;AAAA,QACT,IADS,GAC0C,OAD1C,CACT,IADS;AAAA,QACH,MADG,GAC0C,OAD1C,CACH,MADG;AAAA,QAC4B,OAD5B,GAC0C,OAD1C,CACK,GADL,CACY,cADZ;;AAG9B,QAAI,SAAA,CAAA,YAAA,CAAa,OAAO,CAAC,OAAR,CAAgB,IAA7B,MAAuC,IAAvC,IAA+C,MAAM,KAAK,QAA9D,EAAwE;AACtE,aAAO,OAAP;AACD;;AAED,WAAO,OAAO,CAAC,OAAR,CAAgB,GAAG,CAAC,GAAJ,CAAQ,gBAAR,CAAhB,EAA2C,IAA3C,CAAgD,UAAA,UAAU,EAAG;AAClE,UAAI,UAAJ,EAAgB;AACd,QAAA,OAAO,CAAC,MAAR,GAAiB,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,UAAlB,EAA8B,MAA9B,CAAjB;AACD;;AAED,aAAO,OAAP;AACD,KANM,CAAP;AAOD,GAdD;AAeD,CAhBM;;AAAM,OAAA,CAAA,cAAA,GAAc,cAAd","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.authentication = void 0;\nconst commons_1 = require(\"@feathersjs/commons\");\nconst authentication = () => {\n    return (context) => {\n        const { app, params, path, method, app: { authentication: service } } = context;\n        if (commons_1.stripSlashes(service.options.path) === path && method === 'create') {\n            return context;\n        }\n        return Promise.resolve(app.get('authentication')).then(authResult => {\n            if (authResult) {\n                context.params = Object.assign({}, authResult, params);\n            }\n            return context;\n        });\n    };\n};\nexports.authentication = authentication;\n//# sourceMappingURL=authentication.js.map"]},"metadata":{},"sourceType":"script"}