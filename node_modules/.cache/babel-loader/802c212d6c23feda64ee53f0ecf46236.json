{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/mfybaby/Documents/HealthStack2/HS-frontend/src/components/Finance/Payment.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport client from '../../feathers';\nimport { DebounceInput } from 'react-debounce-input';\nimport { useForm } from \"react-hook-form\"; //import {useHistory} from 'react-router-dom'\n\nimport { UserContext, ObjectContext } from '../../context';\nimport { toast } from 'bulma-toast';\nimport { format, formatDistanceToNowStrict } from 'date-fns';\nimport PaymentCreate from './PaymentCreate';\nimport PatientProfile from '../ClientMgt/PatientProfile';\n/* import {ProductCreate} from './Products' */\n// eslint-disable-next-line\n//const searchfacility={};\n\nimport { Accordion, AccordionItem, AccordionItemHeading, AccordionItemState, AccordionItemButton, AccordionItemPanel } from 'react-accessible-accordion'; // Demo styles, see 'Styles' section below for some notes on use.\n\nimport 'react-accessible-accordion/dist/fancy-example.css'; //import BillPrescriptionCreate from './BillPrescriptionCreate';\n\nexport default function Payment() {\n  _s();\n\n  //const {state}=useContext(ObjectContext) //,setState\n  // eslint-disable-next-line\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedProductEntry = _useState2[0],\n      setSelectedProductEntry = _useState2[1]; //const [showState,setShowState]=useState() //create|modify|detail\n\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1]; // eslint-disable-next-line\n\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      success = _useState6[0],\n      setSuccess = _useState6[1]; // eslint-disable-next-line\n\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var BillServ = client.service('bills'); //const history = useHistory()\n  // const {user,setUser} = useContext(UserContext)\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      facilities = _useState10[0],\n      setFacilities = _useState10[1]; // eslint-disable-next-line\n\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedOrders = _useState12[0],\n      setSelectedOrders = _useState12[1]; //\n  // eslint-disable-next-line\n\n\n  var _useContext = useContext(ObjectContext),\n      state = _useContext.state,\n      setState = _useContext.setState; // eslint-disable-next-line\n\n\n  var _useContext2 = useContext(UserContext),\n      user = _useContext2.user,\n      setUser = _useContext2.setUser;\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section remPadTop\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column is-6 \",\n        children: /*#__PURE__*/_jsxDEV(BillingList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column is-6 \",\n        children: state.financeModule.show === 'detail' && /*#__PURE__*/_jsxDEV(PaymentCreate, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Payment, \"Mk9XOkuYlZZ+sQgEtZDLm1YX/c0=\");\n\n_c = Payment;\nexport function BillingList() {\n  _s2();\n\n  var _this = this;\n\n  // const { register, handleSubmit, watch, errors } = useForm();\n  // eslint-disable-next-line\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      error = _useState14[0],\n      setError = _useState14[1]; // eslint-disable-next-line\n\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      success = _useState16[0],\n      setSuccess = _useState16[1]; // eslint-disable-next-line\n\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      message = _useState18[0],\n      setMessage = _useState18[1];\n\n  var BillServ = client.service('bills'); //const history = useHistory()\n  // const {user,setUser} = useContext(UserContext)\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      facilities = _useState20[0],\n      setFacilities = _useState20[1]; // eslint-disable-next-line\n\n\n  var _useState21 = useState(),\n      _useState22 = _slicedToArray(_useState21, 2),\n      selectedDispense = _useState22[0],\n      setSelectedDispense = _useState22[1]; //\n\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      selectedOrders = _useState24[0],\n      setSelectedOrders = _useState24[1]; // eslint-disable-next-line\n\n\n  var _useContext3 = useContext(ObjectContext),\n      state = _useContext3.state,\n      setState = _useContext3.setState; // eslint-disable-next-line\n\n\n  var _useContext4 = useContext(UserContext),\n      user = _useContext4.user,\n      setUser = _useContext4.setUser;\n\n  var _useState25 = useState(\"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      selectedFinance = _useState26[0],\n      setSelectedFinance = _useState26[1];\n\n  var _useState27 = useState(\"\"),\n      _useState28 = _slicedToArray(_useState27, 2),\n      expanded = _useState28[0],\n      setExpanded = _useState28[1];\n\n  var _useState29 = useState(\"\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      oldClient = _useState30[0],\n      setOldClient = _useState30[1];\n\n  var handleSelectedClient = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(Client) {\n      var newClientModule;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // await setSelectedClient(Client)\n              newClientModule = {\n                selectedClient: Client,\n                show: 'detail'\n              };\n              _context.next = 3;\n              return setState(function (prevstate) {\n                return _objectSpread(_objectSpread({}, prevstate), {}, {\n                  ClientModule: newClientModule\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSelectedClient(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleChoseClient = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(client, e, order) {\n      var newClient, newProductEntryModule;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setOldClient(client.clientname);\n              newClient = client.clientname;\n\n              if (oldClient !== newClient) {\n                //alert(\"New Client Onboard\")\n                //remove all checked clientsly\n                selectedOrders.forEach(function (el) {\n                  return el.checked = \"\";\n                });\n                setSelectedOrders([]);\n              } // console.log(e.target.checked)\n\n\n              order.checked = e.target.checked;\n              _context2.next = 6;\n              return handleSelectedClient(order.participantInfo.client);\n\n            case 6:\n              _context2.next = 8;\n              return setSelectedFinance(order);\n\n            case 8:\n              newProductEntryModule = {\n                selectedFinance: order,\n                show: 'detail',\n                state: e.target.checked\n              };\n              _context2.next = 11;\n              return setState(function (prevstate) {\n                return _objectSpread(_objectSpread({}, prevstate), {}, {\n                  financeModule: newProductEntryModule\n                });\n              });\n\n            case 11:\n              if (!e.target.checked) {\n                _context2.next = 16;\n                break;\n              }\n\n              _context2.next = 14;\n              return setSelectedOrders(function (prevstate) {\n                return prevstate.concat(order);\n              });\n\n            case 14:\n              _context2.next = 17;\n              break;\n\n            case 16:\n              setSelectedOrders(function (prevstate) {\n                return prevstate.filter(function (el) {\n                  return el._id !== order._id;\n                });\n              });\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleChoseClient(_x2, _x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleMedicationRow = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(ProductEntry, e) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleMedicationRow(_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleCreateNew = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var newProductEntryModule;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              newProductEntryModule = {\n                selectedDispense: {},\n                show: 'create'\n              };\n              _context4.next = 3;\n              return setState(function (prevstate) {\n                return _objectSpread(_objectSpread({}, prevstate), {}, {\n                  DispenseModule: newProductEntryModule\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleCreateNew() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleSearch = function handleSearch(val) {\n    var field = 'name'; //console.log(val)\n\n    BillServ.find({\n      query: {\n        'participantInfo.paymentmode.detail.principalName': {\n          $regex: val,\n          $options: 'i'\n        },\n\n        /*  $or:[\n             {\n        \n             } ,\n             {\n         'orderInfo.orderObj.clientname': {\n                     $regex:val,\n                     $options:'i'\n                 \n                 }\n             }\n             ], */\n        //order_category:\"Prescription\",\n        $or: [{\n          'participantInfo.paymentmode.type': \"Cash\"\n        }, {\n          'participantInfo.paymentmode.type': \"Family Cover\"\n        }],\n        'participantInfo.billingFacility': user.currentEmployee.facilityDetail._id,\n        billing_status: {\n          $ne: \"Fully Paid\"\n        },\n        //set to not equal to \"fully paid\" // need to set this finally\n        // storeId:state.StoreModule.selectedStore._id,\n        //facility:user.currentEmployee.facilityDetail._id || \"\",\n        $limit: 10,\n        $sort: {\n          createdAt: -1\n        }\n      }\n    }).then(function (res) {\n      console.log(res);\n      setFacilities(res.groupedOrder);\n      setMessage(\" ProductEntry  fetched successfully\");\n      setSuccess(true);\n    }).catch(function (err) {\n      // console.log(err)\n      setMessage(\"Error fetching ProductEntry, probable network issues \" + err);\n      setError(true);\n    });\n  };\n\n  var getFacilities = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var findProductEntry;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return BillServ.find({\n                query: {\n                  $or: [{\n                    'participantInfo.paymentmode.type': \"Cash\"\n                  }, {\n                    'participantInfo.paymentmode.type': \"Family Cover\"\n                  }],\n                  'participantInfo.billingFacility': user.currentEmployee.facilityDetail._id,\n                  billing_status: {\n                    $ne: \"Fully Paid\"\n                  },\n                  // need to set this finally\n                  //storeId:state.StoreModule.selectedStore._id,\n                  //clientId:state.ClientModule.selectedClient._id,\n                  $limit: 100,\n                  $sort: {\n                    createdAt: -1\n                  }\n                }\n              });\n\n            case 2:\n              findProductEntry = _context5.sent;\n              _context5.next = 5;\n              return setFacilities(findProductEntry.groupedOrder);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getFacilities() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var handleRow = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(Client, e) {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function handleRow(_x7, _x8) {\n      return _ref6.apply(this, arguments);\n    };\n  }(); //1.consider using props for global data\n\n\n  useEffect(function () {\n    // console.log(\"started\")\n    getFacilities();\n    BillServ.on('created', function (obj) {\n      return getFacilities();\n    });\n    BillServ.on('updated', function (obj) {\n      return getFacilities();\n    });\n    BillServ.on('patched', function (obj) {\n      return getFacilities();\n    });\n    BillServ.on('removed', function (obj) {\n      return getFacilities();\n    });\n    return function () {};\n  }, []);\n  useEffect(function () {\n    //changes with checked box\n    // console.log(selectedOrders)\n    return function () {};\n  }, [selectedOrders]);\n  useEffect(function () {\n    if (state.financeModule.show === \"create\") {\n      selectedOrders.forEach(function (el) {\n        return el.checked = \"\";\n      });\n      setSelectedOrders([]);\n    }\n\n    return function () {};\n  }, [state.financeModule.show]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"level-left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"control has-icons-left  \",\n              children: [/*#__PURE__*/_jsxDEV(DebounceInput, {\n                className: \"input is-small \",\n                type: \"text\",\n                placeholder: \"Search Bills\",\n                minLength: 3,\n                debounceTimeout: 400,\n                onChange: function onChange(e) {\n                  return handleSearch(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icon is-small is-left\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"level-item\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"is-size-6 has-text-weight-medium\",\n          children: \"Unpaid Bills \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" pullup \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" is-fullwidth vscrollable pr-1\",\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          allowZeroExpanded: true,\n          children: facilities.map(function (Clinic, i) {\n            return /*#__PURE__*/_jsxDEV(AccordionItem, {\n              children: [/*#__PURE__*/_jsxDEV(AccordionItemHeading, {\n                children: /*#__PURE__*/_jsxDEV(AccordionItemButton, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\" \", i + 1, \" \", Clinic.clientname, \" \", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 37\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 37\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 32\n              }, _this), /*#__PURE__*/_jsxDEV(AccordionItemPanel, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \" is-fullwidth vscrollable pr-1\",\n                  children: /*#__PURE__*/_jsxDEV(Accordion, {\n                    allowZeroExpanded: true,\n                    children: Clinic.bills.map(function (category, i) {\n                      return /*#__PURE__*/_jsxDEV(AccordionItem, {\n                        children: [/*#__PURE__*/_jsxDEV(AccordionItemHeading, {\n                          children: /*#__PURE__*/_jsxDEV(AccordionItemButton, {\n                            children: [category.catName, \" with \", category.order.length, \" Unpaid bills. \"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 337,\n                            columnNumber: 53\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 336,\n                          columnNumber: 53\n                        }, _this), /*#__PURE__*/_jsxDEV(AccordionItemPanel, {\n                          children: /*#__PURE__*/_jsxDEV(\"table\", {\n                            className: \"table is-striped  is-hoverable is-fullwidth is-scrollable mr-2\",\n                            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                                  children: /*#__PURE__*/_jsxDEV(\"abbr\", {\n                                    title: \"Serial No\",\n                                    children: \"S/No\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 346,\n                                    columnNumber: 77\n                                  }, _this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 346,\n                                  columnNumber: 73\n                                }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                  children: /*#__PURE__*/_jsxDEV(\"abbr\", {\n                                    title: \"Date\",\n                                    children: \"Date\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 347,\n                                    columnNumber: 77\n                                  }, _this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 347,\n                                  columnNumber: 73\n                                }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                  children: /*#__PURE__*/_jsxDEV(\"abbr\", {\n                                    title: \"Description\",\n                                    children: \"Description\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 348,\n                                    columnNumber: 77\n                                  }, _this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 348,\n                                  columnNumber: 73\n                                }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                  children: /*#__PURE__*/_jsxDEV(\"abbr\", {\n                                    title: \"Status\",\n                                    children: \"Status\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 350,\n                                    columnNumber: 77\n                                  }, _this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 350,\n                                  columnNumber: 73\n                                }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                  children: /*#__PURE__*/_jsxDEV(\"abbr\", {\n                                    title: \"Amount\",\n                                    children: \"Amount\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 351,\n                                    columnNumber: 77\n                                  }, _this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 351,\n                                  columnNumber: 73\n                                }, _this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 345,\n                                columnNumber: 69\n                              }, _this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 344,\n                              columnNumber: 65\n                            }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                              children: category.order.map(function (order, i) {\n                                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                                  /*  onClick={()=>handleMedicationRow(order)} */\n                                  className: order._id === ((selectedFinance === null || selectedFinance === void 0 ? void 0 : selectedFinance._id) || null) ? \"is-selected\" : \"\",\n                                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                      type: \"checkbox\",\n                                      name: order._id,\n                                      onChange: function onChange(e) {\n                                        return handleChoseClient(Clinic, e, order);\n                                      },\n                                      checked: order.checked\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 358,\n                                      columnNumber: 61\n                                    }, _this), \"  \", i + 1]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 358,\n                                    columnNumber: 57\n                                  }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                                      children: format(new Date(order.createdAt), 'dd-MM-yy')\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 359,\n                                      columnNumber: 61\n                                    }, _this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 359,\n                                    columnNumber: 57\n                                  }, _this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n                                    children: order.serviceInfo.name\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 360,\n                                    columnNumber: 57\n                                  }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                    children: order.billing_status\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 362,\n                                    columnNumber: 57\n                                  }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                    children: order.billing_status === \"Unpaid\" ? order.serviceInfo.amount : order.paymentInfo.balance\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 363,\n                                    columnNumber: 57\n                                  }, _this)]\n                                }, order._id, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 357,\n                                  columnNumber: 57\n                                }, _this);\n                              })\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 354,\n                              columnNumber: 65\n                            }, _this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 343,\n                            columnNumber: 57\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 342,\n                          columnNumber: 53\n                        }, _this)]\n                      }, i, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 335,\n                        columnNumber: 49\n                      }, _this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 37\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 33\n              }, _this)]\n            }, Clinic.client_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 29\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(BillingList, \"KkMEvn9Bp8c06to8qXc/4BjEOOY=\");\n\n_c2 = BillingList;\nexport function DispenseDetail() {\n  _s3();\n\n  var _this2 = this;\n\n  //const { register, handleSubmit, watch, setValue } = useForm(); //errors,\n  // eslint-disable-next-line\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      error = _useState32[0],\n      setError = _useState32[1]; //, \n\n\n  var _useState33 = useState(\"\"),\n      _useState34 = _slicedToArray(_useState33, 2),\n      selectedMedication = _useState34[0],\n      setSelectedMedication = _useState34[1];\n\n  var _useState35 = useState(\"\"),\n      _useState36 = _slicedToArray(_useState35, 2),\n      currentOrder = _useState36[0],\n      setCurrentOrder = _useState36[1]; // eslint-disable-next-line\n\n\n  var _useState37 = useState(\"\"),\n      _useState38 = _slicedToArray(_useState37, 2),\n      message = _useState38[0],\n      setMessage = _useState38[1]; //,\n  //const ProductEntryServ=client.service('/ProductEntry')\n  //const history = useHistory()\n  //const {user,setUser} = useContext(UserContext)\n\n\n  var _useContext5 = useContext(ObjectContext),\n      state = _useContext5.state,\n      setState = _useContext5.setState;\n\n  var BillServ = client.service('order');\n  /* const [ProductEntry, setProductEntry] = useState(\"\")\n  const [facilities, setFacilities] = useState(\"\") */\n\n  var ProductEntry = state.DispenseModule.selectedDispense; //const facilities=ProductEntry.orders\n\n  var handleRow = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(ProductEntry) {\n      var newProductEntryModule;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return setSelectedMedication(ProductEntry);\n\n            case 2:\n              newProductEntryModule = {\n                selectedMedication: ProductEntry,\n                show: 'detail'\n              };\n              _context7.next = 5;\n              return setState(function (prevstate) {\n                return _objectSpread(_objectSpread({}, prevstate), {}, {\n                  medicationModule: newProductEntryModule\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function handleRow(_x9) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var handleEdit = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(ProductEntry) {\n      var newProductEntryModule;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              newProductEntryModule = {\n                selectedDispense: ProductEntry,\n                show: 'modify'\n              };\n              _context8.next = 3;\n              return setState(function (prevstate) {\n                return _objectSpread(_objectSpread({}, prevstate), {}, {\n                  DispenseModule: newProductEntryModule\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function handleEdit(_x10) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var client1 = state.currentClients.find(function (el) {\n      return JSON.stringify(el.client_id) === JSON.stringify(state.DispenseModule.selectedDispense);\n    });\n    setCurrentOrder(client1); // console.log(client1)\n\n    return function () {};\n  }, []);\n  /*  \n      const setprod=async()=>{\n         await setProductEntry(state.DispenseModule.selectedDispense)\n     } */\n\n  useEffect(function () {\n    /* BillServ.on('created', (obj)=>getFacilities())\n    BillServ.on('updated', (obj)=>getFacilities())\n            BillServ.on('removed', (obj)=>getFacilities()) */\n    BillServ.on('patched', function (obj) {\n      //update state.DispenseModule.selectedDispense\n      // console.log(obj.clientId)\n      // console.log(\"currentClients\",state.currentClients)\n      var current1 = state.currentClients.find(function (el) {\n        return JSON.stringify(el.client_id) === JSON.stringify(obj.clientId);\n      });\n      setCurrentOrder(current1); // console.log(\"currentone\",current1)\n    });\n    return function () {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-header-title\",\n          children: \"Dispense Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content vscrollable\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-container pullup \",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table is-striped is-narrow is-hoverable is-fullwidth is-scrollable \",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(\"abbr\", {\n                    title: \"Serial No\",\n                    children: \"S/No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 484,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(\"abbr\", {\n                    title: \"Date\",\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(\"abbr\", {\n                    title: \"Order\",\n                    children: \"Medication\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Fulfilled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(\"abbr\", {\n                    title: \"Status\",\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(\"abbr\", {\n                    title: \"Requesting Physician\",\n                    children: \"Requesting Physician\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: state.DispenseModule.selectedDispense.orders.map(function (order, i) {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  onClick: function onClick() {\n                    return handleRow(order);\n                  },\n                  className: order._id === ((selectedMedication === null || selectedMedication === void 0 ? void 0 : selectedMedication._id) || null) ? \"is-selected\" : \"\",\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: i + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 48\n                  }, _this2), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: format(new Date(order.createdAt), 'dd-MM-yy')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 509,\n                      columnNumber: 49\n                    }, _this2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 45\n                  }, _this2), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: order.order\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 43\n                  }, _this2), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: order.fulfilled === \"True\" ? \"Yes\" : \"No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 45\n                  }, _this2), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: order.order_status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 45\n                  }, _this2), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: order.requestingdoctor_Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 45\n                  }, _this2)]\n                }, order._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 45\n                }, _this2);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s3(DispenseDetail, \"txCZ1/G0eCP6avDchgTQICwi/A0=\");\n\n_c3 = DispenseDetail;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Payment\");\n$RefreshReg$(_c2, \"BillingList\");\n$RefreshReg$(_c3, \"DispenseDetail\");","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/src/components/Finance/Payment.js"],"names":["React","useState","useContext","useEffect","useRef","client","DebounceInput","useForm","UserContext","ObjectContext","toast","format","formatDistanceToNowStrict","PaymentCreate","PatientProfile","Accordion","AccordionItem","AccordionItemHeading","AccordionItemState","AccordionItemButton","AccordionItemPanel","Payment","selectedProductEntry","setSelectedProductEntry","error","setError","success","setSuccess","message","setMessage","BillServ","service","facilities","setFacilities","selectedOrders","setSelectedOrders","state","setState","user","setUser","financeModule","show","BillingList","selectedDispense","setSelectedDispense","selectedFinance","setSelectedFinance","expanded","setExpanded","oldClient","setOldClient","handleSelectedClient","Client","newClientModule","selectedClient","prevstate","ClientModule","handleChoseClient","e","order","clientname","newClient","forEach","el","checked","target","participantInfo","newProductEntryModule","concat","filter","_id","handleMedicationRow","ProductEntry","handleCreateNew","DispenseModule","handleSearch","val","field","find","query","$regex","$options","$or","currentEmployee","facilityDetail","billing_status","$ne","$limit","$sort","createdAt","then","res","console","log","groupedOrder","catch","err","getFacilities","findProductEntry","handleRow","on","obj","value","map","Clinic","i","bills","category","catName","length","Date","serviceInfo","name","amount","paymentInfo","balance","client_id","DispenseDetail","selectedMedication","setSelectedMedication","currentOrder","setCurrentOrder","medicationModule","handleEdit","client1","currentClients","JSON","stringify","current1","clientId","orders","fulfilled","order_status","requestingdoctor_Name"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, {useState,useContext, useEffect,useRef} from 'react'\nimport client from '../../feathers'\nimport {DebounceInput} from 'react-debounce-input';\nimport { useForm } from \"react-hook-form\";\n//import {useHistory} from 'react-router-dom'\nimport {UserContext,ObjectContext} from '../../context'\nimport {toast} from 'bulma-toast'\nimport {format, formatDistanceToNowStrict } from 'date-fns'\nimport PaymentCreate from './PaymentCreate'\nimport PatientProfile from '../ClientMgt/PatientProfile'\n/* import {ProductCreate} from './Products' */\n// eslint-disable-next-line\n//const searchfacility={};\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemState,\n    AccordionItemButton,\n    AccordionItemPanel,\n} from 'react-accessible-accordion';\n\n// Demo styles, see 'Styles' section below for some notes on use.\nimport 'react-accessible-accordion/dist/fancy-example.css';\n//import BillPrescriptionCreate from './BillPrescriptionCreate';\n\n\n\nexport default function Payment() {\n    //const {state}=useContext(ObjectContext) //,setState\n    // eslint-disable-next-line\n    const [selectedProductEntry,setSelectedProductEntry]=useState()\n    //const [showState,setShowState]=useState() //create|modify|detail\n    const [error, setError] =useState(false)\n    // eslint-disable-next-line\n   const [success, setSuccess] =useState(false)\n    // eslint-disable-next-line\n  const [message, setMessage] = useState(\"\") \n   const BillServ=client.service('bills')\n   //const history = useHistory()\n  // const {user,setUser} = useContext(UserContext)\n   const [facilities,setFacilities]=useState([])\n    // eslint-disable-next-line\n  const [selectedOrders, setSelectedOrders]=useState([]) //\n   // eslint-disable-next-line\n   const {state,setState}=useContext(ObjectContext)\n   // eslint-disable-next-line\n   const {user,setUser}=useContext(UserContext)\n    \n    return(\n        <section className= \"section remPadTop\">\n           {/*  <div className=\"level\">\n            <div className=\"level-item\"> <span className=\"is-size-6 has-text-weight-medium\">ProductEntry  Module</span></div>\n            </div> */}\n            <div className=\"columns \">\n                <div className=\"column is-6 \">\n                    <BillingList />\n                    </div>\n              \n                <div className=\"column is-6 \">\n                \n                {(state.financeModule.show ==='detail')&& <PaymentCreate />}\n                </div>\n               {/*  <div className=\"column is-3 \">\n                {(state.financeModule.show ==='detail')&&<PatientProfile />}\n                </div> */}\n\n            </div>                            \n            </section>\n       \n    )\n    \n}\n\nexport function BillingList(){\n   // const { register, handleSubmit, watch, errors } = useForm();\n    // eslint-disable-next-line\n    const [error, setError] =useState(false)\n     // eslint-disable-next-line\n    const [success, setSuccess] =useState(false)\n     // eslint-disable-next-line\n   const [message, setMessage] = useState(\"\") \n   const BillServ=client.service('bills')\n    //const history = useHistory()\n   // const {user,setUser} = useContext(UserContext)\n    const [facilities,setFacilities]=useState([])\n     // eslint-disable-next-line\n   const [selectedDispense, setSelectedDispense]=useState() //\n   const [selectedOrders, setSelectedOrders]=useState([]) \n    // eslint-disable-next-line\n    const {state,setState}=useContext(ObjectContext)\n    // eslint-disable-next-line\n    const {user,setUser}=useContext(UserContext)\n    const [selectedFinance, setSelectedFinance] =useState(\"\")\n    const [expanded, setExpanded] =useState(\"\")\n    const [oldClient, setOldClient] =useState(\"\")\n\n    const handleSelectedClient= async(Client)=>{\n        // await setSelectedClient(Client)\n         const    newClientModule={\n             selectedClient:Client,\n             show :'detail'\n         }\n        await setState((prevstate)=>({...prevstate, ClientModule:newClientModule}))\n     }\n\n    const handleChoseClient= async(client,e, order)=>{\n        setOldClient(client.clientname)\n        let newClient=client.clientname\n        if(oldClient!==newClient){\n            //alert(\"New Client Onboard\")\n            //remove all checked clientsly\n            selectedOrders.forEach(el=>el.checked=\"\")\n            setSelectedOrders([])\n        }\n\n       // console.log(e.target.checked)\n        order.checked=e.target.checked\n        await handleSelectedClient(order.participantInfo.client)\n        //handleMedicationRow(order)\n        await setSelectedFinance(order)\n        const    newProductEntryModule={\n            selectedFinance:order,\n            show :'detail',\n            state:e.target.checked\n        }\n      await setState((prevstate)=>({...prevstate, financeModule:newProductEntryModule}))\n      \n      //set of checked items\n      if (e.target.checked){\n        await setSelectedOrders((prevstate)=>(prevstate.concat(order)))\n      }else{\n        setSelectedOrders( prevstate=>prevstate.filter(el=>el._id!==order._id))\n      }\n    \n       // console.log(selectedOrders)\n    }\n    const handleMedicationRow= async(ProductEntry,e)=>{ //handle selected single order\n        //console.log(\"b4\",state)\n       // alert(\"Header touched\")\n    \n        //console.log(\"handlerow\",ProductEntry)\n       /* alert(ProductEntry.checked)*/\n       /*  ProductEntry.checked=!ProductEntry.checked */\n    \n       /*  await setSelectedFinance(ProductEntry)\n    \n        const    newProductEntryModule={\n            selectedFinance:ProductEntry,\n            show :'detail'\n\n        }\n      await setState((prevstate)=>({...prevstate, financeModule:newProductEntryModule})) */\n       //console.log(state)\n      // ProductEntry.show=!ProductEntry.show\n    \n    }\n\n    const handleCreateNew = async()=>{\n        const    newProductEntryModule={\n            selectedDispense:{},\n            show :'create'\n            }\n       await setState((prevstate)=>({...prevstate, DispenseModule:newProductEntryModule}))\n       //console.log(state)\n        \n\n    }\n  \n\n    const handleSearch=(val)=>{\n       const field='name'\n       //console.log(val)\n       BillServ.find({query: {\n        'participantInfo.paymentmode.detail.principalName': {\n            $regex:val,\n            $options:'i'\n        \n        },\n           /*  $or:[\n                {\n           \n                } ,\n                {\n            'orderInfo.orderObj.clientname': {\n                        $regex:val,\n                        $options:'i'\n                    \n                    }\n                }\n                ], */\n                \n                //order_category:\"Prescription\",\n             $or:[\n                    {\n                       'participantInfo.paymentmode.type':\"Cash\"\n                    },\n                    {\n                       'participantInfo.paymentmode.type':\"Family Cover\"\n                    }\n                ],\n                'participantInfo.billingFacility': user.currentEmployee.facilityDetail._id,\n                billing_status:{\n                    $ne:\"Fully Paid\"\n                }, //set to not equal to \"fully paid\" // need to set this finally\n               // storeId:state.StoreModule.selectedStore._id,\n               //facility:user.currentEmployee.facilityDetail._id || \"\",\n                $limit:10,\n                $sort: {\n                    createdAt: -1\n                  }\n                    }}).then((res)=>{\n                console.log(res)\n               setFacilities(res.groupedOrder)\n                setMessage(\" ProductEntry  fetched successfully\")\n                setSuccess(true) \n            })\n            .catch((err)=>{\n               // console.log(err)\n                setMessage(\"Error fetching ProductEntry, probable network issues \"+ err )\n                setError(true)\n            })\n        }\n    const getFacilities= async()=>{\n       \n            // console.log(\"here b4 server\")\n    const findProductEntry= await BillServ.find(\n            {query: {\n                $or:[\n                    {\n                       'participantInfo.paymentmode.type':\"Cash\"\n                    },\n                    {\n                       'participantInfo.paymentmode.type':\"Family Cover\"\n                    }\n                ],\n                'participantInfo.billingFacility': user.currentEmployee.facilityDetail._id,\n                billing_status:{\n                    $ne:\"Fully Paid\"\n                },  // need to set this finally\n                //storeId:state.StoreModule.selectedStore._id,\n                //clientId:state.ClientModule.selectedClient._id,\n                $limit:100,\n                $sort: {\n                    createdAt: -1\n                }\n                }})\n\n            //console.log(\"updatedorder\", findProductEntry.groupedOrder)\n            await setFacilities(findProductEntry.groupedOrder)\n          //  await setState((prevstate)=>({...prevstate, currentClients:findProductEntry.groupedOrder}))\n            }   \n    const handleRow= async(Client,e)=>{\n           // alert(expanded)\n              \n            }\n    //1.consider using props for global data\n    useEffect(() => {\n        // console.log(\"started\")\n            getFacilities()\n            BillServ.on('created', (obj)=>getFacilities())\n            BillServ.on('updated', (obj)=>getFacilities())\n            BillServ.on('patched', (obj)=>getFacilities())\n            BillServ.on('removed', (obj)=>getFacilities())\n            return () => {\n            \n            }\n            },[])\n\n    useEffect(() => {\n        //changes with checked box\n       // console.log(selectedOrders)\n        \n        return () => {\n            \n        }\n    }, [selectedOrders])\n\n    useEffect(() => {\n       if (state.financeModule.show===\"create\"){\n        selectedOrders.forEach(el=>el.checked=\"\")\n        setSelectedOrders([])\n\n       }\n        return () => {\n           \n        }\n    }, [state.financeModule.show])\n   \n \n\n    return(     \n            <>  \n                <div className=\"level\">\n                    <div className=\"level-left\">\n                        <div className=\"level-item\">\n                            <div className=\"field\">\n                                <p className=\"control has-icons-left  \">\n                                    <DebounceInput className=\"input is-small \" \n                                        type=\"text\" placeholder=\"Search Bills\"\n                                        minLength={3}\n                                        debounceTimeout={400}\n                                        onChange={(e)=>handleSearch(e.target.value)} />\n                                    <span className=\"icon is-small is-left\">\n                                        <i className=\"fas fa-search\"></i>\n                                    </span>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"level-item\"> <span className=\"is-size-6 has-text-weight-medium\">Unpaid Bills </span></div>\n                     {/* <div className=\"level-right\">\n                       <div className=\"level-item\"> \n                            <div className=\"level-item\"><div className=\"button is-success is-small\" onClick={handleCreateNew}>New</div></div>\n                        </div> \n                    </div>*/}\n\n                </div>\n                <div className=\" pullup \">\n                    <div className=\" is-fullwidth vscrollable pr-1\">   \n                    <Accordion allowZeroExpanded >\n                        {facilities.map((Clinic, i)=>(\n                            <AccordionItem  key={Clinic.client_id}  >\n                               <AccordionItemHeading >\n                                    <AccordionItemButton  >\n                                    {/* <input type = \"checkbox\" name={Clinic.client_id}  />   */}\n                                    <strong> {i+1} {Clinic.clientname} {/* with {Clinic.bills.length} Unpaid bills. */} {/* Grand Total amount: N */}</strong> \n                                    </AccordionItemButton>\n                                </AccordionItemHeading>\n                                <AccordionItemPanel>\n                                    <div className=\" is-fullwidth vscrollable pr-1\">   \n                                        <Accordion allowZeroExpanded>\n                                            {Clinic.bills.map((category, i)=>(\n                                                <AccordionItem  key={i} >\n                                                    <AccordionItemHeading >\n                                                    <AccordionItemButton  >\n                                                    {/* <input type = \"checkbox\" name={Clinic.client_id} onChange={(e)=>handleMedicationRow(Clinic,e)} /> */}  \n                                                         {category.catName} with {category.order.length} Unpaid bills. {/* Total amount: N */}\n                                                    </AccordionItemButton>\n                                                    </AccordionItemHeading>\n                                                    <AccordionItemPanel>\n                                                        <table className=\"table is-striped  is-hoverable is-fullwidth is-scrollable mr-2\">\n                                                                <thead>\n                                                                    <tr>\n                                                                        <th><abbr title=\"Serial No\">S/No</abbr></th>\n                                                                        <th><abbr title=\"Date\">Date</abbr></th>\n                                                                        <th><abbr title=\"Description\">Description</abbr></th>\n                                                                    {/*  <th>Fulfilled</th> */}\n                                                                        <th><abbr title=\"Status\">Status</abbr></th>\n                                                                        <th><abbr title=\"Amount\">Amount</abbr></th>\n                                                                    </tr>\n                                                                </thead>\n                                                                <tbody>\n                                                     { category.order.map((order, i)=>(\n\n                                                        <tr key={order._id}  /*  onClick={()=>handleMedicationRow(order)} */  className={order._id===(selectedFinance?._id||null)?\"is-selected\":\"\"}>                                         \n                                                        <th><input type = \"checkbox\" name={order._id} onChange={(e)=>handleChoseClient(Clinic,e, order)}  checked={order.checked}/>  {i+1}</th>\n                                                        <td><span>{format(new Date(order.createdAt),'dd-MM-yy')}</span></td> {/* {formatDistanceToNowStrict(new Date(ProductEntry.createdAt),{addSuffix: true})} <br/> */} \n                                                        <th>{order.serviceInfo.name}</th>\n                                                       {/*  <td>{order.fulfilled===\"True\"?\"Yes\":\"No\"}</td> */}\n                                                        <td>{order.billing_status}</td>\n                                                        <td>{(order.billing_status===\"Unpaid\")?order.serviceInfo.amount:order.paymentInfo.balance}</td>\n                                                        </tr>\n                                                ))}\n                                            </tbody>\n                                            </table>\n\n                                                    </AccordionItemPanel>                                          \n                                                </AccordionItem>\n                                            ))}\n                                        </Accordion>\n                                    </div>\n                                </AccordionItemPanel>                    \n                            </AccordionItem >\n                        ))}\n                    </Accordion >\n                    </div>  \n                </div>\n            </>          \n    )\n    }\n\n\nexport function DispenseDetail(){\n    //const { register, handleSubmit, watch, setValue } = useForm(); //errors,\n     // eslint-disable-next-line\n    const [error, setError] =useState(false) //, \n    const [selectedMedication, setSelectedMedication] =useState(\"\")\n    const [currentOrder, setCurrentOrder] =useState(\"\")\n     // eslint-disable-next-line\n    const [message, setMessage] = useState(\"\") //,\n    //const ProductEntryServ=client.service('/ProductEntry')\n    //const history = useHistory()\n    //const {user,setUser} = useContext(UserContext)\n    const {state,setState} = useContext(ObjectContext)\n    const BillServ=client.service('order')\n    /* const [ProductEntry, setProductEntry] = useState(\"\")\n    const [facilities, setFacilities] = useState(\"\") */\n\n let ProductEntry =state.DispenseModule.selectedDispense\n   //const facilities=ProductEntry.orders\n\n   const handleRow= async(ProductEntry)=>{\n    //console.log(\"b4\",state)\n\n    //console.log(\"handlerow\",ProductEntry)\n\n    await setSelectedMedication(ProductEntry)\n\n    const    newProductEntryModule={\n        selectedMedication:ProductEntry,\n        show :'detail'\n    }\n  await setState((prevstate)=>({...prevstate, medicationModule:newProductEntryModule}))\n   //console.log(state)\n  // ProductEntry.show=!ProductEntry.show\n\n}\n\n    const handleEdit= async(ProductEntry)=>{\n        const    newProductEntryModule={\n            selectedDispense:ProductEntry,\n            show :'modify'\n        }\n       await setState((prevstate)=>({...prevstate, DispenseModule:newProductEntryModule}))\n       //console.log(state)\n       \n    }\n\n    useEffect(() => {\n\n\n      const client1=  state.currentClients.find(el=>{\n            return JSON.stringify(el.client_id)===JSON.stringify(state.DispenseModule.selectedDispense)\n        })\n\n    setCurrentOrder(client1)\n   // console.log(client1)\n        return () => {\n        \n        }\n    }, [])\n   \n\n /*  \n     const setprod=async()=>{\n        await setProductEntry(state.DispenseModule.selectedDispense)\n    } */\n \n    useEffect(() => {\n        /* BillServ.on('created', (obj)=>getFacilities())\n        BillServ.on('updated', (obj)=>getFacilities())\n       \n        BillServ.on('removed', (obj)=>getFacilities()) */\n        BillServ.on('patched',  (obj)=>{\n            //update state.DispenseModule.selectedDispense\n           // console.log(obj.clientId)\n           // console.log(\"currentClients\",state.currentClients)\n           const current1=state.currentClients.find(el=>(JSON.stringify(el.client_id)===JSON.stringify(obj.clientId)))\n           setCurrentOrder(current1)\n          // console.log(\"currentone\",current1)\n        })\n      \n        return () => {\n         \n        }\n    },[])\n \n    return (\n        <>\n        <div className=\"card \">\n            <div className=\"card-header\">\n                <p className=\"card-header-title\">\n                    Dispense Details\n                </p>\n            </div>\n            <div className=\"card-content vscrollable\">\n            {/* {JSON.stringify(ProductEntry.orders,2,10)} */}\n            <div className=\"table-container pullup \">\n                                <table className=\"table is-striped is-narrow is-hoverable is-fullwidth is-scrollable \">\n                                    <thead>\n                                        <tr>\n                                        <th><abbr title=\"Serial No\">S/No</abbr></th>\n                                        {/* <th><abbr title=\"Client Name\">Client Name</abbr></th> */}\n                                        {/* <th><abbr title=\"Number of Orders\"># of Medication</abbr></th> */}\n                                        <th><abbr title=\"Date\">Date</abbr></th>\n                                        <th><abbr title=\"Order\">Medication</abbr></th>\n                                        <th>Fulfilled</th>\n                                        <th><abbr title=\"Status\">Status</abbr></th>\n                                        <th><abbr title=\"Requesting Physician\">Requesting Physician</abbr></th>\n                                        \n                                        {/* <th><abbr title=\"Actions\">Actions</abbr></th> */}\n                                        </tr>\n                                    </thead>\n                                    <tfoot>\n                                        \n                                    </tfoot>\n                                    <tbody>\n                                        {state.DispenseModule.selectedDispense.orders.map((order, i)=>(\n\n                                            <tr key={order._id} onClick={()=>handleRow(order)} className={order._id===(selectedMedication?._id||null)?\"is-selected\":\"\"}>\n                                            \n                                               <th>{i+1}</th>\n                                                 {/* <td>{ProductEntry.clientname}</td> \n                                                <td>{ProductEntry.orders.length}</td> */}\n                                           \n                                           \n                                            <td><span>{format(new Date(order.createdAt),'dd-MM-yy')}</span></td> {/* {formatDistanceToNowStrict(new Date(ProductEntry.createdAt),{addSuffix: true})} <br/> */} \n                                          <th>{order.order}</th>\n                                            <td>{order.fulfilled===\"True\"?\"Yes\":\"No\"}</td>\n                                            <td>{order.order_status}</td>\n                                            <td>{order.requestingdoctor_Name}</td>\n                                            \n                                           {/*  <td><span className=\"showAction\"  >...</span></td> */}\n                                           \n                                            </tr>\n\n                                        ))}\n                                    </tbody>\n                                    </table>\n                        \n                </div>              \n               \n            </div>\n        </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}