{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectSpread from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/mfybaby/Documents/HealthStack2/HS-frontend/src/components/Epidemiology/ReportCreate.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport client from '../../feathers';\nimport { DebounceInput } from 'react-debounce-input';\nimport { useForm } from \"react-hook-form\"; //import {useHistory} from 'react-router-dom'\n\nimport { UserContext, ObjectContext } from '../../context';\nimport { toast } from 'bulma-toast';\nimport { ProductCreate } from './Products';\nimport Encounter from '../EncounterMgt/Encounter';\n\nvar random = require('random-string-generator'); // eslint-disable-next-line\n\n\nvar searchfacility = {};\nexport default function ReportCreate() {\n  _s();\n\n  // const { register, handleSubmit,setValue} = useForm(); //, watch, errors, reset \n  //const [error, setError] =useState(false)\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      success = _useState2[0],\n      setSuccess = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1]; // eslint-disable-next-line\n\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      facility = _useState6[0],\n      setFacility = _useState6[1];\n\n  var SubwalletTxServ = client.service('subwallettransactions');\n  var SubwalletServ = client.service('subwallet');\n  var OrderServ = client.service('order');\n  var InvoiceServ = client.service('invoice'); //const history = useHistory()\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user; //,setUser\n  // eslint-disable-next-line\n\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentUser = _useState8[0],\n      setCurrentUser = _useState8[1];\n\n  var _useState9 = useState(\"Bill\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      type = _useState10[0],\n      setType = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      documentNo = _useState12[0],\n      setDocumentNo = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      totalamount = _useState14[0],\n      setTotalamount = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      description = _useState16[0],\n      setDescription = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      productId = _useState18[0],\n      setProductId = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      source = _useState20[0],\n      setSource = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      date = _useState22[0],\n      setDate = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      name = _useState24[0],\n      setName = _useState24[1];\n\n  var _useState25 = useState(\"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      inventoryId = _useState26[0],\n      setInventoryId = _useState26[1];\n\n  var _useState27 = useState(\"\"),\n      _useState28 = _slicedToArray(_useState27, 2),\n      baseunit = _useState28[0],\n      setBaseunit = _useState28[1];\n\n  var _useState29 = useState(\"\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      quantity = _useState30[0],\n      setQuantity = _useState30[1];\n\n  var _useState31 = useState(\"\"),\n      _useState32 = _slicedToArray(_useState31, 2),\n      sellingprice = _useState32[0],\n      setSellingPrice = _useState32[1];\n\n  var _useState33 = useState(0),\n      _useState34 = _slicedToArray(_useState33, 2),\n      costprice = _useState34[0],\n      setCostprice = _useState34[1];\n\n  var _useState35 = useState(\"\"),\n      _useState36 = _slicedToArray(_useState35, 2),\n      invquantity = _useState36[0],\n      setInvQuantity = _useState36[1];\n\n  var _useState37 = useState(0),\n      _useState38 = _slicedToArray(_useState37, 2),\n      calcamount = _useState38[0],\n      setCalcAmount = _useState38[1];\n\n  var _useState39 = useState([]),\n      _useState40 = _slicedToArray(_useState39, 2),\n      productItem = _useState40[0],\n      setProductItem = _useState40[1];\n\n  var _useState41 = useState(\"\"),\n      _useState42 = _slicedToArray(_useState41, 2),\n      billingId = _useState42[0],\n      setBilllingId = _useState42[1];\n\n  var _useState43 = useState(true),\n      _useState44 = _slicedToArray(_useState43, 2),\n      changeAmount = _useState44[0],\n      setChangeAmount = _useState44[1];\n\n  var _useState45 = useState(\"Cash\"),\n      _useState46 = _slicedToArray(_useState45, 2),\n      paymentmode = _useState46[0],\n      setPaymentMode = _useState46[1];\n\n  var _useState47 = useState([]),\n      _useState48 = _slicedToArray(_useState47, 2),\n      paymentOptions = _useState48[0],\n      setPaymentOptions = _useState48[1];\n\n  var _useState49 = useState(\"\"),\n      _useState50 = _slicedToArray(_useState49, 2),\n      billMode = _useState50[0],\n      setBillMode = _useState50[1];\n\n  var _useState51 = useState(false),\n      _useState52 = _slicedToArray(_useState51, 2),\n      productModal = _useState52[0],\n      setProductModal = _useState52[1];\n\n  var _useState53 = useState(\"\"),\n      _useState54 = _slicedToArray(_useState53, 2),\n      obj = _useState54[0],\n      setObj = _useState54[1];\n\n  var _useState55 = useState(0),\n      _useState56 = _slicedToArray(_useState55, 2),\n      amountPaid = _useState56[0],\n      setAmountPaid = _useState56[1];\n\n  var _useState57 = useState(0),\n      _useState58 = _slicedToArray(_useState57, 2),\n      balance = _useState58[0],\n      setBalance = _useState58[1];\n\n  var _useState59 = useState(false),\n      _useState60 = _slicedToArray(_useState59, 2),\n      buttonState = _useState60[0],\n      setButtonState = _useState60[1];\n\n  var _useState61 = useState([]),\n      _useState62 = _slicedToArray(_useState61, 2),\n      partPay = _useState62[0],\n      setPartPay = _useState62[1];\n\n  var _useContext2 = useContext(ObjectContext),\n      state = _useContext2.state,\n      setState = _useContext2.setState;\n\n  var inputEl = useRef(0);\n  var calcamount1;\n  var hidestatus;\n  var medication = state.financeModule.selectedFinance; //console.log(state.financeModule.state)\n\n  var showDocumentation = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setProductModal(true);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function showDocumentation(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handlecloseModal = function handlecloseModal() {\n    setProductModal(false); // handleSearch(val)\n  };\n\n  var handleChangeMode = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return setPaymentMode(value);\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleChangeMode(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleRow = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(ProductEntry) {\n      var newProductEntryModule;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              //console.log(\"b4\",state)\n              //console.log(\"handlerow\",ProductEntry)\n              //await setMedication(ProductEntry)\n              newProductEntryModule = {\n                selectedMedication: ProductEntry,\n                show: 'detail'\n              };\n              _context3.next = 3;\n              return setState(function (prevstate) {\n                return _objectSpread(_objectSpread({}, prevstate), {}, {\n                  medicationModule: newProductEntryModule\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleRow(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var _useState63 = useState({\n    productitems: [],\n    date: date,\n    documentNo: documentNo,\n    type: type,\n    totalamount: totalamount,\n    source: source\n  }),\n      _useState64 = _slicedToArray(_useState63, 2),\n      productEntry = _useState64[0],\n      setProductEntry = _useState64[1];\n\n  var productItemI = {\n    productId: productId,\n    name: name,\n    quantity: quantity,\n    sellingprice: sellingprice,\n    amount: calcamount,\n    //||qamount\n    baseunit: baseunit,\n    costprice: costprice,\n    billingId: billingId\n  }; // consider batchformat{batchno,expirydate,qtty,baseunit}\n  //consider baseunoit conversions\n\n  var getSearchfacility = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(obj) {\n      var contracts, contract, _contract;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return setObj(obj);\n\n            case 2:\n              if (obj) {\n                _context4.next = 12;\n                break;\n              }\n\n              //\"clear stuff\"\n              setProductId(\"\");\n              setName(\"\");\n              setBaseunit(\"\");\n              setInventoryId(\"\");\n              setSellingPrice(\"\");\n              setInvQuantity(\"\");\n              setDescription(\"\");\n              setCostprice(\"\"); // setCalcAmount(null)\n\n              return _context4.abrupt(\"return\");\n\n            case 12:\n              setProductId(obj.productId);\n              setName(obj.name);\n              setBaseunit(obj.baseunit);\n              setInventoryId(obj.inventoryId);\n              setSellingPrice(obj.sellingprice); //modify this based on billing mode\n\n              setInvQuantity(obj.quantity);\n              setCostprice(obj.costprice);\n              setBilllingId(obj.billingId);\n              contracts = obj.billingDetails.contracts; //const billingserv=client.service('billing')\n\n              if (billMode.type === \"HMO Cover\") {\n                //paymentmode\n                contract = contracts.filter(function (el) {\n                  return el.source_org === billMode.detail.hmo;\n                }); //  console.log(contract[0].price)\n\n                setSellingPrice(contract[0].price); //  console.log(sellingprice)\n              }\n\n              if (billMode.type === \"Company Cover\") {\n                //paymentmode\n                _contract = contracts.filter(function (el) {\n                  return el.source_org === billMode.detail.company;\n                }); //   console.log(contract[0].price)\n\n                setSellingPrice(_contract[0].price); //   console.log(sellingprice)\n              }\n              /*  setValue(\"facility\", obj._id,  {\n                   shouldValidate: true,\n                   shouldDirty: true\n               }) */\n\n\n            case 23:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function getSearchfacility(_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    /*  console.log(obj)\n     console.log(billMode)\n     if( paymentmode!==\"Cash\" && obj){\n         const contracts=obj.billingDetails.contracts\n         let contract=contracts.filter(el=>el.source_org===billMode.detail.hmo)\n        console.log(contract[0].price)\n        setSellingPrice(contract[0].price)\n        console.log(sellingprice)\n    }\n      return () => {\n         \n      } */\n  }, [obj]);\n  useEffect(function () {\n    setCurrentUser(user); //console.log(currentUser)\n\n    return function () {};\n  }, [user]);\n\n  var handleUpdateTotal = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return setTotalamount(function (prevtotal) {\n                return Number(prevtotal) + Number(calcamount);\n              });\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function handleUpdateTotal() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var handleChangeType = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(e) {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return setType(e.target.value);\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function handleChangeType(_x5) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var handleAmount = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return setDescription(\"\");\n\n            case 2:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function handleAmount() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var handleClickProd = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var billInfo;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!(quantity === 0 || quantity === \"\" || productId === \"\")) {\n                _context8.next = 3;\n                break;\n              }\n\n              toast({\n                message: 'You need to choose a product and quantity to proceed',\n                type: 'is-danger',\n                dismissible: true,\n                pauseOnHover: true\n              });\n              return _context8.abrupt(\"return\");\n\n            case 3:\n              _context8.next = 5;\n              return setSuccess(false);\n\n            case 5:\n              _context8.next = 7;\n              return setProductItem(function (prevProd) {\n                return prevProd.concat(productItemI);\n              });\n\n            case 7:\n              handleUpdateTotal(); // generate billing info\n\n              billInfo = {\n                orderInfo: {\n                  orderId: medication._id,\n                  orderObj: medication\n                },\n                serviceInfo: {\n                  price: productItemI.sellingprice,\n                  quantity: productItemI.quantity,\n                  productId: productItemI.productId,\n                  name: productItemI.name,\n                  baseunit: productItemI.baseunit,\n                  amount: productItemI.amount,\n                  billingId: productItemI.billingId,\n                  createdby: user._id\n                },\n                paymentInfo: {},\n                participantInfo: {\n                  billingFacility: medication.destination,\n                  billingFacilityName: medication.destination_name,\n                  locationId: state.StoreModule.selectedStore._id,\n                  //selected location,\n                  clientId: medication.clientId,\n                  client: medication.client,\n                  paymentmode: billMode\n                },\n                createdBy: user.id,\n                billing_status: \"Unpaid\"\n              }; //update order\n\n              OrderServ.patch(medication._id, {\n                order_status: \"Billed\",\n                billInfo: billInfo\n              }).then(function (resp) {\n                // medication=resp\n                // console.log(resp)\n                handleRow(resp); //update dispense\n              }).catch(function (err) {\n                console.log(err);\n              }); //update status(billed) + action()\n              //?attached chosen product to medication\n              //dispense helper?\n\n              setName(\"\");\n              setBaseunit(\"\");\n              setQuantity(\"\");\n              setInventoryId(\"\");\n              setSellingPrice(\"\");\n              setInvQuantity(\"\");\n              handleAmount(); // setCalcAmount(null)\n\n              _context8.next = 19;\n              return setSuccess(true);\n\n            case 19:\n              /* console.log(success)\n              console.log(qamount)\n              console.log(productItem) */\n              setChangeAmount(true);\n\n            case 20:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function handleClickProd() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var handleQtty = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(e) {\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              if (!(invquantity < e.target.value)) {\n                _context9.next = 3;\n                break;\n              }\n\n              toast({\n                message: 'You can not sell more quantity than exist in inventory ',\n                type: 'is-danger',\n                dismissible: true,\n                pauseOnHover: true\n              });\n              return _context9.abrupt(\"return\");\n\n            case 3:\n              setQuantity(e.target.value);\n              calcamount1 = quantity * sellingprice;\n              _context9.next = 7;\n              return setCalcAmount(calcamount1);\n\n            case 7:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function handleQtty(_x6) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    setProductEntry({\n      date: date,\n      documentNo: documentNo,\n      type: type,\n      totalamount: totalamount,\n      source: source\n    });\n    setCalcAmount(quantity * sellingprice);\n    return function () {};\n  }, [date]);\n\n  var resetform = function resetform() {\n    setType(\"Sales\");\n    setDocumentNo(\"\");\n    setTotalamount(\"\");\n    setProductId(\"\");\n    setSource(\"\");\n    setDate(\"\");\n    setName(\"\");\n    setBaseunit();\n    setCostprice();\n    setProductItem([]);\n  };\n\n  var handleMedicationDone = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n      var newProductEntryModule;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              //handle selected single order\n              //console.log(\"b4\",state)\n              //console.log(\"handlerow\",ProductEntry)\n              // await setSelectedMedication(\"\")\n              newProductEntryModule = {\n                selectedMedication: {},\n                show: 'create'\n              };\n              _context10.next = 3;\n              return setState(function (prevstate) {\n                return _objectSpread(_objectSpread({}, prevstate), {}, {\n                  medicationModule: newProductEntryModule\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function handleMedicationDone() {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(e) {\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              e.preventDefault();\n              setMessage(\"\"); //setError(false)\n\n              setSuccess(false);\n              _context11.next = 5;\n              return setProductEntry({\n                date: date,\n                documentNo: documentNo,\n                type: type,\n                totalamount: totalamount,\n                source: source\n              });\n\n            case 5:\n              productEntry.productitems = productItem;\n              productEntry.createdby = user._id;\n              productEntry.transactioncategory = \"debit\"; // console.log(\"b4 facility\",productEntry);\n\n              if (!user.currentEmployee) {\n                _context11.next = 12;\n                break;\n              }\n\n              productEntry.facility = user.currentEmployee.facilityDetail._id; // or from facility dropdown\n\n              _context11.next = 14;\n              break;\n\n            case 12:\n              toast({\n                message: 'You can not remove inventory from any organization',\n                type: 'is-danger',\n                dismissible: true,\n                pauseOnHover: true\n              });\n              return _context11.abrupt(\"return\");\n\n            case 14:\n              if (!state.StoreModule.selectedStore._id) {\n                _context11.next = 18;\n                break;\n              }\n\n              productEntry.storeId = state.StoreModule.selectedStore._id;\n              _context11.next = 20;\n              break;\n\n            case 18:\n              toast({\n                message: 'You need to select a store before removing inventory',\n                type: 'is-danger',\n                dismissible: true,\n                pauseOnHover: true\n              });\n              return _context11.abrupt(\"return\");\n\n            case 20:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    return function onSubmit(_x7) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  var handleChangeAmount = function handleChangeAmount() {\n    setChangeAmount(function (rev) {\n      return !rev;\n    });\n  };\n\n  var newclient = /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return setProductItem([]);\n\n            case 2:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    return function newclient() {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  var handleAccept = /*#__PURE__*/function () {\n    var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n      var obj;\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.next = 2;\n              return setButtonState(true);\n\n            case 2:\n              if (!(paymentmode === \"\" || amountPaid === 0 || amountPaid === \"\")) {\n                _context13.next = 7;\n                break;\n              }\n\n              toast({\n                message: 'Kindly choose payment mode or enter amount',\n                type: 'is-danger',\n                dismissible: true,\n                pauseOnHover: true\n              });\n              _context13.next = 6;\n              return setButtonState(false);\n\n            case 6:\n              return _context13.abrupt(\"return\");\n\n            case 7:\n              obj = {\n                // toWallet:{ type: Schema.Types.ObjectId, ref:'facility', }, //receiving money\n                //fromWallet:{ type: Schema.Types.ObjectId, ref:'facility', },//sending money\n                //subwallet:{ type: Schema.Types.ObjectId, ref:'subwallet', },\n                client: medication.participantInfo.client._id,\n                organization: user.employeeData[0].facilityDetail._id,\n                category: \"credit\",\n                //debit/credit\n                amount: amountPaid,\n                description: description,\n                toName: user.employeeData[0].facilityDetail.facilityName,\n                fromName: medication.participantInfo.client.firstname + \" \" + medication.participantInfo.client.lastname,\n                createdby: user._id,\n                // refBill:[{ type: Schema.Types.ObjectId, ref:'bills'  }], //billid to be paid : ref invoice to pay\n                // info:{ type: Schema.Types.Mixed},\n                paymentmode: paymentmode,\n                facility: user.employeeData[0].facilityDetail._id,\n                locationId: state.LocationModule.selectedLocation._id,\n                type: \"Deposit\"\n              };\n              SubwalletTxServ.create(obj).then(function (resp) {\n                // console.log(resp)\n                toast({\n                  message: 'Deposit accepted succesfully',\n                  type: 'is-success',\n                  dismissible: true,\n                  pauseOnHover: true\n                });\n                setAmountPaid(0);\n              }).catch(function (err) {\n                toast({\n                  message: 'Error accepting deposit ' + err,\n                  type: 'is-danger',\n                  dismissible: true,\n                  pauseOnHover: true\n                });\n              });\n              _context13.next = 11;\n              return setButtonState(false);\n\n            case 11:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n\n    return function handleAccept() {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var oldname = medication.participantInfo.client.firstname + \" \" + medication.participantInfo.client.lastname; // console.log(\"oldname\",oldname)\n\n    setSource(medication.participantInfo.client.firstname + \" \" + medication.participantInfo.client.lastname);\n    var newname = source; // console.log(\"newname\",newname)\n\n    if (oldname !== newname) {\n      //newdispense\n      setProductItem([]);\n      setTotalamount(0);\n    }\n\n    if (state.financeModule.state) {\n      medication.show = \"none\";\n      medication.proposedpayment = {\n        balance: 0,\n        paidup: medication.paymentInfo.paidup + medication.paymentInfo.balance,\n        amount: medication.paymentInfo.balance\n      }; //no payment detail push\n\n      setProductItem(function (prevProd) {\n        return prevProd.concat(medication);\n      });\n    } else {\n      if (productItem.length > 0) {\n        setProductItem(function (prevProd) {\n          return prevProd.filter(function (el) {\n            return el._id !== medication._id;\n          });\n        });\n      }\n    } // const paymentoptions= []\n    //const info = medication.participantInfo.client.paymentinfo\n    //let billme={}\n\n\n    getFacilities();\n    return function () {};\n  }, [state.financeModule]);\n\n  var getTotal = /*#__PURE__*/function () {\n    var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              setTotalamount(0);\n              productItem.forEach(function (el) {\n                if (el.show === \"none\") {\n                  setTotalamount(function (prevtotal) {\n                    return Number(prevtotal) + Number(el.serviceInfo.amount);\n                  });\n                }\n\n                if (el.show === \"flex\") {\n                  setTotalamount(function (prevtotal) {\n                    return Number(prevtotal) + Number(el.partPay);\n                  });\n                } // \n\n              });\n\n            case 2:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14);\n    }));\n\n    return function getTotal() {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    console.log(productItem);\n    getTotal();\n    return function () {};\n  }, [productItem]);\n\n  var getFacilities = /*#__PURE__*/function () {\n    var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n      var findProductEntry;\n      return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.next = 2;\n              return SubwalletServ.find({\n                query: {\n                  client: medication.participantInfo.client._id,\n                  organization: user.employeeData[0].facilityDetail._id,\n                  //storeId:state.StoreModule.selectedStore._id,\n                  //clientId:state.ClientModule.selectedClient._id,\n                  $limit: 100,\n                  $sort: {\n                    createdAt: -1\n                  }\n                }\n              });\n\n            case 2:\n              findProductEntry = _context15.sent;\n              console.log(findProductEntry); // console.log(\"balance\", findProductEntry.data[0].amount)\n\n              if (!(findProductEntry.data.length > 0)) {\n                _context15.next = 9;\n                break;\n              }\n\n              _context15.next = 7;\n              return setBalance(findProductEntry.data[0].amount);\n\n            case 7:\n              _context15.next = 11;\n              break;\n\n            case 9:\n              _context15.next = 11;\n              return setBalance(0);\n\n            case 11:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15);\n    }));\n\n    return function getFacilities() {\n      return _ref15.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    // const medication =state.medicationModule.selectedMedication\n    var today = new Date().toLocaleString(); //console.log(today)\n\n    setDate(today);\n    var invoiceNo = random(6, 'uppernumeric');\n    setDocumentNo(invoiceNo);\n    getFacilities();\n    SubwalletServ.on('created', function (obj) {\n      return getFacilities();\n    });\n    SubwalletServ.on('updated', function (obj) {\n      return getFacilities();\n    });\n    SubwalletServ.on('patched', function (obj) {\n      return getFacilities();\n    });\n    SubwalletServ.on('removed', function (obj) {\n      return getFacilities();\n    });\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16() {\n      var newProductEntryModule;\n      return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              newProductEntryModule = {\n                selectedFinance: {},\n                show: 'create'\n              };\n              _context16.next = 3;\n              return setState(function (prevstate) {\n                return _objectSpread(_objectSpread({}, prevstate), {}, {\n                  financeModule: newProductEntryModule\n                });\n              });\n\n            case 3:\n              _context16.next = 5;\n              return setPartPay([]);\n\n            case 5:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16);\n    }));\n  }, []);\n  /*   useEffect(() => {\n        calcamount1=quantity*sellingprice\n         setCalcAmount(calcamount1)\n         console.log(calcamount)\n         setChangeAmount(true)\n        return () => {\n            \n        }\n    }, [quantity]) */\n\n  var handleChangePart = /*#__PURE__*/function () {\n    var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(bill, e) {\n      var item, payObj;\n      return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              console.log(bill, e.target.value);\n\n              if (e.target.value === \"Part\") {\n                bill.show = \"flex\";\n                setPartPay(function (prev) {\n                  return prev.concat(bill);\n                });\n              }\n\n              if (!(e.target.value === \"Full\")) {\n                _context17.next = 11;\n                break;\n              }\n\n              bill.show = \"none\";\n              _context17.next = 6;\n              return productItem.find(function (el) {\n                return el._id === bill._id;\n              });\n\n            case 6:\n              item = _context17.sent;\n              payObj = {\n                amount: item.paymentInfo.balance,\n                mode: \"Full\",\n                date: new Date().toLocaleString()\n              }; //item.partPay=\"\"\n              // item.paymentInfo.paymentDetails.push(payObj)\n\n              item.proposedpayment = {\n                balance: Number(item.paymentInfo.balance) - Number(payObj.amount),\n                paidup: Number(item.paymentInfo.paidup) + Number(payObj.amount),\n                amount: payObj.amount\n              }; // item.paymentInfo.balance=item.paymentInfo.balance - item.paymentInfo.balance\n              //  item.paymentInfo.paidup=Number(item.paymentInfo.paidup) + Number(payObj.amount)\n\n              getTotal();\n              setPartPay(function (prev) {\n                return prev.concat(bill);\n              });\n\n            case 11:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17);\n    }));\n\n    return function handleChangePart(_x8, _x9) {\n      return _ref17.apply(this, arguments);\n    };\n  }();\n\n  var handlePartAmount = /*#__PURE__*/function () {\n    var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(bill, e) {\n      var partAmount, item;\n      return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              partAmount = e.target.value; // bill.partPay=partAmount\n              //const itemList=productItem\n\n              if (!(partAmount === \"\" || partAmount === 0)) {\n                _context18.next = 4;\n                break;\n              }\n\n              toast({\n                message: 'Please enter an amount as part payment',\n                type: 'is-danger',\n                dismissible: true,\n                pauseOnHover: true\n              });\n              return _context18.abrupt(\"return\");\n\n            case 4:\n              _context18.next = 6;\n              return productItem.find(function (el) {\n                return el._id === bill._id;\n              });\n\n            case 6:\n              item = _context18.sent;\n              item.partPay = partAmount;\n              setPartPay(function (prev) {\n                return prev.concat(bill);\n              }); //setProductItem(productItem)\n\n            case 9:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18);\n    }));\n\n    return function handlePartAmount(_x10, _x11) {\n      return _ref18.apply(this, arguments);\n    };\n  }();\n\n  var handleUpdate = /*#__PURE__*/function () {\n    var _ref19 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(bill, e) {\n      var item, partAmount, payObj;\n      return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              if (!(bill.partPay === \"\" || bill.partPay === 0 || bill.partPay === undefined)) {\n                _context19.next = 3;\n                break;\n              }\n\n              toast({\n                message: 'Please enter an amount as part payment',\n                type: 'is-danger',\n                dismissible: true,\n                pauseOnHover: true\n              });\n              return _context19.abrupt(\"return\");\n\n            case 3:\n              _context19.next = 5;\n              return productItem.find(function (el) {\n                return el._id === bill._id;\n              });\n\n            case 5:\n              item = _context19.sent;\n              // console.log(item)\n\n              /* item.partPay=partAmount\n              console.log(item)\n              console.log(productItem) */\n              partAmount = item.partPay;\n\n              if (bill.show === \"flex\") {\n                payObj = {\n                  amount: partAmount,\n                  mode: \"Part\",\n                  date: new Date().toLocaleString()\n                }; // item.paymentInfo.paymentDetails.push(payObj)\n\n                item.proposedpayment = {\n                  balance: Number(item.paymentInfo.balance) - Number(payObj.amount),\n                  paidup: Number(item.paymentInfo.paidup) + Number(payObj.amount),\n                  amount: payObj.amount\n                };\n                /* item.paymentInfo.balance=item.paymentInfo.balance-partAmount\n                item.paymentInfo.paidup=Number(item.paymentInfo.paidup)+ Number(partAmount) */\n              }\n              /* if (bill.show===\"none\"){\n                  const   payObj={\n                      amount:  item.paymentInfo.balance,\n                      mode:\"Full\",\n                      date: new Date().toLocaleString()\n                  }\n                  item.paymentInfo.paymentDetails.push(payObj)\n                  item.paymentInfo.balance=item.paymentInfo.balance - item.paymentInfo.balance\n                  }\n                  \n              */\n\n\n              getTotal();\n              setPartPay(function (prev) {\n                return prev.concat(bill);\n              });\n              toast({\n                message: 'Part payment updated successfully',\n                type: 'is-success',\n                dismissible: true,\n                pauseOnHover: true\n              });\n\n            case 11:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19);\n    }));\n\n    return function handleUpdate(_x12, _x13) {\n      return _ref19.apply(this, arguments);\n    };\n  }();\n\n  var handlePayment = /*#__PURE__*/function () {\n    var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21() {\n      var allItems, obj;\n      return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              if (!(totalamount > balance)) {\n                _context21.next = 3;\n                break;\n              }\n\n              toast({\n                message: 'Total amount due greater than money received. Kindly top up account or reduce number of bills to be paid',\n                type: 'is-danger',\n                dismissible: true,\n                pauseOnHover: true\n              });\n              return _context21.abrupt(\"return\");\n\n            case 3:\n              productItem.forEach(function (el) {\n                if (!el.proposedpayment.amount) {\n                  toast({\n                    message: 'one or more bills do not have a payment method selected',\n                    type: 'is-danger',\n                    dismissible: true,\n                    pauseOnHover: true\n                  });\n                  return;\n                }\n              }); //transform \n\n              productItem.forEach(function (el) {\n                if (el.show === \"flex\") {\n                  var payObj = {\n                    amount: el.proposedpayment.amount,\n                    mode: \"Part\",\n                    date: new Date().toLocaleString()\n                  };\n                  el.paymentInfo.paymentDetails.push(payObj);\n                }\n\n                if (el.show === \"none\") {\n                  var _payObj = {\n                    amount: el.proposedpayment.amount,\n                    mode: \"Full\",\n                    date: new Date().toLocaleString()\n                  };\n                  el.paymentInfo.paymentDetails.push(_payObj);\n                }\n              });\n              allItems = productItem;\n              allItems.forEach(function (el) {\n                el.paymentInfo.balance = el.proposedpayment.balance;\n                el.paymentInfo.paidup = el.proposedpayment.paidup;\n                el.paymentInfo.amountpaid = el.proposedpayment.amount;\n\n                if (el.paymentInfo.balance === 0) {\n                  el.billing_status = \"Fully Paid\";\n                } else {\n                  el.billing_status = \"Part Payment\";\n                }\n\n                el.show = \"none\";\n                el.checked = false;\n                delete el.proposedpayment;\n                delete el.partPay;\n              });\n              obj = {\n                clientId: medication.participantInfo.client._id,\n                //sending money\n                clientName: source,\n                client: medication.participantInfo.client,\n                facilityId: user.employeeData[0].facilityDetail._id,\n                invoiceNo: documentNo,\n                totalamount: totalamount,\n                createdby: user._id,\n                status: \"Fully Paid\",\n                //billid to be paid : ref invoice to pay\n                bills: allItems,\n                balance: balance,\n                facilityName: user.employeeData[0].facilityDetail.facilityName\n              };\n              console.log(obj);\n              InvoiceServ.create(obj).then( /*#__PURE__*/function () {\n                var _ref21 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(resp) {\n                  var newProductEntryModule;\n                  return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n                    while (1) {\n                      switch (_context20.prev = _context20.next) {\n                        case 0:\n                          setProductItem([]);\n                          toast({\n                            message: 'payment successful',\n                            type: 'is-success',\n                            dismissible: true,\n                            pauseOnHover: true\n                          });\n                          newProductEntryModule = {\n                            selectedFinance: {},\n                            show: 'create'\n                          };\n                          _context20.next = 5;\n                          return setState(function (prevstate) {\n                            return _objectSpread(_objectSpread({}, prevstate), {}, {\n                              finance: newProductEntryModule\n                            });\n                          });\n\n                        case 5:\n                        case \"end\":\n                          return _context20.stop();\n                      }\n                    }\n                  }, _callee20);\n                }));\n\n                return function (_x14) {\n                  return _ref21.apply(this, arguments);\n                };\n              }()).catch(function (err) {\n                toast({\n                  message: 'Error occurred with payment' + err,\n                  type: 'is-danger',\n                  dismissible: true,\n                  pauseOnHover: true\n                });\n              }); //2. call single end point for billspayment?\n              //2.1 create subwallet transaction- debit\n              //2.2 update subwallet\n              //2.3 mark orders as paid\n              //2.4 mark bills as paid\n\n            case 10:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21);\n    }));\n\n    return function handlePayment() {\n      return _ref20.apply(this, arguments);\n    };\n  }(); // console.log(\"simpa\")\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-overflow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-header-title\",\n          children: \"Write Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field \",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field mt-2 is-grouped\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-success is-small\",\n              onClick: handlePayment,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(ReportCreate, \"2ENQkx5k33ERYDypzzZkudZr1Cs=\");\n\n_c = ReportCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportCreate\");","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/src/components/Epidemiology/ReportCreate.js"],"names":["React","useState","useContext","useEffect","useRef","client","DebounceInput","useForm","UserContext","ObjectContext","toast","ProductCreate","Encounter","random","require","searchfacility","ReportCreate","success","setSuccess","message","setMessage","facility","setFacility","SubwalletTxServ","service","SubwalletServ","OrderServ","InvoiceServ","user","currentUser","setCurrentUser","type","setType","documentNo","setDocumentNo","totalamount","setTotalamount","description","setDescription","productId","setProductId","source","setSource","date","setDate","name","setName","inventoryId","setInventoryId","baseunit","setBaseunit","quantity","setQuantity","sellingprice","setSellingPrice","costprice","setCostprice","invquantity","setInvQuantity","calcamount","setCalcAmount","productItem","setProductItem","billingId","setBilllingId","changeAmount","setChangeAmount","paymentmode","setPaymentMode","paymentOptions","setPaymentOptions","billMode","setBillMode","productModal","setProductModal","obj","setObj","amountPaid","setAmountPaid","balance","setBalance","buttonState","setButtonState","partPay","setPartPay","state","setState","inputEl","calcamount1","hidestatus","medication","financeModule","selectedFinance","showDocumentation","value","handlecloseModal","handleChangeMode","handleRow","ProductEntry","newProductEntryModule","selectedMedication","show","prevstate","medicationModule","productitems","productEntry","setProductEntry","productItemI","amount","getSearchfacility","contracts","billingDetails","contract","filter","el","source_org","detail","hmo","price","company","handleUpdateTotal","prevtotal","Number","handleChangeType","e","target","handleAmount","handleClickProd","dismissible","pauseOnHover","prevProd","concat","billInfo","orderInfo","orderId","_id","orderObj","serviceInfo","createdby","paymentInfo","participantInfo","billingFacility","destination","billingFacilityName","destination_name","locationId","StoreModule","selectedStore","clientId","createdBy","id","billing_status","patch","order_status","then","resp","catch","err","console","log","handleQtty","resetform","handleMedicationDone","onSubmit","preventDefault","transactioncategory","currentEmployee","facilityDetail","storeId","handleChangeAmount","rev","newclient","handleAccept","organization","employeeData","category","toName","facilityName","fromName","firstname","lastname","LocationModule","selectedLocation","create","oldname","newname","proposedpayment","paidup","length","getFacilities","getTotal","forEach","find","query","$limit","$sort","createdAt","findProductEntry","data","today","Date","toLocaleString","invoiceNo","on","handleChangePart","bill","prev","item","payObj","mode","handlePartAmount","partAmount","handleUpdate","undefined","handlePayment","paymentDetails","push","allItems","amountpaid","checked","clientName","facilityId","status","bills","finance"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, {useState,useContext, useEffect,useRef} from 'react'\nimport client from '../../feathers'\nimport {DebounceInput} from 'react-debounce-input';\nimport { useForm } from \"react-hook-form\";\n//import {useHistory} from 'react-router-dom'\nimport {UserContext,ObjectContext} from '../../context'\nimport {toast} from 'bulma-toast'\nimport {ProductCreate} from './Products'\nimport Encounter from '../EncounterMgt/Encounter';\nvar random = require('random-string-generator');\n// eslint-disable-next-line\nconst searchfacility={};\n\nexport default function ReportCreate(){\n    // const { register, handleSubmit,setValue} = useForm(); //, watch, errors, reset \n     //const [error, setError] =useState(false)\n     const [success, setSuccess] =useState(false)\n     const [message,setMessage] = useState(\"\")\n     // eslint-disable-next-line\n     const [facility,setFacility] = useState()\n     const SubwalletTxServ=client.service('subwallettransactions')\n     const SubwalletServ=client.service('subwallet')\n     const OrderServ=client.service('order')\n     const InvoiceServ=client.service('invoice')\n     //const history = useHistory()\n     const {user} = useContext(UserContext) //,setUser\n     // eslint-disable-next-line\n     const [currentUser,setCurrentUser] = useState()\n     const [type,setType] = useState(\"Bill\")\n     const [documentNo,setDocumentNo] = useState(\"\")\n     const [totalamount,setTotalamount] = useState(0)\n     const [description,setDescription] = useState(null)\n     const [productId,setProductId] = useState(\"\")\n     const [source,setSource] = useState(\"\")\n     const [date,setDate] = useState(\"\")\n     const [name,setName] = useState(\"\")\n     const [inventoryId,setInventoryId] = useState(\"\")\n     const [baseunit,setBaseunit] = useState(\"\")\n     const [quantity,setQuantity] = useState(\"\")\n     const [sellingprice,setSellingPrice] = useState(\"\")\n     const [costprice,setCostprice] = useState(0)\n     const [invquantity,setInvQuantity] = useState(\"\")\n     const [calcamount,setCalcAmount] = useState(0)\n     const [productItem,setProductItem] = useState([])\n      const [billingId,setBilllingId]=useState(\"\")  \n      const [changeAmount, setChangeAmount] = useState(true)\n      const [paymentmode, setPaymentMode] = useState(\"Cash\")\n      const [paymentOptions, setPaymentOptions]=useState([])\n      const [billMode, setBillMode]=useState(\"\")\n      const [productModal, setProductModal]=useState(false)\n      const [obj, setObj]=useState(\"\")\n      const [amountPaid, setAmountPaid]=useState(0)\n      const [balance, setBalance]=useState(0)\n      const [buttonState, setButtonState]=useState(false)\n      const [partPay,setPartPay]=useState([])\n     \n     const {state,setState}=useContext(ObjectContext)\n     const inputEl = useRef(0);\n     let calcamount1\n     let hidestatus\n  \n\n    \n  let medication =state.financeModule.selectedFinance\n  //console.log(state.financeModule.state)\n\n  const showDocumentation = async (value)=>{\n    setProductModal(true)\n  }\n  const handlecloseModal =()=>{\n    setProductModal(false)\n   // handleSearch(val)\n    }\n\n  const handleChangeMode= async(value)=>{\n        //console.log(value)\n       await setPaymentMode(value)\n      /*   console.log(paymentOptions)\n       let billm= paymentOptions.filter(el=>el.name===value)\n       await setBillMode(billm)\n        console.log(billm) */\n        // at startup\n        // check payment mode options from patient financial info\n        // load that to select options\n        // default to HMO-->company-->family-->cash\n        //when chosen\n        //append payment mode to order\n        //check service contract for pricing info\n        // calculate pricing \n        // pricing\n\n\n    }\n\n  const handleRow= async(ProductEntry)=>{\n    //console.log(\"b4\",state)\n\n    //console.log(\"handlerow\",ProductEntry)\n\n    //await setMedication(ProductEntry)\n\n    const    newProductEntryModule={\n        selectedMedication:ProductEntry,\n        show :'detail'\n    }\n  await setState((prevstate)=>({...prevstate, medicationModule:newProductEntryModule}))\n   //console.log(state)\n  // ProductEntry.show=!ProductEntry.show\n\n        }  \n \n  const [productEntry,setProductEntry]=useState({\n         productitems:[],\n         date,\n         documentNo,\n         type,\n         totalamount,\n         source,\n \n     })\n  \n  const productItemI={\n         productId,\n         name,\n         quantity,\n         sellingprice,\n         amount:calcamount, //||qamount\n         baseunit,\n         costprice,\n         billingId\n \n     }\n     // consider batchformat{batchno,expirydate,qtty,baseunit}\n     //consider baseunoit conversions\n  const getSearchfacility=async (obj)=>{\n       await setObj(obj)\n        if (!obj){\n            //\"clear stuff\"\n            setProductId(\"\")\n            setName(\"\")\n            setBaseunit(\"\")\n            setInventoryId(\"\")\n            setSellingPrice(\"\")\n            setInvQuantity(\"\")\n            setDescription(\"\")\n            setCostprice(\"\")\n           // setCalcAmount(null)\n            return\n        }\n \n         setProductId(obj.productId)\n         setName(obj.name)\n         setBaseunit(obj.baseunit)\n         setInventoryId(obj.inventoryId)\n         setSellingPrice(obj.sellingprice) //modify this based on billing mode\n         setInvQuantity(obj.quantity)\n         setCostprice(obj.costprice)\n         setBilllingId(obj.billingId)\n\n         const contracts=obj.billingDetails.contracts\n         //const billingserv=client.service('billing')\n        if( billMode.type===\"HMO Cover\"){ //paymentmode\n         let contract=contracts.filter(el=>el.source_org===billMode.detail.hmo)\n       //  console.log(contract[0].price)\n         setSellingPrice(contract[0].price)\n       //  console.log(sellingprice)\n        \n        }\n        if( billMode.type===\"Company Cover\"){ //paymentmode\n            let contract=contracts.filter(el=>el.source_org===billMode.detail.company)\n         //   console.log(contract[0].price)\n            setSellingPrice(contract[0].price)\n         //   console.log(sellingprice)\n           \n           }\n          \n        /*  setValue(\"facility\", obj._id,  {\n             shouldValidate: true,\n             shouldDirty: true\n         }) */\n     }\n\n     useEffect(() => {\n       /*  console.log(obj)\n        console.log(billMode)\n        if( paymentmode!==\"Cash\" && obj){\n            const contracts=obj.billingDetails.contracts\n            let contract=contracts.filter(el=>el.source_org===billMode.detail.hmo)\n           console.log(contract[0].price)\n           setSellingPrice(contract[0].price)\n           console.log(sellingprice)\n       }\n         return () => {\n            \n         } */\n     }, [obj])\n\n     useEffect(() => {\n         setCurrentUser(user)\n         //console.log(currentUser)\n         return () => {\n         \n         }\n     }, [user])\n \n     const handleUpdateTotal=async ()=>{\n        await setTotalamount(prevtotal=>Number(prevtotal) + Number(calcamount))\n     }\n \n     const handleChangeType=async (e)=>{\n         //console.log(e.target.value)\n         await setType(e.target.value)\n     }\n \n     const handleAmount= async()=>{\n         await setDescription(\"\")\n        // alert(\"Iam chaning qamount\")\n     }\n\n     const handleClickProd=async()=>{\n       /*   console.log(\"amount: \",productItemI.amount)\n         console.log(\"qamount: \",qamount)\n         console.log(\"calcamount: \",calcamount) */\n        if ( quantity===0||quantity===\"\"|| productId===\"\"){\n            toast({\n                message: 'You need to choose a product and quantity to proceed',\n                type: 'is-danger',\n                dismissible: true,\n                pauseOnHover: true,\n              }) \n              return \n        }\n\n         await setSuccess(false)\n         await setProductItem(\n             prevProd=>prevProd.concat(productItemI)\n         )\n        handleUpdateTotal()\n            // generate billing info\n            const billInfo={\n                orderInfo:{\n                    orderId:medication._id,\n                    orderObj:medication,\n                  },\n                  serviceInfo:{            \n                    price: productItemI.sellingprice,\n                    quantity: productItemI.quantity,\n                    productId: productItemI.productId,\n                    name: productItemI.name,\n                    baseunit: productItemI.baseunit,\n                    amount:productItemI.amount,\n                    billingId:productItemI.billingId,\n                    createdby:user._id,\n                  },\n                  paymentInfo:{},\n                  participantInfo:{\n                    billingFacility:medication.destination,\n                    billingFacilityName:medication.destination_name,\n                    locationId:state.StoreModule.selectedStore._id, //selected location,\n                    clientId:medication.clientId,\n                    client:medication.client,\n                    paymentmode:billMode\n                  },\n                  createdBy:user.id,\n                  billing_status:\"Unpaid\"\n                }\n\n        //update order\n        \n        OrderServ.patch(medication._id,{\n            order_status:\"Billed\",\n            billInfo,\n        }).then((resp)=>{\n           // medication=resp\n           // console.log(resp)\n             handleRow(resp) \n            //update dispense\n\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n        \n        //update status(billed) + action()\n        //?attached chosen product to medication\n        //dispense helper?\n         setName(\"\")\n         setBaseunit(\"\")\n         setQuantity(\"\")\n         setInventoryId(\"\")\n         setSellingPrice(\"\")\n         setInvQuantity(\"\")\n             handleAmount()\n        // setCalcAmount(null)\n        await setSuccess(true)\n        /* console.log(success)\n        console.log(qamount)\n        console.log(productItem) */\n        setChangeAmount(true)\n     }\n   \n \n     const handleQtty=async(e)=>{\n         if (invquantity<e.target.value){\n             toast({\n                 message: 'You can not sell more quantity than exist in inventory ' ,\n                 type: 'is-danger',\n                 dismissible: true,\n                 pauseOnHover: true,\n               })\n             return\n         }\n         setQuantity(e.target.value)\n         calcamount1=quantity*sellingprice\n         await setCalcAmount(calcamount1)\n       //  console.log(calcamount)\n     }\n \n     useEffect( () => {\n          setProductEntry({\n             \n             date,\n             documentNo,\n             type,\n             totalamount,\n             source,\n         })\n\n        setCalcAmount(quantity*sellingprice) \n         return () => {\n             \n         }\n     },[date])\n \n     const resetform=()=>{\n      setType(\"Sales\")\n     setDocumentNo(\"\")\n     setTotalamount(\"\")\n     setProductId(\"\")\n     setSource(\"\")\n     setDate(\"\")\n     setName(\"\")\n     setBaseunit()\n     setCostprice()\n     setProductItem([])\n     }\n\n\n     const handleMedicationDone= async()=>{ //handle selected single order\n        //console.log(\"b4\",state)\n    \n        //console.log(\"handlerow\",ProductEntry)\n    \n       // await setSelectedMedication(\"\")\n    \n        const    newProductEntryModule={\n            selectedMedication:{},\n            show :'create'\n        }\n        \n      await setState((prevstate)=>({...prevstate, medicationModule:newProductEntryModule}))\n       //console.log(state)\n      // ProductEntry.show=!ProductEntry.show\n    \n    }\n \n     const onSubmit = async(e) =>{\n         e.preventDefault();\n         setMessage(\"\")\n         //setError(false)\n         setSuccess(false)\n         await setProductEntry({\n             \n             date,\n             documentNo,\n             type,\n             totalamount,\n             source,\n         })\n         productEntry.productitems=productItem\n         productEntry.createdby=user._id\n         productEntry.transactioncategory=\"debit\"\n        \n          // console.log(\"b4 facility\",productEntry);\n           if (user.currentEmployee){\n          productEntry.facility=user.currentEmployee.facilityDetail._id  // or from facility dropdown\n           }else{\n             toast({\n                 message: 'You can not remove inventory from any organization',\n                 type: 'is-danger',\n                 dismissible: true,\n                 pauseOnHover: true,\n               }) \n               return\n           }\n           \n           if (state.StoreModule.selectedStore._id){\n             productEntry.storeId=state.StoreModule.selectedStore._id\n           }else{\n             toast({\n                 message: 'You need to select a store before removing inventory',\n                 type: 'is-danger',\n                 dismissible: true,\n                 pauseOnHover: true,\n               }) \n               return\n           }\n       } \n\n    const handleChangeAmount=()=>{\n        setChangeAmount((rev)=>(!rev))\n        \n    }\n\n    const newclient=async ()=>{\n        await  setProductItem([])\n    }\n    const handleAccept=async()=>{\n        await setButtonState(true)\n        if (paymentmode===\"\"||amountPaid===0|| amountPaid===\"\"){\n            toast({\n                message: 'Kindly choose payment mode or enter amount' ,\n                type: 'is-danger',\n                dismissible: true,\n                pauseOnHover: true,\n              })\n              await setButtonState(false)\n              return\n        }\n        let obj={\n           // toWallet:{ type: Schema.Types.ObjectId, ref:'facility', }, //receiving money\n            //fromWallet:{ type: Schema.Types.ObjectId, ref:'facility', },//sending money\n            //subwallet:{ type: Schema.Types.ObjectId, ref:'subwallet', },\n            client:medication.participantInfo.client._id,\n            organization:user.employeeData[0].facilityDetail._id,\n            category:\"credit\", //debit/credit\n            amount:amountPaid,\n            description: description,\n           \n            toName:user.employeeData[0].facilityDetail.facilityName,\n            fromName:medication.participantInfo.client.firstname + \" \"+ medication.participantInfo.client.lastname,\n            createdby: user._id,\n            \n           // refBill:[{ type: Schema.Types.ObjectId, ref:'bills'  }], //billid to be paid : ref invoice to pay\n           // info:{ type: Schema.Types.Mixed},\n            paymentmode:paymentmode,\n            \n            facility: user.employeeData[0].facilityDetail._id,\n            locationId: state.LocationModule.selectedLocation._id,\n            type: \"Deposit\"\n\n        }\n       SubwalletTxServ.create(obj)\n       .then((resp)=>{\n          // console.log(resp)\n\n        toast({\n            message: 'Deposit accepted succesfully',\n            type: 'is-success',\n            dismissible: true,\n            pauseOnHover: true,\n          })\n          setAmountPaid(0)\n       })\n       .catch((err)=>{\n        toast({\n            message: 'Error accepting deposit ' + err,\n            type: 'is-danger',\n            dismissible: true,\n            pauseOnHover: true,\n          })\n\n       })\n       await setButtonState(false)\n    }\n\n    useEffect(() => {\n        const oldname=medication.participantInfo.client.firstname + \" \"+ medication.participantInfo.client.lastname\n       // console.log(\"oldname\",oldname)\n        setSource(medication.participantInfo.client.firstname + \" \"+ medication.participantInfo.client.lastname)\n\n        const newname=source\n       // console.log(\"newname\",newname)\n        if (oldname!==newname){\n            //newdispense\n        \n        setProductItem([])\n        setTotalamount(0)\n\n        }\n        if (state.financeModule.state){\n            medication.show=\"none\"\n            medication.proposedpayment={\n                balance:0,\n                paidup:medication.paymentInfo.paidup + medication.paymentInfo.balance,\n                amount:medication.paymentInfo.balance\n            }\n            //no payment detail push\n          \n         setProductItem(\n            prevProd=>prevProd.concat(medication)\n        )\n        }else{\n            if(productItem.length>0){\n                setProductItem(\n                    prevProd=>prevProd.filter(el=>el._id!==medication._id)\n                )\n            }\n        }\n\n       // const paymentoptions= []\n        //const info = medication.participantInfo.client.paymentinfo\n        //let billme={}\n        getFacilities()\n       \n        return () => {\n           \n        }\n    }, [state.financeModule])\n\n    const getTotal= async()=>{\n        setTotalamount(0)\n        productItem.forEach(el=>{\n            if (el.show===\"none\"){\n                setTotalamount(prevtotal=>Number(prevtotal) + Number(el.serviceInfo.amount) )\n            }\n            if (el.show===\"flex\"){\n                setTotalamount(prevtotal=>Number(prevtotal) + Number(el.partPay) )\n            }\n          \n            // \n        })\n    }\n\n    useEffect(() => {\n        console.log(productItem)\n       getTotal()\n        return () => {\n        \n        }\n    }, [productItem])\n\n    const getFacilities= async()=>{\n       \n        // console.log(\"here b4 server\")\n        const findProductEntry= await SubwalletServ.find(\n        {query: {\n           \n            client:medication.participantInfo.client._id,\n            organization:user.employeeData[0].facilityDetail._id,\n            //storeId:state.StoreModule.selectedStore._id,\n            //clientId:state.ClientModule.selectedClient._id,\n            $limit:100,\n            $sort: {\n                createdAt: -1\n            }\n            }})\n             console.log(findProductEntry)\n\n     // console.log(\"balance\", findProductEntry.data[0].amount)\n        if (findProductEntry.data.length>0){\n            await setBalance(findProductEntry.data[0].amount)\n        }else{\n            await setBalance(0) \n            \n        } \n\n      //  await setState((prevstate)=>({...prevstate, currentClients:findProductEntry.groupedOrder}))\n        }   \n\n\n\n     useEffect(() => {\n       // const medication =state.medicationModule.selectedMedication\n         const today=new Date().toLocaleString()\n         //console.log(today)\n         setDate(today)\n         const invoiceNo=random(6,'uppernumeric')\n         setDocumentNo(invoiceNo)\n\n            getFacilities()\n            SubwalletServ.on('created', (obj)=>getFacilities())\n            SubwalletServ.on('updated', (obj)=>getFacilities())\n            SubwalletServ.on('patched', (obj)=>getFacilities())\n            SubwalletServ.on('removed', (obj)=>getFacilities())\n\n         return async() => {\n            const    newProductEntryModule={\n                selectedFinance:{},\n                show :'create'\n                }\n           await setState((prevstate)=>({...prevstate, financeModule:newProductEntryModule}))\n           await setPartPay([])\n         }\n     }, [])\n\n  /*   useEffect(() => {\n        calcamount1=quantity*sellingprice\n         setCalcAmount(calcamount1)\n         console.log(calcamount)\n         setChangeAmount(true)\n        return () => {\n            \n        }\n    }, [quantity]) */\n\n    \n    const handleChangePart= async(bill, e)=>{\n        console.log(bill, e.target.value)\n        if(e.target.value===\"Part\"){\n            bill.show=\"flex\"\n        setPartPay((prev)=>prev.concat(bill))\n        }\n      \n        if(e.target.value===\"Full\"){\n            bill.show=\"none\"\n            \n            let item=  await productItem.find(el=>\n                el._id===bill._id\n            )\n            const   payObj={\n                amount:  item.paymentInfo.balance,\n                mode:\"Full\",\n                date: new Date().toLocaleString()\n            }\n            //item.partPay=\"\"\n           // item.paymentInfo.paymentDetails.push(payObj)\n            item.proposedpayment={\n                balance:Number(item.paymentInfo.balance) - Number(payObj.amount),\n                paidup:Number(item.paymentInfo.paidup) + Number(payObj.amount),\n                amount:payObj.amount\n            }\n           // item.paymentInfo.balance=item.paymentInfo.balance - item.paymentInfo.balance\n          //  item.paymentInfo.paidup=Number(item.paymentInfo.paidup) + Number(payObj.amount)\n            getTotal()\n            setPartPay((prev)=>prev.concat(bill))\n\n        }\n        \n    }\n\n    const handlePartAmount= async(bill,e)=>{\n        \n        let partAmount = e.target.value\n       // bill.partPay=partAmount\n       //const itemList=productItem\n       if (partAmount===\"\" ||partAmount===0  ){\n        toast({\n            message: 'Please enter an amount as part payment',\n            type: 'is-danger',\n            dismissible: true,\n            pauseOnHover: true,\n          })\n        return\n       }\n       let item=  await productItem.find(el=>\n        el._id===bill._id\n        )\n    item.partPay=partAmount\n    setPartPay((prev)=>prev.concat(bill))     \n        //setProductItem(productItem)\n    }\n\n    const handleUpdate= async(bill,e)=>{\n        if (bill.partPay===\"\" ||bill.partPay===0||bill.partPay===undefined  ){\n            toast({\n                message: 'Please enter an amount as part payment',\n                type: 'is-danger',\n                dismissible: true,\n                pauseOnHover: true,\n              })\n            return\n           }\n       // console.log(bill)\n        let item=  await productItem.find(el=>\n            el._id===bill._id\n        )\n       // console.log(item)\n        /* item.partPay=partAmount\n        console.log(item)\n        console.log(productItem) */\n        \n        let partAmount= item.partPay\n       \n        if (bill.show===\"flex\"){\n                const  payObj={\n                amount:  partAmount,\n                mode:\"Part\",\n                date: new Date().toLocaleString()\n            }\n           // item.paymentInfo.paymentDetails.push(payObj)\n            item.proposedpayment={\n                balance:Number(item.paymentInfo.balance) - Number(payObj.amount),\n                paidup:Number(item.paymentInfo.paidup) + Number(payObj.amount),\n                amount:payObj.amount\n            }\n            /* item.paymentInfo.balance=item.paymentInfo.balance-partAmount\n            item.paymentInfo.paidup=Number(item.paymentInfo.paidup)+ Number(partAmount) */\n\n        }\n\n        /* if (bill.show===\"none\"){\n            const   payObj={\n                amount:  item.paymentInfo.balance,\n                mode:\"Full\",\n                date: new Date().toLocaleString()\n            }\n            item.paymentInfo.paymentDetails.push(payObj)\n            item.paymentInfo.balance=item.paymentInfo.balance - item.paymentInfo.balance\n            }\n            \n */\n        \n        getTotal()\n        setPartPay((prev)=>prev.concat(bill))\n        toast({\n            message: 'Part payment updated successfully',\n            type: 'is-success',\n            dismissible: true,\n            pauseOnHover: true,\n          })\n\n    }\n\n    const handlePayment= async ()=>{\n           //1. check if there is sufficient amount\n           if ( totalamount>balance){\n            toast({\n                message: 'Total amount due greater than money received. Kindly top up account or reduce number of bills to be paid',\n                type: 'is-danger',\n                dismissible: true,\n                pauseOnHover: true,\n              })\n    \n              return\n           }\n          \n           \n           \n    productItem.forEach(el=>{\n            if (!el.proposedpayment.amount){\n             toast({\n                 message: 'one or more bills do not have a payment method selected',\n                 type: 'is-danger',\n                 dismissible: true,\n                 pauseOnHover: true,\n               })\n             return\n             }\n            })\n\n             //transform \n    productItem.forEach(el=>{\n            if (el.show===\"flex\"){\n                    const  payObj={\n                    amount:  el.proposedpayment.amount,\n                    mode:\"Part\",\n                    date: new Date().toLocaleString()\n                }\n            el.paymentInfo.paymentDetails.push(payObj)\n            }\n\n            if (el.show===\"none\"){\n                const  payObj={\n                amount:  el.proposedpayment.amount,\n                mode:\"Full\",\n                date: new Date().toLocaleString()\n                }\n                el.paymentInfo.paymentDetails.push(payObj)\n                }\n\n            })\n\n        let allItems=productItem\n\n           allItems.forEach(el=>{\n\n            el.paymentInfo.balance = el.proposedpayment.balance\n            el.paymentInfo.paidup = el.proposedpayment.paidup\n            el.paymentInfo.amountpaid = el.proposedpayment.amount\n\n            if (el.paymentInfo.balance === 0){\n                el.billing_status=\"Fully Paid\"\n            }else{\n                el.billing_status=\"Part Payment\"\n            }\n            el.show=\"none\"\n            el.checked=false\n            delete el.proposedpayment\n            delete el.partPay\n           })\n           \n\n           const obj ={\n            clientId:medication.participantInfo.client._id,//sending money\n            clientName: source ,\n            client:medication.participantInfo.client,\n            facilityId:user.employeeData[0].facilityDetail._id,\n            invoiceNo:documentNo,\n            totalamount:totalamount,\n            createdby:user._id,\n            status:\"Fully Paid\", //billid to be paid : ref invoice to pay\n            bills:allItems,\n            balance:balance,\n            facilityName:user.employeeData[0].facilityDetail.facilityName\n           }\n\n           console.log(obj)\n\n           \n            InvoiceServ.create(obj)\n            .then( async(resp)=>{\n                setProductItem([])\n                toast({\n                    message: 'payment successful',\n                    type: 'is-success',\n                    dismissible: true,\n                    pauseOnHover: true,\n                  })\n                  const    newProductEntryModule={\n                    selectedFinance:{},\n                    show :'create'\n                }\n              await setState((prevstate)=>({...prevstate, finance:newProductEntryModule}))\n            })\n            .catch((err)=>{\n                toast({\n                    message: 'Error occurred with payment' + err,\n                    type: 'is-danger',\n                    dismissible: true,\n                    pauseOnHover: true,\n                  }) \n            })\n\n        \n           \n           //2. call single end point for billspayment?\n\n           //2.1 create subwallet transaction- debit\n\n           //2.2 update subwallet\n\n           //2.3 mark orders as paid\n\n           //2.4 mark bills as paid\n\n        }\n// console.log(\"simpa\")\n     return (\n        <>\n            <div className=\"card card-overflow\">\n                <div className=\"card-header\">\n                    <p className=\"card-header-title\">\n                       Write Result\n                    </p>\n                </div>\n                <div className=\"card-content \">\n                    <div className=\"field \">\n                        <textarea></textarea>\n\n                    </div>\n\n\n\n                    <div className=\"field mt-2 is-grouped\">\n                        <p className=\"control\">\n                            <button className=\"button is-success is-small\"  onClick={handlePayment}>\n                                Save\n                            </button>\n                        </p>\n                    </div>\n                </div>   \n            </div>     \n        </>\n     )\n    \n }\n \n\n "]},"metadata":{},"sourceType":"module"}