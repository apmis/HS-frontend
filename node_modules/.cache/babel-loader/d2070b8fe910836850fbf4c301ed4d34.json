{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar objectWithoutProperties = function objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar useJitsi = function useJitsi(_ref) {\n  var _ref$domain = _ref.domain,\n      domain = _ref$domain === undefined ? 'meet.jit.si' : _ref$domain,\n      parentNode = _ref.parentNode,\n      subject = _ref.subject,\n      password = _ref.password,\n      displayName = _ref.displayName,\n      onMeetingEnd = _ref.onMeetingEnd,\n      options = objectWithoutProperties(_ref, ['domain', 'parentNode', 'subject', 'password', 'displayName', 'onMeetingEnd']);\n\n  var _useState = useState(true),\n      _useState2 = slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = slicedToArray(_useState5, 2),\n      jitsi = _useState6[0],\n      setJitsi = _useState6[1];\n\n  useEffect(function () {\n    if (!window.JitsiMeetExternalAPI) {\n      setError('JitsiMeetExternalAPI is not available, check if https://meet.jit.si/external_api.js was loaded');\n      return;\n    }\n\n    options.parentNode = document.getElementById(parentNode);\n\n    if (!options.parentNode) {\n      setError('Parent node is not available, check container have the correct id: \"' + parentNode + '\"');\n      return;\n    }\n\n    var client = new window.JitsiMeetExternalAPI(domain, _extends({}, options));\n    setJitsi(client);\n    setLoading(false);\n    setError(null);\n    subject && client.executeCommand('subject', subject);\n    client.addEventListener('videoConferenceJoined', function () {\n      password && client.executeCommand('password', password);\n      displayName && client.executeCommand('displayName', displayName);\n    });\n    client.addEventListener('passwordRequired', function () {\n      password && client.executeCommand('password', password);\n    });\n    onMeetingEnd && client.addEventListener('readyToClose', onMeetingEnd);\n    return function () {\n      return jitsi && jitsi.dispose();\n    };\n  }, [window.JitsiMeetExternalAPI]);\n  return {\n    jitsi: jitsi,\n    error: error,\n    loading: loading\n  };\n};\n\nuseJitsi.propTypes = {\n  options: PropTypes.shape({\n    domain: PropTypes.string,\n    roomName: PropTypes.string.isRequired,\n    subject: PropTypes.string,\n    password: PropTypes.string,\n    displayName: PropTypes.string,\n    onMeetingEnd: PropTypes.func,\n    width: PropTypes.string,\n    height: PropTypes.string,\n    parentNode: PropTypes.string,\n    configOverwrite: PropTypes.object,\n    interfaceConfigOverwrite: PropTypes.object,\n    noSSL: PropTypes.bool,\n    jwt: PropTypes.string,\n    onload: PropTypes.func,\n    invitees: PropTypes.array,\n    devices: PropTypes.object,\n    userInfo: PropTypes.object\n  })\n};\n\nvar Jutsu = function Jutsu(_ref) {\n  var loadingComponent = _ref.loadingComponent,\n      errorComponent = _ref.errorComponent,\n      containerStyles = _ref.containerStyles,\n      jitsiContainerStyles = _ref.jitsiContainerStyles,\n      onError = _ref.onError,\n      onJitsi = _ref.onJitsi,\n      options = objectWithoutProperties(_ref, ['loadingComponent', 'errorComponent', 'containerStyles', 'jitsiContainerStyles', 'onError', 'onJitsi']);\n\n  var _useJitsi = useJitsi(_extends({\n    parentNode: 'jitsi-container'\n  }, options)),\n      loading = _useJitsi.loading,\n      error = _useJitsi.error,\n      jitsi = _useJitsi.jitsi;\n\n  useEffect(function () {\n    if (jitsi && onJitsi) onJitsi(jitsi);\n  }, [jitsi]);\n  useEffect(function () {\n    if (error && onError) onError(error);\n  }, [error]);\n  return React.createElement('div', {\n    style: _extends({\n      width: '800px',\n      height: '400px'\n    }, containerStyles)\n  }, error && (errorComponent || React.createElement('p', null, error)), !error && loading && (loadingComponent || React.createElement('p', null, 'Loading ...')), React.createElement('div', {\n    id: 'jitsi-container',\n    style: _extends({\n      display: loading ? 'none' : 'block',\n      width: '100%',\n      height: '100%'\n    }, jitsiContainerStyles)\n  }));\n};\n\nJutsu.propTypes = {\n  jwt: PropTypes.string,\n  domain: PropTypes.string,\n  subject: PropTypes.string,\n  password: PropTypes.string,\n  roomName: PropTypes.string.isRequired,\n  displayName: PropTypes.string,\n  onMeetingEnd: PropTypes.func,\n  loadingComponent: PropTypes.object,\n  errorComponent: PropTypes.object,\n  containerStyles: PropTypes.object,\n  jitsiContainerStyles: PropTypes.object,\n  configOverwrite: PropTypes.object,\n  interfaceConfigOverwrite: PropTypes.object,\n  onError: PropTypes.func,\n  onJitsi: PropTypes.func\n};\nexport { Jutsu, useJitsi };","map":{"version":3,"sources":["../src/useJitsi.js","../src/index.js"],"names":["useJitsi","domain","parentNode","subject","password","displayName","onMeetingEnd","options","loading","setLoading","useState","error","setError","jitsi","setJitsi","window","document","client","PropTypes","object","Jutsu","loadingComponent","errorComponent","containerStyles","jitsiContainerStyles","onError","onJitsi","width","height","func"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nconst useJitsi = ({\n  domain = 'meet.jit.si',\n  parentNode,\n  subject,\n  password,\n  displayName,\n  onMeetingEnd,\n  ...options\n}) => {\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [jitsi, setJitsi] = useState(null)\n\n  useEffect(() => {\n    if (!window.JitsiMeetExternalAPI) {\n      setError('JitsiMeetExternalAPI is not available, check if https://meet.jit.si/external_api.js was loaded')\n      return\n    }\n\n    options.parentNode = document.getElementById(parentNode)\n    if (!options.parentNode) {\n      setError(`Parent node is not available, check container have the correct id: \"${parentNode}\"`)\n      return\n    }\n\n    const client = new window.JitsiMeetExternalAPI(domain, {...options})\n    setJitsi(client)\n    setLoading(false)\n    setError(null)\n\n    subject && client.executeCommand('subject', subject)\n\n    client.addEventListener('videoConferenceJoined', () => {\n      password && client.executeCommand('password', password)\n      displayName && client.executeCommand('displayName', displayName)\n    })\n\n    client.addEventListener('passwordRequired', () => {\n      password && client.executeCommand('password', password)\n    })\n    onMeetingEnd && client.addEventListener('readyToClose', onMeetingEnd)\n\n    return () => jitsi && jitsi.dispose()\n  }, [window.JitsiMeetExternalAPI])\n\n  return {jitsi, error, loading}\n}\n\nuseJitsi.propTypes = {\n  options: PropTypes.shape({\n    domain: PropTypes.string,\n    roomName: PropTypes.string.isRequired,\n    subject: PropTypes.string,\n    password: PropTypes.string,\n    displayName: PropTypes.string,\n    onMeetingEnd: PropTypes.func,\n    width: PropTypes.string,\n    height: PropTypes.string,\n    parentNode: PropTypes.string,\n    configOverwrite: PropTypes.object,\n    interfaceConfigOverwrite: PropTypes.object,\n    noSSL: PropTypes.bool,\n    jwt: PropTypes.string,\n    onload: PropTypes.func,\n    invitees: PropTypes.array,\n    devices: PropTypes.object,\n    userInfo: PropTypes.object\n  })\n}\n\nexport default useJitsi\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport useJitsi from './useJitsi'\n\nconst Jutsu = ({\n  loadingComponent,\n  errorComponent,\n  containerStyles,\n  jitsiContainerStyles,\n  onError,\n  onJitsi,\n  ...options\n}) => {\n  const {loading, error, jitsi} = useJitsi({\n    parentNode: 'jitsi-container',\n    ...options\n  })\n\n  useEffect(() => {\n    if (jitsi && onJitsi) onJitsi(jitsi)\n  }, [jitsi])\n\n  useEffect(() => {\n    if (error && onError) onError(error)\n  }, [error])\n\n  return (\n    <div style={{ ...{ width: '800px', height: '400px' }, ...containerStyles }}>\n      {error && (errorComponent || <p>{error}</p>)}\n      {!error && loading && (loadingComponent || <p>Loading ...</p>)}\n      <div\n        id='jitsi-container'\n        style={{ ...{\n          display: loading ? 'none' : 'block',\n          width: '100%',\n          height: '100%'\n        },\n        ...jitsiContainerStyles }}\n      />\n    </div>\n  )\n}\n\nJutsu.propTypes = {\n  jwt: PropTypes.string,\n  domain: PropTypes.string,\n  subject: PropTypes.string,\n  password: PropTypes.string,\n  roomName: PropTypes.string.isRequired,\n  displayName: PropTypes.string,\n  onMeetingEnd: PropTypes.func,\n  loadingComponent: PropTypes.object,\n  errorComponent: PropTypes.object,\n  containerStyles: PropTypes.object,\n  jitsiContainerStyles: PropTypes.object,\n  configOverwrite: PropTypes.object,\n  interfaceConfigOverwrite: PropTypes.object,\n  onError: PropTypes.func,\n  onJitsi: PropTypes.func\n}\n\nexport { Jutsu, useJitsi }\n"]},"metadata":{},"sourceType":"module"}