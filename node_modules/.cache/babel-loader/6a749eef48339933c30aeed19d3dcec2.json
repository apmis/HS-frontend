{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/mfybaby/Documents/HealthStack2/HS-frontend/src/components/ManagedCare/Claims.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport client from '../../feathers';\nimport { DebounceInput } from 'react-debounce-input';\nimport { useForm } from \"react-hook-form\"; //import {useHistory} from 'react-router-dom'\n\nimport { UserContext, ObjectContext } from '../../context';\nimport { toast } from 'bulma-toast';\nimport { format, formatDistanceToNowStrict } from 'date-fns'; //import BillDispenseCreate from './BillPrescriptionCreate'\n\nimport PatientProfile from '../ClientMgt/PatientProfile';\n/* import {ProductCreate} from './Products' */\n// eslint-disable-next-line\n//const searchfacility={};\n\nimport { Accordion, AccordionItem, AccordionItemHeading, AccordionItemButton, AccordionItemPanel } from 'react-accessible-accordion'; // Demo styles, see 'Styles' section below for some notes on use.\n\nimport 'react-accessible-accordion/dist/fancy-example.css';\nexport default function ClientBilledPrescription(_ref) {\n  _s();\n\n  var _this = this;\n\n  var selectedClient = _ref.selectedClient;\n\n  // const { register, handleSubmit, watch, errors } = useForm();\n  // eslint-disable-next-line\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1]; // eslint-disable-next-line\n\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      success = _useState4[0],\n      setSuccess = _useState4[1]; // eslint-disable-next-line\n\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      setMessage = _useState6[1];\n\n  var OrderServ = client.service('order'); //const history = useHistory()\n  // const {user,setUser} = useContext(UserContext)\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      clientOrders = _useState8[0],\n      setClientOrders = _useState8[1]; // eslint-disable-next-line\n\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedDispense = _useState10[0],\n      setSelectedDispense = _useState10[1]; //\n  // eslint-disable-next-line\n\n\n  var _useContext = useContext(ObjectContext),\n      state = _useContext.state,\n      setState = _useContext.setState; // eslint-disable-next-line\n\n\n  var _useContext2 = useContext(UserContext),\n      user = _useContext2.user,\n      setUser = _useContext2.setUser;\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedMedication = _useState12[0],\n      setSelectedMedication = _useState12[1];\n\n  console.log(selectedClient);\n\n  var handleSelectedClient = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(Client) {\n      var newClientModule;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // await setSelectedClient(Client)\n              newClientModule = {\n                selectedClient: Client,\n                show: 'detail'\n              };\n              _context.next = 3;\n              return setState(function (prevstate) {\n                return _objectSpread(_objectSpread({}, prevstate), {}, {\n                  ClientModule: newClientModule\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSelectedClient(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleMedicationRow = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ProductEntry) {\n      var newProductEntryModule;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return handleSelectedClient(ProductEntry.client);\n\n            case 2:\n              _context2.next = 4;\n              return setSelectedMedication(ProductEntry);\n\n            case 4:\n              newProductEntryModule = {\n                selectedMedication: ProductEntry,\n                show: 'detail'\n              };\n              _context2.next = 7;\n              return setState(function (prevstate) {\n                return _objectSpread(_objectSpread({}, prevstate), {}, {\n                  medicationModule: newProductEntryModule\n                });\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleMedicationRow(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleCreateNew = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var newProductEntryModule;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              newProductEntryModule = {\n                selectedDispense: {},\n                show: 'create'\n              };\n              _context3.next = 3;\n              return setState(function (prevstate) {\n                return _objectSpread(_objectSpread({}, prevstate), {}, {\n                  DispenseModule: newProductEntryModule\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleCreateNew() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleSearch = function handleSearch(val) {\n    var _query;\n\n    var field = 'name'; //console.log(val)\n\n    OrderServ.find({\n      query: (_query = {\n        order: {\n          $regex: val,\n          $options: 'i'\n        },\n        order_status: {\n          $regex: val,\n          $options: 'i'\n        }\n      }, _defineProperty(_query, \"order_status\", \"Billed\"), _defineProperty(_query, \"clientId\", selectedClient), _defineProperty(_query, \"order_category\", \"Prescription\"), _defineProperty(_query, \"$limit\", 10), _defineProperty(_query, \"$sort\", {\n        createdAt: -1\n      }), _query)\n    }).then(function (res) {\n      // console.log(res)\n      setClientOrders(res.data);\n      setMessage(\" ProductEntry  fetched successfully\");\n      setSuccess(true);\n    }).catch(function (err) {\n      // console.log(err)\n      setMessage(\"Error fetching ProductEntry, probable network issues \" + err);\n      setError(true);\n    });\n  };\n\n  var getFacilities = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var findProductEntry;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return OrderServ.find({\n                query: {\n                  order_category: \"Prescription\",\n                  fulfilled: false,\n                  destination: user.currentEmployee.facilityDetail._id,\n                  order_status: \"Billed\",\n                  clientId: selectedClient,\n                  //selectedClient, //\n                  // need to set this finally\n                  //storeId:state.StoreModule.selectedStore._id,\n                  //clientId:state.ClientModule.selectedClient._id,\n                  $limit: 50,\n                  $sort: {\n                    createdAt: -1\n                  }\n                }\n              });\n\n            case 2:\n              findProductEntry = _context4.sent;\n              console.log(\"clientorders\", findProductEntry);\n              _context4.next = 6;\n              return setClientOrders(findProductEntry.data);\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function getFacilities() {\n      return _ref5.apply(this, arguments);\n    };\n  }(); //1.consider using props for global data\n\n\n  useEffect(function () {\n    // console.log(\"started\")\n    getFacilities();\n    OrderServ.on('created', function (obj) {\n      return getFacilities();\n    });\n    OrderServ.on('updated', function (obj) {\n      return getFacilities();\n    });\n    OrderServ.on('patched', function (obj) {\n      return getFacilities();\n    });\n    OrderServ.on('removed', function (obj) {\n      return getFacilities();\n    });\n    return function () {};\n  }, []);\n\n  var handleRow = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(ProductEntry) {\n      var newProductEntryModule;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return setSelectedDispense(ProductEntry);\n\n            case 2:\n              newProductEntryModule = {\n                selectedDispense: ProductEntry,\n                show: 'detail'\n              };\n              _context5.next = 5;\n              return setState(function (prevstate) {\n                return _objectSpread(_objectSpread({}, prevstate), {}, {\n                  DispenseModule: newProductEntryModule\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function handleRow(_x3) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" pullupx \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" is-fullwidth vscrollable pr-1\",\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          allowZeroExpanded: true,\n          children: /*#__PURE__*/_jsxDEV(AccordionItem, {\n            children: [/*#__PURE__*/_jsxDEV(AccordionItemHeading, {\n              children: /*#__PURE__*/_jsxDEV(AccordionItemButton, {\n                children: [\" \", clientOrders.length, \" billed medication(s)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AccordionItemPanel, {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table is-striped  is-hoverable is-fullwidth is-scrollable mr-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: /*#__PURE__*/_jsxDEV(\"abbr\", {\n                        title: \"Serial No\",\n                        children: \"S/No\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 216,\n                        columnNumber: 58\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 54\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: /*#__PURE__*/_jsxDEV(\"abbr\", {\n                        title: \"Date\",\n                        children: \"Date\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 58\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 54\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: /*#__PURE__*/_jsxDEV(\"abbr\", {\n                        title: \"Order\",\n                        children: \"Medication\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 58\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 54\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Fulfilled\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 54\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: /*#__PURE__*/_jsxDEV(\"abbr\", {\n                        title: \"Status\",\n                        children: \"Status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 58\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 54\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: /*#__PURE__*/_jsxDEV(\"abbr\", {\n                        title: \"Requesting Physician\",\n                        children: \"Requesting Physician\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 58\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 54\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 50\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: clientOrders.map(function (order, i) {\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      /* onClick={()=>handleMedicationRow(order)} */\n                      className: order._id === ((selectedMedication === null || selectedMedication === void 0 ? void 0 : selectedMedication._id) || null) ? \"is-selected\" : \"\",\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: i + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 58\n                      }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: format(new Date(order.createdAt), 'dd-MM-yy')\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 229,\n                          columnNumber: 62\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 58\n                      }, _this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: order.order\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 230,\n                        columnNumber: 58\n                      }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: order.fulfilled === \"True\" ? \"Yes\" : \"No\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 58\n                      }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: order.order_status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 58\n                      }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: order.requestingdoctor_Name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 58\n                      }, _this)]\n                    }, order._id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 58\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 46\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 18\n    }, this)\n  }, void 0, false);\n}\n\n_s(ClientBilledPrescription, \"ghUPnE1npMlzuCx+dER+NnXUGaQ=\");\n\n_c = ClientBilledPrescription;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientBilledPrescription\");","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/src/components/ManagedCare/Claims.js"],"names":["React","useState","useContext","useEffect","useRef","client","DebounceInput","useForm","UserContext","ObjectContext","toast","format","formatDistanceToNowStrict","PatientProfile","Accordion","AccordionItem","AccordionItemHeading","AccordionItemButton","AccordionItemPanel","ClientBilledPrescription","selectedClient","error","setError","success","setSuccess","message","setMessage","OrderServ","service","clientOrders","setClientOrders","selectedDispense","setSelectedDispense","state","setState","user","setUser","selectedMedication","setSelectedMedication","console","log","handleSelectedClient","Client","newClientModule","show","prevstate","ClientModule","handleMedicationRow","ProductEntry","newProductEntryModule","medicationModule","handleCreateNew","DispenseModule","handleSearch","val","field","find","query","order","$regex","$options","order_status","createdAt","then","res","data","catch","err","getFacilities","order_category","fulfilled","destination","currentEmployee","facilityDetail","_id","clientId","$limit","$sort","findProductEntry","on","obj","handleRow","length","map","i","Date","requestingdoctor_Name"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, {useState,useContext, useEffect,useRef} from 'react'\nimport client from '../../feathers'\nimport {DebounceInput} from 'react-debounce-input';\nimport { useForm } from \"react-hook-form\";\n//import {useHistory} from 'react-router-dom'\nimport {UserContext,ObjectContext} from '../../context'\nimport {toast} from 'bulma-toast'\nimport {format, formatDistanceToNowStrict } from 'date-fns'\n//import BillDispenseCreate from './BillPrescriptionCreate'\nimport PatientProfile from '../ClientMgt/PatientProfile'\n/* import {ProductCreate} from './Products' */\n// eslint-disable-next-line\n//const searchfacility={};\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemButton,\n    AccordionItemPanel,\n} from 'react-accessible-accordion';\n\n// Demo styles, see 'Styles' section below for some notes on use.\nimport 'react-accessible-accordion/dist/fancy-example.css';\n\nexport default function ClientBilledPrescription({selectedClient}){\n    // const { register, handleSubmit, watch, errors } = useForm();\n     // eslint-disable-next-line\n     const [error, setError] =useState(false)\n      // eslint-disable-next-line\n     const [success, setSuccess] =useState(false)\n      // eslint-disable-next-line\n    const [message, setMessage] = useState(\"\") \n     const OrderServ=client.service('order')\n     //const history = useHistory()\n    // const {user,setUser} = useContext(UserContext)\n     const [clientOrders,setClientOrders]=useState([])\n      // eslint-disable-next-line\n    const [selectedDispense, setSelectedDispense]=useState() //\n     // eslint-disable-next-line\n     const {state,setState}=useContext(ObjectContext)\n     // eslint-disable-next-line\n     const {user,setUser}=useContext(UserContext)\n     const [selectedMedication, setSelectedMedication] =useState(\"\")\n\n\n     console.log(selectedClient)\n \n     const handleSelectedClient= async(Client)=>{\n         // await setSelectedClient(Client)\n          const    newClientModule={\n              selectedClient:Client,\n              show :'detail'\n          }\n         await setState((prevstate)=>({...prevstate, ClientModule:newClientModule}))\n      }\n \n     const handleMedicationRow= async(ProductEntry)=>{ //handle selected single order\n         //console.log(\"b4\",state)\n     \n         //console.log(\"handlerow\",ProductEntry)\n         await handleSelectedClient(ProductEntry.client)\n \n     \n         await setSelectedMedication(ProductEntry)\n     \n         const    newProductEntryModule={\n             selectedMedication:ProductEntry,\n             show :'detail'\n         }\n       await setState((prevstate)=>({...prevstate, medicationModule:newProductEntryModule}))\n        //console.log(state)\n       // ProductEntry.show=!ProductEntry.show\n     \n     }\n \n     const handleCreateNew = async()=>{\n         const    newProductEntryModule={\n             selectedDispense:{},\n             show :'create'\n             }\n        await setState((prevstate)=>({...prevstate, DispenseModule:newProductEntryModule}))\n        //console.log(state)\n         \n \n     }\n   \n \n     const handleSearch=(val)=>{\n        const field='name'\n        //console.log(val)\n        OrderServ.find({query: {\n                 order: {\n                     $regex:val,\n                     $options:'i'\n                    \n                 },\n                 order_status: {\n                     $regex:val,\n                     $options:'i'\n                    \n                 },\n                 order_status:\"Billed\",  \n                 clientId:selectedClient,\n                 order_category:\"Prescription\",\n                // storeId:state.StoreModule.selectedStore._id,\n                //facility:user.currentEmployee.facilityDetail._id || \"\",\n                 $limit:10,\n                 $sort: {\n                     createdAt: -1\n                   }\n                     }}).then((res)=>{\n                // console.log(res)\n                setClientOrders(res.data)\n                 setMessage(\" ProductEntry  fetched successfully\")\n                 setSuccess(true) \n             })\n             .catch((err)=>{\n                // console.log(err)\n                 setMessage(\"Error fetching ProductEntry, probable network issues \"+ err )\n                 setError(true)\n             })\n         }\n     const getFacilities= async()=>{\n        \n             // console.log(\"here b4 server\")\n     const findProductEntry= await OrderServ.find(\n             {query: {\n                 order_category:\"Prescription\",\n                 fulfilled:false,\n                 destination: user.currentEmployee.facilityDetail._id,\n                 order_status:\"Billed\",  \n                 clientId:selectedClient,//selectedClient, //\n                 // need to set this finally\n                 //storeId:state.StoreModule.selectedStore._id,\n                 //clientId:state.ClientModule.selectedClient._id,\n                 $limit:50,\n                 $sort: {\n                     createdAt: -1\n                 }\n                 }})\n \n             console.log(\"clientorders\", findProductEntry)\n             await setClientOrders(findProductEntry.data)\n             //await setState((prevstate)=>({...prevstate, currentClients:findProductEntry.groupedOrder}))\n             }   \n \n     //1.consider using props for global data\n     useEffect(() => {\n         // console.log(\"started\")\n             getFacilities()\n             OrderServ.on('created', (obj)=>getFacilities())\n             OrderServ.on('updated', (obj)=>getFacilities())\n             OrderServ.on('patched', (obj)=>getFacilities())\n             OrderServ.on('removed', (obj)=>getFacilities())\n             return () => {\n             \n             }\n             },[])\n \n         const handleRow= async(ProductEntry)=>{\n     \n         await setSelectedDispense(ProductEntry)\n \n         const    newProductEntryModule={\n             selectedDispense:ProductEntry,\n             show :'detail'\n         }\n         await setState((prevstate)=>({...prevstate, DispenseModule:newProductEntryModule}))\n         //console.log(state)\n         \n         }\n \n \n     return(     \n             <>  \n                 {/* <div className=\"level\">\n                     <div className=\"level-left\">\n                         <div className=\"level-item\">\n                             <div className=\"field\">\n                                 <p className=\"control has-icons-left  \">\n                                     <DebounceInput className=\"input is-small \" \n                                         type=\"text\" placeholder=\"Search Medications\"\n                                         minLength={3}\n                                         debounceTimeout={400}\n                                         onChange={(e)=>handleSearch(e.target.value)} />\n                                     <span className=\"icon is-small is-left\">\n                                         <i className=\"fas fa-search\"></i>\n                                     </span>\n                                 </p>\n                             </div>\n                         </div>\n                     </div> */}\n                     {/* <div className=\"level-item\"> <span className=\"is-size-6 has-text-weight-medium\">Billed Prescriptions </span></div> */}\n                      {/* <div className=\"level-right\">\n                        <div className=\"level-item\"> \n                             <div className=\"level-item\"><div className=\"button is-success is-small\" onClick={handleCreateNew}>New</div></div>\n                         </div> \n                     </div>*/}\n \n                 {/* </div> */}\n                 <div className=\" pullupx \">\n                     <div className=\" is-fullwidth vscrollable pr-1\">   \n                     <Accordion allowZeroExpanded>\n                         \n                             <AccordionItem  >\n                                <AccordionItemHeading >\n                                <AccordionItemButton  >\n                                       {/*  {i+1}  {Clinic.clientname} with  */ } {clientOrders.length} billed medication(s)  \n                                 </AccordionItemButton>\n                                 </AccordionItemHeading>\n                                 <AccordionItemPanel>\n                                     <table className=\"table is-striped  is-hoverable is-fullwidth is-scrollable mr-2\">\n                                             <thead>\n                                                 <tr>\n                                                     <th><abbr title=\"Serial No\">S/No</abbr></th>\n                                                     <th><abbr title=\"Date\">Date</abbr></th>\n                                                     <th><abbr title=\"Order\">Medication</abbr></th>\n                                                     <th>Fulfilled</th>\n                                                     <th><abbr title=\"Status\">Status</abbr></th>\n                                                     <th><abbr title=\"Requesting Physician\">Requesting Physician</abbr></th>\n                                                 </tr>\n                                             </thead>\n                                             <tbody>\n                                             { clientOrders.map((order, i)=>(\n \n                                                         <tr key={order._id} /* onClick={()=>handleMedicationRow(order)} */ className={order._id===(selectedMedication?._id||null)?\"is-selected\":\"\"}>                                         \n                                                         <th>{i+1}</th>\n                                                         <td><span>{format(new Date(order.createdAt),'dd-MM-yy')}</span></td> {/* {formatDistanceToNowStrict(new Date(ProductEntry.createdAt),{addSuffix: true})} <br/> */} \n                                                         <th>{order.order}</th>\n                                                         <td>{order.fulfilled===\"True\"?\"Yes\":\"No\"}</td>\n                                                         <td>{order.order_status}</td>\n                                                         <td>{order.requestingdoctor_Name}</td>\n                                                         </tr>\n                                                 ))}\n                                             </tbody>\n                                             </table>\n \n                               </AccordionItemPanel>                                          \n                                 </AccordionItem>\n                           \n                             {/* <!-- Add Ref to Load More div --> */}\n                             {/*  <div className=\"loading\" ref={loader}>\n                                     <h2>Load More</h2>\n                         </div> */}\n                         </Accordion>\n                     </div>                   \n                 </div>  \n             </>          \n     )\n     }\n"]},"metadata":{},"sourceType":"module"}