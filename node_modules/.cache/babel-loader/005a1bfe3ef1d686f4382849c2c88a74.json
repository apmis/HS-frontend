{"ast":null,"code":"import _objectWithoutProperties from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { createElementHook, createElementObject, createLayerHook, updateMediaOverlay } from '@react-leaflet/core';\nimport { SVGOverlay as LeafletSVGOverlay } from 'leaflet';\nimport { forwardRef, useImperativeHandle } from 'react';\nimport { createPortal } from 'react-dom';\nexport var useSVGOverlayElement = createElementHook(function createSVGOverlay(props, context) {\n  var attributes = props.attributes,\n      bounds = props.bounds,\n      options = _objectWithoutProperties(props, [\"attributes\", \"bounds\"]);\n\n  var container = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  container.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n  if (attributes != null) {\n    Object.keys(attributes).forEach(function (name) {\n      container.setAttribute(name, attributes[name]);\n    });\n  }\n\n  var overlay = new LeafletSVGOverlay(container, bounds, options);\n  return createElementObject(overlay, context, container);\n}, updateMediaOverlay);\nexport var useSVGOverlay = createLayerHook(useSVGOverlayElement);\n\nfunction SVGOverlayComponent(_ref, forwardedRef) {\n  var children = _ref.children,\n      options = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useSVGOverlay$curren = useSVGOverlay(options).current,\n      instance = _useSVGOverlay$curren.instance,\n      container = _useSVGOverlay$curren.container;\n  useImperativeHandle(forwardedRef, function () {\n    return instance;\n  });\n  return container == null || children == null ? null : /*#__PURE__*/createPortal(children, container);\n}\n\nexport var SVGOverlay = /*#__PURE__*/forwardRef(SVGOverlayComponent);","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/react-leaflet/lib/SVGOverlay.js"],"names":["createElementHook","createElementObject","createLayerHook","updateMediaOverlay","SVGOverlay","LeafletSVGOverlay","forwardRef","useImperativeHandle","createPortal","useSVGOverlayElement","createSVGOverlay","props","context","attributes","bounds","options","container","document","createElementNS","setAttribute","Object","keys","forEach","name","overlay","useSVGOverlay","SVGOverlayComponent","forwardedRef","children","current","instance"],"mappings":";AAAA,SAASA,iBAAT,EAA4BC,mBAA5B,EAAiDC,eAAjD,EAAkEC,kBAAlE,QAA4F,qBAA5F;AACA,SAASC,UAAU,IAAIC,iBAAvB,QAAgD,SAAhD;AACA,SAASC,UAAT,EAAqBC,mBAArB,QAAgD,OAAhD;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAO,IAAMC,oBAAoB,GAAGT,iBAAiB,CAAC,SAASU,gBAAT,CAA0BC,KAA1B,EAAiCC,OAAjC,EAA0C;AAAA,MACpFC,UADoF,GAC/CF,KAD+C,CACpFE,UADoF;AAAA,MACvEC,MADuE,GAC/CH,KAD+C,CACvEG,MADuE;AAAA,MAC3DC,OAD2D,4BAC/CJ,KAD+C;;AAE5F,MAAMK,SAAS,GAAGC,QAAQ,CAACC,eAAT,CAAyB,4BAAzB,EAAuD,KAAvD,CAAlB;AACAF,EAAAA,SAAS,CAACG,YAAV,CAAuB,OAAvB,EAAgC,4BAAhC;;AACA,MAAIN,UAAU,IAAI,IAAlB,EAAwB;AACpBO,IAAAA,MAAM,CAACC,IAAP,CAAYR,UAAZ,EAAwBS,OAAxB,CAAgC,UAACC,IAAD,EAAQ;AACpCP,MAAAA,SAAS,CAACG,YAAV,CAAuBI,IAAvB,EAA6BV,UAAU,CAACU,IAAD,CAAvC;AACH,KAFD;AAGH;;AACD,MAAMC,OAAO,GAAG,IAAInB,iBAAJ,CAAsBW,SAAtB,EAAiCF,MAAjC,EAAyCC,OAAzC,CAAhB;AACA,SAAOd,mBAAmB,CAACuB,OAAD,EAAUZ,OAAV,EAAmBI,SAAnB,CAA1B;AACH,CAXoD,EAWlDb,kBAXkD,CAA9C;AAYP,OAAO,IAAMsB,aAAa,GAAGvB,eAAe,CAACO,oBAAD,CAArC;;AACP,SAASiB,mBAAT,OAAwDC,YAAxD,EAAsE;AAAA,MAAvCC,QAAuC,QAAvCA,QAAuC;AAAA,MAAzBb,OAAyB;;AAAA,8BAChCU,aAAa,CAACV,OAAD,CAAb,CAAuBc,OADS;AAAA,MAC1DC,QAD0D,yBAC1DA,QAD0D;AAAA,MAC/Cd,SAD+C,yBAC/CA,SAD+C;AAElET,EAAAA,mBAAmB,CAACoB,YAAD,EAAe;AAAA,WAAIG,QAAJ;AAAA,GAAf,CAAnB;AAEA,SAAOd,SAAS,IAAI,IAAb,IAAqBY,QAAQ,IAAI,IAAjC,GAAwC,IAAxC,GAA+C,aAAcpB,YAAY,CAACoB,QAAD,EAAWZ,SAAX,CAAhF;AACH;;AACD,OAAO,IAAMZ,UAAU,GAAG,aAAcE,UAAU,CAACoB,mBAAD,CAA3C","sourcesContent":["import { createElementHook, createElementObject, createLayerHook, updateMediaOverlay } from '@react-leaflet/core';\nimport { SVGOverlay as LeafletSVGOverlay } from 'leaflet';\nimport { forwardRef, useImperativeHandle } from 'react';\nimport { createPortal } from 'react-dom';\nexport const useSVGOverlayElement = createElementHook(function createSVGOverlay(props, context) {\n    const { attributes , bounds , ...options } = props;\n    const container = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    container.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n    if (attributes != null) {\n        Object.keys(attributes).forEach((name)=>{\n            container.setAttribute(name, attributes[name]);\n        });\n    }\n    const overlay = new LeafletSVGOverlay(container, bounds, options);\n    return createElementObject(overlay, context, container);\n}, updateMediaOverlay);\nexport const useSVGOverlay = createLayerHook(useSVGOverlayElement);\nfunction SVGOverlayComponent({ children , ...options }, forwardedRef) {\n    const { instance , container  } = useSVGOverlay(options).current;\n    useImperativeHandle(forwardedRef, ()=>instance\n    );\n    return container == null || children == null ? null : /*#__PURE__*/ createPortal(children, container);\n}\nexport const SVGOverlay = /*#__PURE__*/ forwardRef(SVGOverlayComponent);\n"]},"metadata":{},"sourceType":"module"}