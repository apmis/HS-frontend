{"ast":null,"code":"import { useEffect } from 'react';\nimport { useAttribution } from './attribution.js';\nimport { useLeafletContext } from './context.js';\nimport { useEventHandlers } from './events.js';\nimport { withPane } from './pane.js';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    var _context$layerContain;\n\n    var container = (_context$layerContain = context.layerContainer) !== null && _context$layerContain !== void 0 ? _context$layerContain : context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain2;\n\n      (_context$layerContain2 = context.layerContainer) === null || _context$layerContain2 === void 0 ? void 0 : _context$layerContain2.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    var context = useLeafletContext();\n    var elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/@react-leaflet/core/lib/layer.js"],"names":["useEffect","useAttribution","useLeafletContext","useEventHandlers","withPane","useLayerLifecycle","element","context","addLayer","container","layerContainer","map","instance","removeLayer","createLayerHook","useElement","useLayer","props","elementRef","attribution","current","eventHandlers"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAO,SAASC,iBAAT,CAA2BC,OAA3B,EAAoCC,OAApC,EAA6C;AAChDP,EAAAA,SAAS,CAAC,SAASQ,QAAT,GAAoB;AAAA;;AAC1B,QAAMC,SAAS,4BAAGF,OAAO,CAACG,cAAX,yEAA6BH,OAAO,CAACI,GAApD;AACAF,IAAAA,SAAS,CAACD,QAAV,CAAmBF,OAAO,CAACM,QAA3B;AACA,WAAO,SAASC,WAAT,GAAuB;AAAA;;AAC1B,gCAAAN,OAAO,CAACG,cAAR,kFAAwBG,WAAxB,CAAoCP,OAAO,CAACM,QAA5C;AACAL,MAAAA,OAAO,CAACI,GAAR,CAAYE,WAAZ,CAAwBP,OAAO,CAACM,QAAhC;AACH,KAHD;AAIH,GAPQ,EAON,CACCL,OADD,EAECD,OAFD,CAPM,CAAT;AAWH;AACD,OAAO,SAASQ,eAAT,CAAyBC,UAAzB,EAAqC;AACxC,SAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC5B,QAAMV,OAAO,GAAGL,iBAAiB,EAAjC;AACA,QAAMgB,UAAU,GAAGH,UAAU,CAACX,QAAQ,CAACa,KAAD,EAAQV,OAAR,CAAT,EAA2BA,OAA3B,CAA7B;AACAN,IAAAA,cAAc,CAACM,OAAO,CAACI,GAAT,EAAcM,KAAK,CAACE,WAApB,CAAd;AACAhB,IAAAA,gBAAgB,CAACe,UAAU,CAACE,OAAZ,EAAqBH,KAAK,CAACI,aAA3B,CAAhB;AACAhB,IAAAA,iBAAiB,CAACa,UAAU,CAACE,OAAZ,EAAqBb,OAArB,CAAjB;AACA,WAAOW,UAAP;AACH,GAPD;AAQH","sourcesContent":["import { useEffect } from 'react';\nimport { useAttribution } from './attribution.js';\nimport { useLeafletContext } from './context.js';\nimport { useEventHandlers } from './events.js';\nimport { withPane } from './pane.js';\nexport function useLayerLifecycle(element, context) {\n    useEffect(function addLayer() {\n        const container = context.layerContainer ?? context.map;\n        container.addLayer(element.instance);\n        return function removeLayer() {\n            context.layerContainer?.removeLayer(element.instance);\n            context.map.removeLayer(element.instance);\n        };\n    }, [\n        context,\n        element\n    ]);\n}\nexport function createLayerHook(useElement) {\n    return function useLayer(props) {\n        const context = useLeafletContext();\n        const elementRef = useElement(withPane(props, context), context);\n        useAttribution(context.map, props.attribution);\n        useEventHandlers(elementRef.current, props.eventHandlers);\n        useLayerLifecycle(elementRef.current, context);\n        return elementRef;\n    };\n}\n"]},"metadata":{},"sourceType":"module"}