{"ast":null,"code":"import _objectWithoutProperties from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { Polyline as LeafletPolyline } from 'leaflet';\nexport var Polyline = createPathComponent(function createPolyline(_ref, ctx) {\n  var positions = _ref.positions,\n      options = _objectWithoutProperties(_ref, [\"positions\"]);\n\n  var polyline = new LeafletPolyline(positions, options);\n  return createElementObject(polyline, extendContext(ctx, {\n    overlayContainer: polyline\n  }));\n}, function updatePolyline(layer, props, prevProps) {\n  if (props.positions !== prevProps.positions) {\n    layer.setLatLngs(props.positions);\n  }\n});","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/react-leaflet/lib/Polyline.js"],"names":["createElementObject","createPathComponent","extendContext","Polyline","LeafletPolyline","createPolyline","ctx","positions","options","polyline","overlayContainer","updatePolyline","layer","props","prevProps","setLatLngs"],"mappings":";AAAA,SAASA,mBAAT,EAA8BC,mBAA9B,EAAmDC,aAAnD,QAAwE,qBAAxE;AACA,SAASC,QAAQ,IAAIC,eAArB,QAA4C,SAA5C;AACA,OAAO,IAAMD,QAAQ,GAAGF,mBAAmB,CAAC,SAASI,cAAT,OAAoDC,GAApD,EAAyD;AAAA,MAA/BC,SAA+B,QAA/BA,SAA+B;AAAA,MAAhBC,OAAgB;;AACjG,MAAMC,QAAQ,GAAG,IAAIL,eAAJ,CAAoBG,SAApB,EAA+BC,OAA/B,CAAjB;AACA,SAAOR,mBAAmB,CAACS,QAAD,EAAWP,aAAa,CAACI,GAAD,EAAM;AACpDI,IAAAA,gBAAgB,EAAED;AADkC,GAAN,CAAxB,CAA1B;AAGH,CAL0C,EAKxC,SAASE,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,SAAtC,EAAiD;AAChD,MAAID,KAAK,CAACN,SAAN,KAAoBO,SAAS,CAACP,SAAlC,EAA6C;AACzCK,IAAAA,KAAK,CAACG,UAAN,CAAiBF,KAAK,CAACN,SAAvB;AACH;AACJ,CAT0C,CAApC","sourcesContent":["import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { Polyline as LeafletPolyline } from 'leaflet';\nexport const Polyline = createPathComponent(function createPolyline({ positions , ...options }, ctx) {\n    const polyline = new LeafletPolyline(positions, options);\n    return createElementObject(polyline, extendContext(ctx, {\n        overlayContainer: polyline\n    }));\n}, function updatePolyline(layer, props, prevProps) {\n    if (props.positions !== prevProps.positions) {\n        layer.setLatLngs(props.positions);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}