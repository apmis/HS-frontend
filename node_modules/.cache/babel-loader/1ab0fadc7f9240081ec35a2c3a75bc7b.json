{"ast":null,"code":"var Service = require('@feathersjs/transport-commons/client');\n\nfunction socketioClient(connection, options) {\n  if (!connection) {\n    throw new Error('Socket.io connection needs to be provided');\n  }\n\n  if (connection && connection.io && connection.io.engine && connection.io.engine.transport && connection.io.engine.transport.query && connection.io.engine.transport.query.EIO > 3) {\n    // tslint:disable-next-line\n    console.error('You are trying to use the Socket.io client version 3 or later with Feathers v4 which only supports Socket.io version 2. Please use socket.io-client version 2 instead.');\n    throw new Error('socket.io-client must be version 2.x');\n  }\n\n  var defaultService = function defaultService(name) {\n    var _this = this;\n\n    var events = Object.keys(this.eventMappings || {}).map(function (method) {\n      return _this.eventMappings[method];\n    });\n    var settings = Object.assign({}, options, {\n      events: events,\n      name: name,\n      connection: connection,\n      method: 'emit'\n    });\n    return new Service(settings);\n  };\n\n  var initialize = function initialize(app) {\n    if (typeof app.defaultService === 'function') {\n      throw new Error('Only one default client provider can be configured');\n    }\n\n    app.io = connection;\n    app.defaultService = defaultService;\n  };\n\n  initialize.Service = Service;\n  initialize.service = defaultService;\n  return initialize;\n}\n\nmodule.exports = socketioClient;\nmodule.exports.default = socketioClient;","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/@feathersjs/socketio-client/lib/index.js"],"names":["Service","require","socketioClient","connection","options","Error","io","engine","transport","query","EIO","console","error","defaultService","name","events","Object","keys","eventMappings","map","method","settings","assign","initialize","app","service","module","exports","default"],"mappings":"AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,sCAAD,CAAvB;;AAEA,SAASC,cAAT,CAAyBC,UAAzB,EAAqCC,OAArC,EAA8C;AAC5C,MAAI,CAACD,UAAL,EAAiB;AACf,UAAM,IAAIE,KAAJ,CAAU,2CAAV,CAAN;AACD;;AAED,MAAIF,UAAU,IAAIA,UAAU,CAACG,EAAzB,IAA+BH,UAAU,CAACG,EAAX,CAAcC,MAA7C,IACFJ,UAAU,CAACG,EAAX,CAAcC,MAAd,CAAqBC,SADnB,IACgCL,UAAU,CAACG,EAAX,CAAcC,MAAd,CAAqBC,SAArB,CAA+BC,KAD/D,IAEFN,UAAU,CAACG,EAAX,CAAcC,MAAd,CAAqBC,SAArB,CAA+BC,KAA/B,CAAqCC,GAArC,GAA2C,CAF7C,EAGE;AACA;AACAC,IAAAA,OAAO,CAACC,KAAR,CAAc,wKAAd;AACA,UAAM,IAAIP,KAAJ,CAAU,sCAAV,CAAN;AACD;;AAED,MAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAAUC,IAAV,EAAgB;AAAA;;AACrC,QAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKC,aAAL,IAAsB,EAAlC,EACZC,GADY,CACR,UAAAC,MAAM;AAAA,aAAI,KAAI,CAACF,aAAL,CAAmBE,MAAnB,CAAJ;AAAA,KADE,CAAf;AAGA,QAAMC,QAAQ,GAAGL,MAAM,CAACM,MAAP,CAAc,EAAd,EAAkBlB,OAAlB,EAA2B;AAC1CW,MAAAA,MAAM,EAANA,MAD0C;AAE1CD,MAAAA,IAAI,EAAJA,IAF0C;AAG1CX,MAAAA,UAAU,EAAVA,UAH0C;AAI1CiB,MAAAA,MAAM,EAAE;AAJkC,KAA3B,CAAjB;AAOA,WAAO,IAAIpB,OAAJ,CAAYqB,QAAZ,CAAP;AACD,GAZD;;AAcA,MAAME,UAAU,GAAG,SAAbA,UAAa,CAAUC,GAAV,EAAe;AAChC,QAAI,OAAOA,GAAG,CAACX,cAAX,KAA8B,UAAlC,EAA8C;AAC5C,YAAM,IAAIR,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAEDmB,IAAAA,GAAG,CAAClB,EAAJ,GAASH,UAAT;AACAqB,IAAAA,GAAG,CAACX,cAAJ,GAAqBA,cAArB;AACD,GAPD;;AASAU,EAAAA,UAAU,CAACvB,OAAX,GAAqBA,OAArB;AACAuB,EAAAA,UAAU,CAACE,OAAX,GAAqBZ,cAArB;AAEA,SAAOU,UAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiBzB,cAAjB;AACAwB,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyB1B,cAAzB","sourcesContent":["const Service = require('@feathersjs/transport-commons/client');\n\nfunction socketioClient (connection, options) {\n  if (!connection) {\n    throw new Error('Socket.io connection needs to be provided');\n  }\n\n  if (connection && connection.io && connection.io.engine &&\n    connection.io.engine.transport && connection.io.engine.transport.query &&\n    connection.io.engine.transport.query.EIO > 3\n  ) {\n    // tslint:disable-next-line\n    console.error('You are trying to use the Socket.io client version 3 or later with Feathers v4 which only supports Socket.io version 2. Please use socket.io-client version 2 instead.');\n    throw new Error('socket.io-client must be version 2.x');\n  }\n\n  const defaultService = function (name) {\n    const events = Object.keys(this.eventMappings || {})\n      .map(method => this.eventMappings[method]);\n\n    const settings = Object.assign({}, options, {\n      events,\n      name,\n      connection,\n      method: 'emit'\n    });\n\n    return new Service(settings);\n  };\n\n  const initialize = function (app) {\n    if (typeof app.defaultService === 'function') {\n      throw new Error('Only one default client provider can be configured');\n    }\n\n    app.io = connection;\n    app.defaultService = defaultService;\n  };\n\n  initialize.Service = Service;\n  initialize.service = defaultService;\n\n  return initialize;\n}\n\nmodule.exports = socketioClient;\nmodule.exports.default = socketioClient;\n"]},"metadata":{},"sourceType":"script"}