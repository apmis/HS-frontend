{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable */import React,{useState,useContext,useEffect,useRef}from'react';import client from'../../feathers';import{DebounceInput}from'react-debounce-input';import{useForm}from\"react-hook-form\";//import {useHistory} from 'react-router-dom'\nimport{UserContext,ObjectContext}from'../../context';import{toast}from'bulma-toast';// eslint-disable-next-line\nvar searchfacility={};export default function FacilityAccount(){var _useContext=useContext(ObjectContext),state=_useContext.state;//,setState\n// eslint-disable-next-line\nvar _useState=useState(),_useState2=_slicedToArray(_useState,2),selectedInventory=_useState2[0],setSelectedInventory=_useState2[1];//const [showState,setShowState]=useState() //create|modify|detail\nreturn/*#__PURE__*/_jsx(\"section\",{className:\"section remPadTop\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"columns \",children:[/*#__PURE__*/_jsx(\"div\",{className:\"column is-3 \"}),/*#__PURE__*/_jsx(\"div\",{className:\"column is-6 \",children:/*#__PURE__*/_jsx(FacilityServiceRevenue,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"column is-3 \"})]})});}export function FacilityServiceRevenue(){var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,setValue=_useForm.setValue;//, watch, errors, reset \nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),success=_useState6[0],setSuccess=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessage=_useState8[1];// eslint-disable-next-line\nvar _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),facility=_useState10[0],setFacility=_useState10[1];var InventoryServ=client.service('subwallettransactions');var SubwalletServ=client.service('subwallet');//const history = useHistory()\nvar _useContext2=useContext(UserContext),user=_useContext2.user;//,setUser\nvar _useContext3=useContext(ObjectContext),state=_useContext3.state,setState=_useContext3.setState;// eslint-disable-next-line\nvar _useState11=useState(),_useState12=_slicedToArray(_useState11,2),currentUser=_useState12[0],setCurrentUser=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),balance=_useState14[0],setBalance=_useState14[1];//const clientSel= state.SelectedClient.client\nvar getSearchfacility=function getSearchfacility(obj){/*   \n        setValue(\"facility\", obj._id,  {\n            shouldValidate: true,\n            shouldDirty: true\n        }) */};useEffect(function(){setCurrentUser(user);//console.log(currentUser)\nreturn function(){};},[user]);//check user for facility or get list of facility  \n/*  useEffect(()=>{\n        //setFacility(user.activeInventory.FacilityId)//\n      if (!user.stacker){\n          console.log(currentUser)\n        setValue(\"facility\", user.currentEmployee.facilityDetail._id,  {\n            shouldValidate: true,\n            shouldDirty: true\n        }) \n      }\n    }) */useEffect(function(){getaccountdetails();//getBalance()\nreturn function(){};},[]);var getaccountdetails=function getaccountdetails(){InventoryServ.find({query:{facility:user.currentEmployee.facilityDetail._id,//client:clientSel.client,\n// storeId:state.StoreModule.selectedStore._id,\ncategory:\"debit\",$sort:{createdAt:-1}}}).then(function(res){console.log(res);setFacility(res.data);//e.target.reset();\n/*  setMessage(\"Created Inventory successfully\") */ // setSuccess(true)\ntoast({message:'Account details succesful',type:'is-success',dismissible:true,pauseOnHover:true});// setSuccess(false)\n}).catch(function(err){toast({message:'Error getting account details '+err,type:'is-danger',dismissible:true,pauseOnHover:true});});};/* const getBalance=async ()=>{\n        const findProductEntry= await SubwalletServ.find(\n            {query: {\n               \n                //client:clientSel.client,\n                organization:user.currentEmployee.facilityDetail._id,\n                //storeId:state.StoreModule.selectedStore._id,\n                //clientId:state.ClientModule.selectedClient._id,\n                $limit:100,\n                $sort: {\n                    createdAt: -1\n                }\n                }})\n                 console.log(findProductEntry)\n    \n         // console.log(\"balance\", findProductEntry.data[0].amount)\n            if (findProductEntry.data.length>0){\n                await setBalance(findProductEntry.data[0].amount)\n            }else{\n                await setBalance(0) \n                \n            } \n    \n          //  await setState((prevstate)=>({...prevstate, currentClients:findProductEntry.groupedOrder}))\n            }   \n    \n */ /*  const onSubmit = (data,e) =>{\n        e.preventDefault();\n        setMessage(\"\")\n        setError(false)\n        setSuccess(false)\n         // data.createdby=user._id\n          console.log(data);\n          if (user.currentEmployee){\n         data.facility=user.currentEmployee.facilityDetail._id  // or from facility dropdown\n          }\n        \n\n      }  */return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"card cardheight\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsx(\"p\",{className:\"card-header-title\",children:\"Service  Revenue\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-content vscrollable mx-0.5\",children:/*#__PURE__*/_jsx(\"div\",{className:\"table-container pullup \",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table is-striped is-narrow is-hoverable  is-scrollable mx-0.5\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"abbr\",{title:\"Serial No\",children:\"S/No\"})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"abbr\",{title:\"Date\",children:\"Date\"})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"abbr\",{title:\"Client\",children:\"Client\"})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"abbr\",{title:\"Description\",children:\"Description\"})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"abbr\",{title:\"Amount\",children:\"Amount\"})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"abbr\",{title:\"Mode\",children:\"Mode\"})})]})}),/*#__PURE__*/_jsx(\"tfoot\",{}),/*#__PURE__*/_jsx(\"tbody\",{children:facility.map(function(Inventory,i){return/*#__PURE__*/_jsx(_Fragment,{children:Inventory.category===\"debit\"&&/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:i+1}),/*#__PURE__*/_jsx(\"td\",{children:new Date(Inventory.createdAt).toLocaleString('en-GB')}),\" \",/*#__PURE__*/_jsx(\"th\",{children:Inventory.fromName}),/*#__PURE__*/_jsx(\"th\",{children:Inventory.description}),/*#__PURE__*/_jsx(\"td\",{children:Inventory.amount}),/*#__PURE__*/_jsx(\"td\",{children:Inventory.paymentmode})]},Inventory._id)});})})]})})})]})});}","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/src/components/ManagedCare/Preauthorization.js"],"names":["React","useState","useContext","useEffect","useRef","client","DebounceInput","useForm","UserContext","ObjectContext","toast","searchfacility","FacilityAccount","state","selectedInventory","setSelectedInventory","FacilityServiceRevenue","register","handleSubmit","setValue","error","setError","success","setSuccess","message","setMessage","facility","setFacility","InventoryServ","service","SubwalletServ","user","setState","currentUser","setCurrentUser","balance","setBalance","getSearchfacility","obj","getaccountdetails","find","query","currentEmployee","facilityDetail","_id","category","$sort","createdAt","then","res","console","log","data","type","dismissible","pauseOnHover","catch","err","map","Inventory","i","Date","toLocaleString","fromName","description","amount","paymentmode"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, {useState,useContext, useEffect,useRef} from 'react'\nimport client from '../../feathers'\nimport {DebounceInput} from 'react-debounce-input';\nimport { useForm } from \"react-hook-form\";\n//import {useHistory} from 'react-router-dom'\nimport {UserContext,ObjectContext} from '../../context'\nimport {toast} from 'bulma-toast'\n// eslint-disable-next-line\nconst searchfacility={};\n\nexport default function FacilityAccount() {\n    const {state}=useContext(ObjectContext) //,setState\n    // eslint-disable-next-line\n    const [selectedInventory,setSelectedInventory]=useState()\n    //const [showState,setShowState]=useState() //create|modify|detail\n    \n    return(\n        <section className= \"section remPadTop\">\n           {/*  <div className=\"level\">\n            <div className=\"level-item\"> <span className=\"is-size-6 has-text-weight-medium\">Inventory  Module</span></div>\n            </div> */}\n            <div className=\"columns \">\n            <div className=\"column is-3 \">\n                   \n                </div>\n                <div className=\"column is-6 \">\n                    <FacilityServiceRevenue />\n                </div>\n           <div className=\"column is-3 \">\n          {/*  <FacilityAccount/>\n                { (state.SelectedClient.show ==='detail') && <ClientAccount />} */}\n                {/*  {(state.InventoryModule.show ==='detail')&&<InventoryDetail  />}\n                {(state.InventoryModule.show ==='modify')&&<InventoryModify Inventory={selectedInventory} />}*/}\n               \n            </div> \n\n            </div>                            \n            </section>\n       \n    )\n    \n}\n\nexport  function FacilityServiceRevenue(){\n    const { register, handleSubmit,setValue} = useForm(); //, watch, errors, reset \n    const [error, setError] =useState(false)\n    const [success, setSuccess] =useState(false)\n    const [message,setMessage] = useState(\"\")\n    // eslint-disable-next-line\n    const [facility,setFacility] = useState([])\n    const InventoryServ=client.service('subwallettransactions')\n    const SubwalletServ=client.service('subwallet')\n    //const history = useHistory()\n    const {user} = useContext(UserContext) //,setUser\n    const {state,setState}=useContext(ObjectContext)\n    // eslint-disable-next-line\n    const [currentUser,setCurrentUser] = useState()\n    const [balance, setBalance]=useState(0)\n\n\n    //const clientSel= state.SelectedClient.client\n    const getSearchfacility=(obj)=>{\n      /*   \n        setValue(\"facility\", obj._id,  {\n            shouldValidate: true,\n            shouldDirty: true\n        }) */\n    }\n    \n    useEffect(() => {\n        setCurrentUser(user)\n        //console.log(currentUser)\n        return () => {\n        \n        }\n    }, [user])\n\n  //check user for facility or get list of facility  \n   /*  useEffect(()=>{\n        //setFacility(user.activeInventory.FacilityId)//\n      if (!user.stacker){\n          console.log(currentUser)\n        setValue(\"facility\", user.currentEmployee.facilityDetail._id,  {\n            shouldValidate: true,\n            shouldDirty: true\n        }) \n      }\n    }) */\n\n    useEffect(() => {\n        getaccountdetails()\n        //getBalance()\n        return () => {\n           \n        }\n    }, [])\n\n\n\n    const getaccountdetails=()=>{\n        InventoryServ.find({query: {\n            facility:user.currentEmployee.facilityDetail._id,\n            //client:clientSel.client,\n           // storeId:state.StoreModule.selectedStore._id,\n            category:\"debit\",\n            \n            $sort: {\n                createdAt: -1\n            }\n            }})\n        .then((res)=>{\n                console.log(res)\n                setFacility(res.data)\n                //e.target.reset();\n               /*  setMessage(\"Created Inventory successfully\") */\n               // setSuccess(true)\n                toast({\n                    message: 'Account details succesful',\n                    type: 'is-success',\n                    dismissible: true,\n                    pauseOnHover: true,\n                  })\n                 // setSuccess(false)\n            })\n            .catch((err)=>{\n                toast({\n                    message: 'Error getting account details ' + err,\n                    type: 'is-danger',\n                    dismissible: true,\n                    pauseOnHover: true,\n                  })\n            })\n    }\n\n    /* const getBalance=async ()=>{\n        const findProductEntry= await SubwalletServ.find(\n            {query: {\n               \n                //client:clientSel.client,\n                organization:user.currentEmployee.facilityDetail._id,\n                //storeId:state.StoreModule.selectedStore._id,\n                //clientId:state.ClientModule.selectedClient._id,\n                $limit:100,\n                $sort: {\n                    createdAt: -1\n                }\n                }})\n                 console.log(findProductEntry)\n    \n         // console.log(\"balance\", findProductEntry.data[0].amount)\n            if (findProductEntry.data.length>0){\n                await setBalance(findProductEntry.data[0].amount)\n            }else{\n                await setBalance(0) \n                \n            } \n    \n          //  await setState((prevstate)=>({...prevstate, currentClients:findProductEntry.groupedOrder}))\n            }   \n    \n */\n   /*  const onSubmit = (data,e) =>{\n        e.preventDefault();\n        setMessage(\"\")\n        setError(false)\n        setSuccess(false)\n         // data.createdby=user._id\n          console.log(data);\n          if (user.currentEmployee){\n         data.facility=user.currentEmployee.facilityDetail._id  // or from facility dropdown\n          }\n        \n\n      }  */\n    \n\n    return (\n        <>\n            <div className=\"card cardheight\">\n                <div className=\"card-header\">\n                    <p className=\"card-header-title\">\n                      Service  Revenue \n                    </p>\n                   {/*  <button className=\"button is-success is-small btnheight mt-2\" >\n                    Current Balance: N {balance}\n                 </button> */}\n                </div>\n               \n                            <div className=\"card-content vscrollable mx-0.5\">\n                                   \n                                    <div className=\"table-container pullup \">\n                                <table className=\"table is-striped is-narrow is-hoverable  is-scrollable mx-0.5\">\n                                    <thead>\n                                        <tr>\n                                        <th><abbr title=\"Serial No\">S/No</abbr></th>\n                                        <th><abbr title=\"Date\">Date</abbr></th>\n                                        <th><abbr title=\"Client\">Client</abbr></th>\n                                         <th><abbr title=\"Description\">Description</abbr></th> \n                                        \n                                        <th><abbr title=\"Amount\">Amount</abbr></th>\n                                        <th><abbr title=\"Mode\">Mode</abbr></th>\n                                       {/*  <th><abbr title=\"Stock Value\">Stock Value</abbr></th>\n                                         \n                                        <th><abbr title=\"Selling Price\">Selling Price</abbr></th>\n                                        <th><abbr title=\"Re-Order Level\">Re-Order Level</abbr></th>\n                                        <th><abbr title=\"Expiry\">Expiry</abbr></th> \n                                        <th><abbr title=\"Actions\">Actions</abbr></th> */}\n                                        </tr>\n                                    </thead>\n                                    <tfoot>\n                                        \n                                    </tfoot>\n                                    <tbody>\n                                        {facility.map((Inventory, i)=>(\n                                        <>\n                                          {Inventory.category===\"debit\" && <tr key={Inventory._id} >\n                                            <th>{i+1}</th>\n                                            <td>{new Date(Inventory.createdAt).toLocaleString('en-GB')}</td> {/*add time  */}\n                                            <th>{Inventory.fromName}</th>\n                                            <th>{Inventory.description}</th>\n                                            <td>{Inventory.amount}</td>\n                                            <td>{Inventory.paymentmode}</td>\n                                            {/* <td>{Inventory.stockvalue}</td>\n                                            <td>{Inventory.costprice}</td>\n                                            <td>{Inventory.sellingprice}</td>\n                                            <td>{Inventory.reorder_level}</td> \n                                            <td>{Inventory.expiry}</td>\n                                            <td><span   className=\"showAction\"  >...</span></td> */}\n                                           \n                                            </tr>\n\n                                            }\n                                        </>\n                                        ))}\n                                    </tbody>\n                                    </table>\n                                    \n                        </div>              \n                                    \n                            </div>\n                    </div>\n               \n           \n        </>\n    )\n   \n}"]},"metadata":{},"sourceType":"module"}