{"ast":null,"code":"import _objectWithoutProperties from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { Polygon as LeafletPolygon } from 'leaflet';\nexport var Polygon = createPathComponent(function createPolygon(_ref, ctx) {\n  var positions = _ref.positions,\n      options = _objectWithoutProperties(_ref, [\"positions\"]);\n\n  var polygon = new LeafletPolygon(positions, options);\n  return createElementObject(polygon, extendContext(ctx, {\n    overlayContainer: polygon\n  }));\n}, function updatePolygon(layer, props, prevProps) {\n  if (props.positions !== prevProps.positions) {\n    layer.setLatLngs(props.positions);\n  }\n});","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/react-leaflet/lib/Polygon.js"],"names":["createElementObject","createPathComponent","extendContext","Polygon","LeafletPolygon","createPolygon","ctx","positions","options","polygon","overlayContainer","updatePolygon","layer","props","prevProps","setLatLngs"],"mappings":";AAAA,SAASA,mBAAT,EAA8BC,mBAA9B,EAAmDC,aAAnD,QAAwE,qBAAxE;AACA,SAASC,OAAO,IAAIC,cAApB,QAA0C,SAA1C;AACA,OAAO,IAAMD,OAAO,GAAGF,mBAAmB,CAAC,SAASI,aAAT,OAAmDC,GAAnD,EAAwD;AAAA,MAA/BC,SAA+B,QAA/BA,SAA+B;AAAA,MAAhBC,OAAgB;;AAC/F,MAAMC,OAAO,GAAG,IAAIL,cAAJ,CAAmBG,SAAnB,EAA8BC,OAA9B,CAAhB;AACA,SAAOR,mBAAmB,CAACS,OAAD,EAAUP,aAAa,CAACI,GAAD,EAAM;AACnDI,IAAAA,gBAAgB,EAAED;AADiC,GAAN,CAAvB,CAA1B;AAGH,CALyC,EAKvC,SAASE,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqCC,SAArC,EAAgD;AAC/C,MAAID,KAAK,CAACN,SAAN,KAAoBO,SAAS,CAACP,SAAlC,EAA6C;AACzCK,IAAAA,KAAK,CAACG,UAAN,CAAiBF,KAAK,CAACN,SAAvB;AACH;AACJ,CATyC,CAAnC","sourcesContent":["import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { Polygon as LeafletPolygon } from 'leaflet';\nexport const Polygon = createPathComponent(function createPolygon({ positions , ...options }, ctx) {\n    const polygon = new LeafletPolygon(positions, options);\n    return createElementObject(polygon, extendContext(ctx, {\n        overlayContainer: polygon\n    }));\n}, function updatePolygon(layer, props, prevProps) {\n    if (props.positions !== prevProps.positions) {\n        layer.setLatLngs(props.positions);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}