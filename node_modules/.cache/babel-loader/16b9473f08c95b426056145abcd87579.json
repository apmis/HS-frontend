{"ast":null,"code":"import _objectWithoutProperties from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { Rectangle as LeafletRectangle } from 'leaflet';\nexport var Rectangle = createPathComponent(function createRectangle(_ref, ctx) {\n  var bounds = _ref.bounds,\n      options = _objectWithoutProperties(_ref, [\"bounds\"]);\n\n  var rectangle = new LeafletRectangle(bounds, options);\n  return createElementObject(rectangle, extendContext(ctx, {\n    overlayContainer: rectangle\n  }));\n}, function updateRectangle(layer, props, prevProps) {\n  if (props.bounds !== prevProps.bounds) {\n    layer.setBounds(props.bounds);\n  }\n});","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/react-leaflet/lib/Rectangle.js"],"names":["createElementObject","createPathComponent","extendContext","Rectangle","LeafletRectangle","createRectangle","ctx","bounds","options","rectangle","overlayContainer","updateRectangle","layer","props","prevProps","setBounds"],"mappings":";AAAA,SAASA,mBAAT,EAA8BC,mBAA9B,EAAmDC,aAAnD,QAAwE,qBAAxE;AACA,SAASC,SAAS,IAAIC,gBAAtB,QAA8C,SAA9C;AACA,OAAO,IAAMD,SAAS,GAAGF,mBAAmB,CAAC,SAASI,eAAT,OAAkDC,GAAlD,EAAuD;AAAA,MAA5BC,MAA4B,QAA5BA,MAA4B;AAAA,MAAhBC,OAAgB;;AAChG,MAAMC,SAAS,GAAG,IAAIL,gBAAJ,CAAqBG,MAArB,EAA6BC,OAA7B,CAAlB;AACA,SAAOR,mBAAmB,CAACS,SAAD,EAAYP,aAAa,CAACI,GAAD,EAAM;AACrDI,IAAAA,gBAAgB,EAAED;AADmC,GAAN,CAAzB,CAA1B;AAGH,CAL2C,EAKzC,SAASE,eAAT,CAAyBC,KAAzB,EAAgCC,KAAhC,EAAuCC,SAAvC,EAAkD;AACjD,MAAID,KAAK,CAACN,MAAN,KAAiBO,SAAS,CAACP,MAA/B,EAAuC;AACnCK,IAAAA,KAAK,CAACG,SAAN,CAAgBF,KAAK,CAACN,MAAtB;AACH;AACJ,CAT2C,CAArC","sourcesContent":["import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { Rectangle as LeafletRectangle } from 'leaflet';\nexport const Rectangle = createPathComponent(function createRectangle({ bounds , ...options }, ctx) {\n    const rectangle = new LeafletRectangle(bounds, options);\n    return createElementObject(rectangle, extendContext(ctx, {\n        overlayContainer: rectangle\n    }));\n}, function updateRectangle(layer, props, prevProps) {\n    if (props.bounds !== prevProps.bounds) {\n        layer.setBounds(props.bounds);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}