{"ast":null,"code":"import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n  return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n  var map = useMap();\n  useEffect(function addMapEventHandler() {\n    // @ts-ignore event type\n    map.on(type, handler);\n    return function removeMapEventHandler() {\n      // @ts-ignore event type\n      map.off(type, handler);\n    };\n  }, [map, type, handler]);\n  return map;\n}\nexport function useMapEvents(handlers) {\n  var map = useMap();\n  useEffect(function addMapEventHandlers() {\n    map.on(handlers);\n    return function removeMapEventHandlers() {\n      map.off(handlers);\n    };\n  }, [map, handlers]);\n  return map;\n}","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/react-leaflet/lib/hooks.js"],"names":["useLeafletContext","useEffect","useMap","map","useMapEvent","type","handler","addMapEventHandler","on","removeMapEventHandler","off","useMapEvents","handlers","addMapEventHandlers","removeMapEventHandlers"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qBAAlC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAO,SAASC,MAAT,GAAkB;AACrB,SAAOF,iBAAiB,GAAGG,GAA3B;AACH;AACD,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,OAA3B,EAAoC;AACvC,MAAMH,GAAG,GAAGD,MAAM,EAAlB;AACAD,EAAAA,SAAS,CAAC,SAASM,kBAAT,GAA8B;AACpC;AACAJ,IAAAA,GAAG,CAACK,EAAJ,CAAOH,IAAP,EAAaC,OAAb;AACA,WAAO,SAASG,qBAAT,GAAiC;AACpC;AACAN,MAAAA,GAAG,CAACO,GAAJ,CAAQL,IAAR,EAAcC,OAAd;AACH,KAHD;AAIH,GAPQ,EAON,CACCH,GADD,EAECE,IAFD,EAGCC,OAHD,CAPM,CAAT;AAYA,SAAOH,GAAP;AACH;AACD,OAAO,SAASQ,YAAT,CAAsBC,QAAtB,EAAgC;AACnC,MAAMT,GAAG,GAAGD,MAAM,EAAlB;AACAD,EAAAA,SAAS,CAAC,SAASY,mBAAT,GAA+B;AACrCV,IAAAA,GAAG,CAACK,EAAJ,CAAOI,QAAP;AACA,WAAO,SAASE,sBAAT,GAAkC;AACrCX,MAAAA,GAAG,CAACO,GAAJ,CAAQE,QAAR;AACH,KAFD;AAGH,GALQ,EAKN,CACCT,GADD,EAECS,QAFD,CALM,CAAT;AASA,SAAOT,GAAP;AACH","sourcesContent":["import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n    return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n    const map = useMap();\n    useEffect(function addMapEventHandler() {\n        // @ts-ignore event type\n        map.on(type, handler);\n        return function removeMapEventHandler() {\n            // @ts-ignore event type\n            map.off(type, handler);\n        };\n    }, [\n        map,\n        type,\n        handler\n    ]);\n    return map;\n}\nexport function useMapEvents(handlers) {\n    const map = useMap();\n    useEffect(function addMapEventHandlers() {\n        map.on(handlers);\n        return function removeMapEventHandlers() {\n            map.off(handlers);\n        };\n    }, [\n        map,\n        handlers\n    ]);\n    return map;\n}\n"]},"metadata":{},"sourceType":"module"}