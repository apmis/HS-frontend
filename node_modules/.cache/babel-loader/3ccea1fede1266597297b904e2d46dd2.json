{"ast":null,"code":"import _objectWithoutProperties from \"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { createElementObject, createLayerComponent, extendContext, updateMediaOverlay } from '@react-leaflet/core';\nimport { VideoOverlay as LeafletVideoOverlay } from 'leaflet';\nexport var VideoOverlay = createLayerComponent(function createVideoOverlay(_ref, ctx) {\n  var bounds = _ref.bounds,\n      url = _ref.url,\n      options = _objectWithoutProperties(_ref, [\"bounds\", \"url\"]);\n\n  var overlay = new LeafletVideoOverlay(url, bounds, options);\n\n  if (options.play === true) {\n    var _overlay$getElement;\n\n    (_overlay$getElement = overlay.getElement()) === null || _overlay$getElement === void 0 ? void 0 : _overlay$getElement.play();\n  }\n\n  return createElementObject(overlay, extendContext(ctx, {\n    overlayContainer: overlay\n  }));\n}, function updateVideoOverlay(overlay, props, prevProps) {\n  updateMediaOverlay(overlay, props, prevProps);\n\n  if (typeof props.url === 'string' && props.url !== prevProps.url) {\n    overlay.setUrl(props.url);\n  }\n\n  var video = overlay.getElement();\n\n  if (video != null) {\n    if (props.play === true && !prevProps.play) {\n      video.play();\n    } else if (!props.play && prevProps.play === true) {\n      video.pause();\n    }\n  }\n});","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/react-leaflet/lib/VideoOverlay.js"],"names":["createElementObject","createLayerComponent","extendContext","updateMediaOverlay","VideoOverlay","LeafletVideoOverlay","createVideoOverlay","ctx","bounds","url","options","overlay","play","getElement","overlayContainer","updateVideoOverlay","props","prevProps","setUrl","video","pause"],"mappings":";AAAA,SAASA,mBAAT,EAA8BC,oBAA9B,EAAoDC,aAApD,EAAmEC,kBAAnE,QAA6F,qBAA7F;AACA,SAASC,YAAY,IAAIC,mBAAzB,QAAoD,SAApD;AACA,OAAO,IAAMD,YAAY,GAAGH,oBAAoB,CAAC,SAASK,kBAAT,OAA2DC,GAA3D,EAAgE;AAAA,MAAlCC,MAAkC,QAAlCA,MAAkC;AAAA,MAAzBC,GAAyB,QAAzBA,GAAyB;AAAA,MAAhBC,OAAgB;;AAC7G,MAAMC,OAAO,GAAG,IAAIN,mBAAJ,CAAwBI,GAAxB,EAA6BD,MAA7B,EAAqCE,OAArC,CAAhB;;AACA,MAAIA,OAAO,CAACE,IAAR,KAAiB,IAArB,EAA2B;AAAA;;AACvB,2BAAAD,OAAO,CAACE,UAAR,8EAAsBD,IAAtB;AACH;;AACD,SAAOZ,mBAAmB,CAACW,OAAD,EAAUT,aAAa,CAACK,GAAD,EAAM;AACnDO,IAAAA,gBAAgB,EAAEH;AADiC,GAAN,CAAvB,CAA1B;AAGH,CAR+C,EAQ7C,SAASI,kBAAT,CAA4BJ,OAA5B,EAAqCK,KAArC,EAA4CC,SAA5C,EAAuD;AACtDd,EAAAA,kBAAkB,CAACQ,OAAD,EAAUK,KAAV,EAAiBC,SAAjB,CAAlB;;AACA,MAAI,OAAOD,KAAK,CAACP,GAAb,KAAqB,QAArB,IAAiCO,KAAK,CAACP,GAAN,KAAcQ,SAAS,CAACR,GAA7D,EAAkE;AAC9DE,IAAAA,OAAO,CAACO,MAAR,CAAeF,KAAK,CAACP,GAArB;AACH;;AACD,MAAMU,KAAK,GAAGR,OAAO,CAACE,UAAR,EAAd;;AACA,MAAIM,KAAK,IAAI,IAAb,EAAmB;AACf,QAAIH,KAAK,CAACJ,IAAN,KAAe,IAAf,IAAuB,CAACK,SAAS,CAACL,IAAtC,EAA4C;AACxCO,MAAAA,KAAK,CAACP,IAAN;AACH,KAFD,MAEO,IAAI,CAACI,KAAK,CAACJ,IAAP,IAAeK,SAAS,CAACL,IAAV,KAAmB,IAAtC,EAA4C;AAC/CO,MAAAA,KAAK,CAACC,KAAN;AACH;AACJ;AACJ,CArB+C,CAAzC","sourcesContent":["import { createElementObject, createLayerComponent, extendContext, updateMediaOverlay } from '@react-leaflet/core';\nimport { VideoOverlay as LeafletVideoOverlay } from 'leaflet';\nexport const VideoOverlay = createLayerComponent(function createVideoOverlay({ bounds , url , ...options }, ctx) {\n    const overlay = new LeafletVideoOverlay(url, bounds, options);\n    if (options.play === true) {\n        overlay.getElement()?.play();\n    }\n    return createElementObject(overlay, extendContext(ctx, {\n        overlayContainer: overlay\n    }));\n}, function updateVideoOverlay(overlay, props, prevProps) {\n    updateMediaOverlay(overlay, props, prevProps);\n    if (typeof props.url === 'string' && props.url !== prevProps.url) {\n        overlay.setUrl(props.url);\n    }\n    const video = overlay.getElement();\n    if (video != null) {\n        if (props.play === true && !prevProps.play) {\n            video.play();\n        } else if (!props.play && prevProps.play === true) {\n            video.pause();\n        }\n    }\n});\n"]},"metadata":{},"sourceType":"module"}