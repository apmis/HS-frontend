{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import _defineProperty from\"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/mfybaby/Documents/HealthStack2/HS-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable */import React,{useState,useContext,useEffect,useRef}from'react';import client from'../../feathers';import{DebounceInput}from'react-debounce-input';import{useForm}from\"react-hook-form\";//import {useHistory} from 'react-router-dom'\nimport{UserContext,ObjectContext}from'../../context';import{toast}from'bulma-toast';import{format,formatDistanceToNowStrict}from'date-fns';//import BillDispenseCreate from './BillPrescriptionCreate'\n//import PatientProfile from '../ClientMgt/PatientProfile'\n/* import {ProductCreate} from './Products' */ // eslint-disable-next-line\n//const searchfacility={};\nimport{Accordion,AccordionItem,AccordionItemHeading,AccordionItemButton,AccordionItemPanel}from'react-accessible-accordion';// Demo styles, see 'Styles' section below for some notes on use.\nimport'react-accessible-accordion/dist/fancy-example.css';//fetching billed prescription for client\nexport default function ClientBilledPrescription(_ref){var selectedClient=_ref.selectedClient;// const { register, handleSubmit, watch, errors } = useForm();\n// eslint-disable-next-line\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];// eslint-disable-next-line\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),success=_useState4[0],setSuccess=_useState4[1];// eslint-disable-next-line\nvar _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),message=_useState6[0],setMessage=_useState6[1];var OrderServ=client.service('order');//const history = useHistory()\n// const {user,setUser} = useContext(UserContext)\nvar _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),clientOrders=_useState8[0],setClientOrders=_useState8[1];// eslint-disable-next-line\nvar _useState9=useState(),_useState10=_slicedToArray(_useState9,2),selectedDispense=_useState10[0],setSelectedDispense=_useState10[1];//\n// eslint-disable-next-line\nvar _useContext=useContext(ObjectContext),state=_useContext.state,setState=_useContext.setState;// eslint-disable-next-line\nvar _useContext2=useContext(UserContext),user=_useContext2.user,setUser=_useContext2.setUser;var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),selectedMedication=_useState12[0],setSelectedMedication=_useState12[1];// console.log(selectedClient)\nvar handleSelectedClient=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(Client){var newClientModule;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// await setSelectedClient(Client)\nnewClientModule={selectedClient:Client,show:'detail'};_context.next=3;return setState(function(prevstate){return _objectSpread(_objectSpread({},prevstate),{},{ClientModule:newClientModule});});case 3:case\"end\":return _context.stop();}}},_callee);}));return function handleSelectedClient(_x){return _ref2.apply(this,arguments);};}();var handleMedicationRow=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ProductEntry){var newProductEntryModule;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return handleSelectedClient(ProductEntry.client);case 2:_context2.next=4;return setSelectedMedication(ProductEntry);case 4:newProductEntryModule={selectedMedication:ProductEntry,show:'detail'};_context2.next=7;return setState(function(prevstate){return _objectSpread(_objectSpread({},prevstate),{},{medicationModule:newProductEntryModule});});case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function handleMedicationRow(_x2){return _ref3.apply(this,arguments);};}();var handleCreateNew=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var newProductEntryModule;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:newProductEntryModule={selectedDispense:{},show:'create'};_context3.next=3;return setState(function(prevstate){return _objectSpread(_objectSpread({},prevstate),{},{DispenseModule:newProductEntryModule});});case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function handleCreateNew(){return _ref4.apply(this,arguments);};}();var handleSearch=function handleSearch(val){var _query;var field='name';//console.log(val)\nOrderServ.find({query:(_query={order:{$regex:val,$options:'i'},order_status:{$regex:val,$options:'i'}},_defineProperty(_query,\"order_status\",\"Billed\"),_defineProperty(_query,\"clientId\",selectedClient),_defineProperty(_query,\"order_category\",\"Prescription\"),_defineProperty(_query,\"$limit\",10),_defineProperty(_query,\"$sort\",{createdAt:-1}),_query)}).then(function(res){// console.log(res)\nsetClientOrders(res.data);setMessage(\" ProductEntry  fetched successfully\");setSuccess(true);}).catch(function(err){// console.log(err)\nsetMessage(\"Error fetching ProductEntry, probable network issues \"+err);setError(true);});};var getFacilities=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var findProductEntry;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return OrderServ.find({query:{order_category:\"Prescription\",fulfilled:\"False\",destination:user.currentEmployee.facilityDetail._id,order_status:\"Billed\",clientId:selectedClient,//selectedClient, //\n// need to set this finally\n//storeId:state.StoreModule.selectedStore._id,\n//clientId:state.ClientModule.selectedClient._id,\n$limit:50,$sort:{createdAt:-1}}});case 2:findProductEntry=_context4.sent;_context4.next=5;return setClientOrders(findProductEntry.data);case 5:case\"end\":return _context4.stop();}}},_callee4);}));return function getFacilities(){return _ref5.apply(this,arguments);};}();//1.consider using props for global data\nuseEffect(function(){// console.log(\"started\")\ngetFacilities();OrderServ.on('created',function(obj){return getFacilities();});OrderServ.on('updated',function(obj){return getFacilities();});OrderServ.on('patched',function(obj){return getFacilities();});OrderServ.on('removed',function(obj){return getFacilities();});return function(){};},[]);var handleRow=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(ProductEntry){var newProductEntryModule;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return setSelectedDispense(ProductEntry);case 2:newProductEntryModule={selectedDispense:ProductEntry,show:'detail'};_context5.next=5;return setState(function(prevstate){return _objectSpread(_objectSpread({},prevstate),{},{DispenseModule:newProductEntryModule});});case 5:case\"end\":return _context5.stop();}}},_callee5);}));return function handleRow(_x3){return _ref6.apply(this,arguments);};}();return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\" pullupx \",children:/*#__PURE__*/_jsx(\"div\",{className:\" is-fullwidth vscrollable pr-1\",children:/*#__PURE__*/_jsx(Accordion,{allowZeroExpanded:true,children:/*#__PURE__*/_jsxs(AccordionItem,{children:[/*#__PURE__*/_jsx(AccordionItemHeading,{children:/*#__PURE__*/_jsxs(AccordionItemButton,{children:[\" \",clientOrders.length,\" billed medication(s)\"]})}),/*#__PURE__*/_jsx(AccordionItemPanel,{children:/*#__PURE__*/_jsxs(\"table\",{className:\"table is-striped  is-hoverable is-fullwidth is-scrollable mr-2\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"abbr\",{title:\"Serial No\",children:\"S/No\"})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"abbr\",{title:\"Date\",children:\"Date\"})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"abbr\",{title:\"Order\",children:\"Medication\"})}),/*#__PURE__*/_jsx(\"th\",{children:\"Fulfilled\"}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"abbr\",{title:\"Status\",children:\"Status\"})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"abbr\",{title:\"Requesting Physician\",children:\"Requesting Physician\"})})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:clientOrders.map(function(order,i){return/*#__PURE__*/_jsxs(\"tr\",{/* onClick={()=>handleMedicationRow(order)} */className:order._id===((selectedMedication===null||selectedMedication===void 0?void 0:selectedMedication._id)||null)?\"is-selected\":\"\",children:[/*#__PURE__*/_jsx(\"th\",{children:i+1}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{children:format(new Date(order.createdAt),'dd-MM-yy')})}),\" \",/*#__PURE__*/_jsx(\"th\",{children:order.order}),/*#__PURE__*/_jsx(\"td\",{children:order.fulfilled===\"True\"?\"Yes\":\"No\"}),/*#__PURE__*/_jsx(\"td\",{children:order.order_status}),/*#__PURE__*/_jsx(\"td\",{children:order.requestingdoctor_Name})]},order._id);})})]})})]})})})})});}","map":{"version":3,"sources":["/home/mfybaby/Documents/HealthStack2/HS-frontend/src/components/inventory/ClientPrescription.js"],"names":["React","useState","useContext","useEffect","useRef","client","DebounceInput","useForm","UserContext","ObjectContext","toast","format","formatDistanceToNowStrict","Accordion","AccordionItem","AccordionItemHeading","AccordionItemButton","AccordionItemPanel","ClientBilledPrescription","selectedClient","error","setError","success","setSuccess","message","setMessage","OrderServ","service","clientOrders","setClientOrders","selectedDispense","setSelectedDispense","state","setState","user","setUser","selectedMedication","setSelectedMedication","handleSelectedClient","Client","newClientModule","show","prevstate","ClientModule","handleMedicationRow","ProductEntry","newProductEntryModule","medicationModule","handleCreateNew","DispenseModule","handleSearch","val","field","find","query","order","$regex","$options","order_status","createdAt","then","res","data","catch","err","getFacilities","order_category","fulfilled","destination","currentEmployee","facilityDetail","_id","clientId","$limit","$sort","findProductEntry","on","obj","handleRow","length","map","i","Date","requestingdoctor_Name"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, {useState,useContext, useEffect,useRef} from 'react'\nimport client from '../../feathers'\nimport {DebounceInput} from 'react-debounce-input';\nimport { useForm } from \"react-hook-form\";\n//import {useHistory} from 'react-router-dom'\nimport {UserContext,ObjectContext} from '../../context'\nimport {toast} from 'bulma-toast'\nimport {format, formatDistanceToNowStrict } from 'date-fns'\n//import BillDispenseCreate from './BillPrescriptionCreate'\n//import PatientProfile from '../ClientMgt/PatientProfile'\n/* import {ProductCreate} from './Products' */\n// eslint-disable-next-line\n//const searchfacility={};\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemButton,\n    AccordionItemPanel,\n} from 'react-accessible-accordion';\n\n// Demo styles, see 'Styles' section below for some notes on use.\nimport 'react-accessible-accordion/dist/fancy-example.css';\n\n\n//fetching billed prescription for client\nexport default function ClientBilledPrescription({selectedClient}){\n    // const { register, handleSubmit, watch, errors } = useForm();\n     // eslint-disable-next-line\n     const [error, setError] =useState(false)\n      // eslint-disable-next-line\n     const [success, setSuccess] =useState(false)\n      // eslint-disable-next-line\n    const [message, setMessage] = useState(\"\") \n     const OrderServ=client.service('order')\n     //const history = useHistory()\n    // const {user,setUser} = useContext(UserContext)\n     const [clientOrders,setClientOrders]=useState([])\n      // eslint-disable-next-line\n    const [selectedDispense, setSelectedDispense]=useState() //\n     // eslint-disable-next-line\n     const {state,setState}=useContext(ObjectContext)\n     // eslint-disable-next-line\n     const {user,setUser}=useContext(UserContext)\n     const [selectedMedication, setSelectedMedication] =useState(\"\")\n\n\n    // console.log(selectedClient)\n \n     const handleSelectedClient= async(Client)=>{\n         // await setSelectedClient(Client)\n          const    newClientModule={\n              selectedClient:Client,\n              show :'detail'\n          }\n         await setState((prevstate)=>({...prevstate, ClientModule:newClientModule}))\n      }\n \n     const handleMedicationRow= async(ProductEntry)=>{ //handle selected single order\n         //console.log(\"b4\",state)\n     \n         //console.log(\"handlerow\",ProductEntry)\n         await handleSelectedClient(ProductEntry.client)\n \n     \n         await setSelectedMedication(ProductEntry)\n     \n         const    newProductEntryModule={\n             selectedMedication:ProductEntry,\n             show :'detail'\n         }\n       await setState((prevstate)=>({...prevstate, medicationModule:newProductEntryModule}))\n        //console.log(state)\n       // ProductEntry.show=!ProductEntry.show\n     \n     }\n \n     const handleCreateNew = async()=>{\n         const    newProductEntryModule={\n             selectedDispense:{},\n             show :'create'\n             }\n        await setState((prevstate)=>({...prevstate, DispenseModule:newProductEntryModule}))\n        //console.log(state)\n         \n \n     }\n   \n \n     const handleSearch=(val)=>{\n        const field='name'\n        //console.log(val)\n        OrderServ.find({query: {\n                 order: {\n                     $regex:val,\n                     $options:'i'\n                    \n                 },\n                 order_status: {\n                     $regex:val,\n                     $options:'i'\n                    \n                 },\n                 order_status:\"Billed\",  \n                 clientId:selectedClient,\n                 order_category:\"Prescription\",\n                // storeId:state.StoreModule.selectedStore._id,\n                //facility:user.currentEmployee.facilityDetail._id || \"\",\n                 $limit:10,\n                 $sort: {\n                     createdAt: -1\n                   }\n                     }}).then((res)=>{\n                // console.log(res)\n                setClientOrders(res.data)\n                 setMessage(\" ProductEntry  fetched successfully\")\n                 setSuccess(true) \n             })\n             .catch((err)=>{\n                // console.log(err)\n                 setMessage(\"Error fetching ProductEntry, probable network issues \"+ err )\n                 setError(true)\n             })\n         }\n     const getFacilities= async()=>{\n        \n             // console.log(\"here b4 server\")\n     const findProductEntry= await OrderServ.find(\n             {query: {\n                 order_category:\"Prescription\",\n                 fulfilled:\"False\",\n                 destination: user.currentEmployee.facilityDetail._id,\n                 order_status:\"Billed\",  \n                 clientId:selectedClient,//selectedClient, //\n                 // need to set this finally\n                 //storeId:state.StoreModule.selectedStore._id,\n                 //clientId:state.ClientModule.selectedClient._id,\n                 $limit:50,\n                 $sort: {\n                     createdAt: -1\n                 }\n                 }})\n \n            // console.log(\"clientorders\", findProductEntry)\n             await setClientOrders(findProductEntry.data)\n             //await setState((prevstate)=>({...prevstate, currentClients:findProductEntry.groupedOrder}))\n             }   \n \n     //1.consider using props for global data\n     useEffect(() => {\n         // console.log(\"started\")\n             getFacilities()\n             OrderServ.on('created', (obj)=>getFacilities())\n             OrderServ.on('updated', (obj)=>getFacilities())\n             OrderServ.on('patched', (obj)=>getFacilities())\n             OrderServ.on('removed', (obj)=>getFacilities())\n             return () => {\n             \n             }\n             },[])\n \n         const handleRow= async(ProductEntry)=>{\n     \n         await setSelectedDispense(ProductEntry)\n \n         const    newProductEntryModule={\n             selectedDispense:ProductEntry,\n             show :'detail'\n         }\n         await setState((prevstate)=>({...prevstate, DispenseModule:newProductEntryModule}))\n         //console.log(state)\n         \n         }\n \n \n     return(     \n             <>  \n                 {/* <div className=\"level\">\n                     <div className=\"level-left\">\n                         <div className=\"level-item\">\n                             <div className=\"field\">\n                                 <p className=\"control has-icons-left  \">\n                                     <DebounceInput className=\"input is-small \" \n                                         type=\"text\" placeholder=\"Search Medications\"\n                                         minLength={3}\n                                         debounceTimeout={400}\n                                         onChange={(e)=>handleSearch(e.target.value)} />\n                                     <span className=\"icon is-small is-left\">\n                                         <i className=\"fas fa-search\"></i>\n                                     </span>\n                                 </p>\n                             </div>\n                         </div>\n                     </div> */}\n                     {/* <div className=\"level-item\"> <span className=\"is-size-6 has-text-weight-medium\">Billed Prescriptions </span></div> */}\n                      {/* <div className=\"level-right\">\n                        <div className=\"level-item\"> \n                             <div className=\"level-item\"><div className=\"button is-success is-small\" onClick={handleCreateNew}>New</div></div>\n                         </div> \n                     </div>*/}\n \n                 {/* </div> */}\n                 <div className=\" pullupx \">\n                     <div className=\" is-fullwidth vscrollable pr-1\">   \n                     <Accordion allowZeroExpanded>\n                         \n                             <AccordionItem  >\n                                <AccordionItemHeading >\n                                <AccordionItemButton  >\n                                       {/*  {i+1}  {Clinic.clientname} with  */ } {clientOrders.length} billed medication(s)  \n                                 </AccordionItemButton>\n                                 </AccordionItemHeading>\n                                 <AccordionItemPanel>\n                                     <table className=\"table is-striped  is-hoverable is-fullwidth is-scrollable mr-2\">\n                                             <thead>\n                                                 <tr>\n                                                     <th><abbr title=\"Serial No\">S/No</abbr></th>\n                                                     <th><abbr title=\"Date\">Date</abbr></th>\n                                                     <th><abbr title=\"Order\">Medication</abbr></th>\n                                                     <th>Fulfilled</th>\n                                                     <th><abbr title=\"Status\">Status</abbr></th>\n                                                     <th><abbr title=\"Requesting Physician\">Requesting Physician</abbr></th>\n                                                 </tr>\n                                             </thead>\n                                             <tbody>\n                                             { clientOrders.map((order, i)=>(\n \n                                                         <tr key={order._id} /* onClick={()=>handleMedicationRow(order)} */ className={order._id===(selectedMedication?._id||null)?\"is-selected\":\"\"}>                                         \n                                                         <th>{i+1}</th>\n                                                         <td><span>{format(new Date(order.createdAt),'dd-MM-yy')}</span></td> {/* {formatDistanceToNowStrict(new Date(ProductEntry.createdAt),{addSuffix: true})} <br/> */} \n                                                         <th>{order.order}</th>\n                                                         <td>{order.fulfilled===\"True\"?\"Yes\":\"No\"}</td>\n                                                         <td>{order.order_status}</td>\n                                                         <td>{order.requestingdoctor_Name}</td>\n                                                         </tr>\n                                                 ))}\n                                             </tbody>\n                                             </table>\n \n                               </AccordionItemPanel>                                          \n                                 </AccordionItem>\n                           \n                             {/* <!-- Add Ref to Load More div --> */}\n                             {/*  <div className=\"loading\" ref={loader}>\n                                     <h2>Load More</h2>\n                         </div> */}\n                         </Accordion>\n                     </div>                   \n                 </div>  \n             </>          \n     )\n     }\n"]},"metadata":{},"sourceType":"module"}