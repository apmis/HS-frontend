[{"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\EncounterMgt\\EncounterMain.js":"1","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Clinic\\ClinicSetup.js":"2","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\EncounterMgt\\DocumentClass.js":"3","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\EncounterMgt\\Encounter.js":"4","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\EncounterMgt\\EncounterRight.js":"5","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\App.js":"6","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\index.js":"7","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\context.js":"8","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\feathers.js":"9","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Home.js":"10","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Login.js":"11","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\FacilityModule.js":"12","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\Department.js":"13","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\FacilityHome.js":"14","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\Roaster.js":"15","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\Accessibility.js":"16","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\Facility.js":"17","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\inventory\\InventoryStore.js":"18","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\inventory\\InventoryReport.js":"19","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\ClientMgt\\Patient.js":"20","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\InventoryModule.js":"21","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\ClinicModule.js":"22","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\LandingPage.js":"23","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\HSModules.js":"24","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\Location.js":"25","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\inventory\\ProductEntry.js":"26","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\inventory\\Products.js":"27","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Clinic\\ClinicHome.js":"28","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Clinic\\ClinicEntry.js":"29","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\ClientMgt\\PatientProfile.js":"30","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\utils\\VideoConference.js":"31"},{"size":14747,"mtime":1612799729339,"results":"32","hashOfConfig":"33"},{"size":1728,"mtime":1612477930149,"results":"34","hashOfConfig":"33"},{"size":37609,"mtime":1612483185115,"results":"35","hashOfConfig":"33"},{"size":11720,"mtime":1612798409846,"results":"36","hashOfConfig":"33"},{"size":37766,"mtime":1612638457628,"results":"37","hashOfConfig":"33"},{"size":3343,"mtime":1612799583703,"results":"38","hashOfConfig":"33"},{"size":500,"mtime":1606167681327,"results":"39","hashOfConfig":"33"},{"size":958,"mtime":1611095384833,"results":"40","hashOfConfig":"33"},{"size":635,"mtime":1612777814876,"results":"41","hashOfConfig":"33"},{"size":6871,"mtime":1612615515082,"results":"42","hashOfConfig":"33"},{"size":3070,"mtime":1611089651447,"results":"43","hashOfConfig":"33"},{"size":6726,"mtime":1612616573670,"results":"44","hashOfConfig":"33"},{"size":148,"mtime":1610340754492,"results":"45","hashOfConfig":"33"},{"size":161,"mtime":1610350517503,"results":"46","hashOfConfig":"33"},{"size":142,"mtime":1610340882234,"results":"47","hashOfConfig":"33"},{"size":153,"mtime":1610345735519,"results":"48","hashOfConfig":"33"},{"size":29287,"mtime":1610499792755,"results":"49","hashOfConfig":"33"},{"size":38856,"mtime":1611912257779,"results":"50","hashOfConfig":"33"},{"size":8924,"mtime":1610239695153,"results":"51","hashOfConfig":"33"},{"size":75586,"mtime":1612485708167,"results":"52","hashOfConfig":"33"},{"size":7958,"mtime":1612616164004,"results":"53","hashOfConfig":"33"},{"size":7925,"mtime":1612797746615,"results":"54","hashOfConfig":"33"},{"size":602,"mtime":1610166221216,"results":"55","hashOfConfig":"33"},{"size":156,"mtime":1610340977169,"results":"56","hashOfConfig":"33"},{"size":40633,"mtime":1611172112597,"results":"57","hashOfConfig":"33"},{"size":52276,"mtime":1611792286916,"results":"58","hashOfConfig":"33"},{"size":40739,"mtime":1611416060016,"results":"59","hashOfConfig":"33"},{"size":960,"mtime":1612360743886,"results":"60","hashOfConfig":"33"},{"size":52284,"mtime":1612477058203,"results":"61","hashOfConfig":"33"},{"size":6092,"mtime":1612799857649,"results":"62","hashOfConfig":"33"},{"size":1854,"mtime":1612799451726,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},"vuhkqw",{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"79"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"79"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\EncounterMgt\\EncounterMain.js",["132","133","134","135","136","137","138"],"import React, {useState,useContext, useEffect,useRef} from 'react'\r\nimport client from '../../feathers'\r\nimport {DebounceInput} from 'react-debounce-input';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {DocumentClassList} from './DocumentClass'\r\n//import {useHistory} from 'react-router-dom'\r\nimport {UserContext,ObjectContext} from '../../context'\r\nimport {toast} from 'bulma-toast'\r\nimport {format, formatDistanceToNowStrict } from 'date-fns'\r\nimport  VideoConference  from '../utils/VideoConference';\r\n\r\nexport default function EncounterMain() {\r\n // const { register, handleSubmit, watch, errors } = useForm();\r\n    // eslint-disable-next-line\r\n    const [error, setError] =useState(false)\r\n     // eslint-disable-next-line\r\n    const [success, setSuccess] =useState(false)\r\n     // eslint-disable-next-line\r\n   const [message, setMessage] = useState(\"\") \r\n    const ClinicServ=client.service('clinicaldocument')\r\n    //const history = useHistory()\r\n   // const {user,setUser} = useContext(UserContext)\r\n    const [facilities,setFacilities]=useState([])\r\n     // eslint-disable-next-line\r\n   const [selectedClinic, setSelectedClinic]=useState() //\r\n    // eslint-disable-next-line\r\n    const {state,setState}=useContext(ObjectContext)\r\n    // eslint-disable-next-line\r\n    const {user,setUser}=useContext(UserContext)\r\n    const [showModal,setShowModal]=useState(false)\r\n    // tracking on which page we currently are\r\n    const [page, setPage] = useState(0);\r\n    // add loader refrence \r\n    const loader = useRef(null);\r\n    \r\n    const standalone=false\r\n\r\n    const handleNewDocument= async()=>{\r\n        await setShowModal(true)                                                                                                                                                        \r\n        console.log( showModal)\r\n    }\r\n\r\n\r\n    const handleCreateNew = async()=>{\r\n        const    newClinicModule={\r\n            selectedClinic:{},\r\n            show :'create'\r\n            }\r\n       await setState((prevstate)=>({...prevstate, ClinicModule:newClinicModule}))\r\n       //console.log(state)\r\n        \r\n\r\n    }\r\n    const handleRow= async(Clinic)=>{\r\n        //console.log(\"b4\",state)\r\n\r\n        //console.log(\"handlerow\",Clinic)\r\n\r\n        await setSelectedClinic(Clinic)\r\n\r\n        const    newClinicModule={\r\n            selectedClinic:Clinic,\r\n            show :'detail'\r\n        }\r\n       await setState((prevstate)=>({...prevstate, ClinicModule:newClinicModule}))\r\n       //console.log(state)\r\n       Clinic.show=!Clinic.show\r\n\r\n    }\r\n\r\n   const handleSearch=(val)=>{\r\n       const field='documentname'\r\n       console.log(val)\r\n       ClinicServ.find({query: {\r\n                [field]: {\r\n                    $regex:val,\r\n                    $options:'i'\r\n                   \r\n                },\r\n              // facility:user.currentEmployee.facilityDetail._id || \"\",\r\n               // locationType:\"Clinic\",\r\n               client:state.ClientModule.selectedClient._id,\r\n               $limit:10,\r\n                $sort: {\r\n                    name: 1\r\n                  }\r\n                    }}).then((res)=>{\r\n                console.log(res)\r\n               setFacilities(res.data)\r\n                setMessage(\" Clinic  fetched successfully\")\r\n                setSuccess(true) \r\n            })\r\n            .catch((err)=>{\r\n                console.log(err)\r\n                setMessage(\"Error fetching Clinic, probable network issues \"+ err )\r\n                setError(true)\r\n            })\r\n        }\r\n   \r\n    const getFacilities= async(page=0)=>{\r\n            /* const limit=20\r\n            alert(page) */\r\n            if (user.currentEmployee){\r\n            \r\n        const findClinic= await ClinicServ.find(\r\n                {query: {\r\n                    //locationType:\"Clinic\",\r\n                    //facility:user.currentEmployee.facilityDetail._id,\r\n                    client:state.ClientModule.selectedClient._id,\r\n                    $limit:20,\r\n                   /*  $skip:page*limit, */\r\n                    $sort: {\r\n                        createdAt: -1\r\n                    }\r\n                    }})\r\n            const total= findClinic.total\r\n            const ulimit=total*page\r\n           /*  if (total>(ulimit)){ //only load if we have not reached the total\r\n                alert(\"skip:\",ulimit )\r\n                console.log(\"skip:\",ulimit ) */\r\n            await setFacilities(findClinic.data)\r\n           /*  } */\r\n                }\r\n                else {\r\n                    if (user.stacker){\r\n                        const findClinic= await ClinicServ.find(\r\n                            {query: {\r\n                                client:state.ClientModule.selectedClient._id,\r\n                                    $limit:20,\r\n                                    $sort: {\r\n                                        createdAt: -1\r\n                                    }\r\n                                }})\r\n            \r\n                    await setFacilities(findClinic.data)\r\n\r\n                    }\r\n                }\r\n          /*   .then((res)=>{\r\n                console.log(res)\r\n                    setFacilities(res.data)\r\n                    setMessage(\" Clinic  fetched successfully\")\r\n                    setSuccess(true)\r\n                })\r\n                .catch((err)=>{\r\n                    setMessage(\"Error creating Clinic, probable network issues \"+ err )\r\n                    setError(true)\r\n                }) */\r\n            }\r\n            \r\n           /*  useEffect(() => {\r\n                setTimeout(() => {\r\n                    console.log(\"happy birthday\")\r\n                    //getFacilities(user)\r\n                }, 200);\r\n\r\n                return () => {\r\n                    \r\n\r\n                }\r\n            },[]) */\r\n\r\n            useEffect(() => {\r\n                getFacilities()\r\n                if (user){\r\n                    \r\n                }else{\r\n                    /* const localUser= localStorage.getItem(\"user\")\r\n                    const user1=JSON.parse(localUser)\r\n                    console.log(localUser)\r\n                    console.log(user1)\r\n                    fetchUser(user1)\r\n                    console.log(user)\r\n                    getFacilities(user) */\r\n                }\r\n                ClinicServ.on('created', (obj)=>getFacilities(page))\r\n                ClinicServ.on('updated', (obj)=>getFacilities(page))\r\n                ClinicServ.on('patched', (obj)=>getFacilities(page))\r\n                ClinicServ.on('removed', (obj)=>getFacilities(page))\r\n\r\n                /* var options = {\r\n                    root: null,\r\n                    rootMargin: \"20px\",\r\n                    threshold: 1.0\r\n                 }; */\r\n                // initialize IntersectionObserver\r\n                // and attaching to Load More div\r\n                /*  const observer = new IntersectionObserver(handleObserver, options);\r\n                 if (loader.current) {\r\n                    observer.observe(loader.current)\r\n                 } */\r\n                return () => {\r\n                \r\n                }\r\n            },[])\r\n           /*  useEffect(() => {\r\n                // here we simulate adding new posts to List\r\n                getFacilities()\r\n            }, [page]) */\r\n\r\n             // here we handle what happens when user scrolls to Load More div\r\n            // in this case we just update page variable\r\n                /* const handleObserver = (entities) => {\r\n                    const target = entities[0];\r\n                    if (target.isIntersecting) {   \r\n                        setPage((page) => page + 1) //load more \r\n                        \r\n                    }\r\n                } */\r\n\r\n    return (\r\n        <div>\r\n            <VideoConference/>\r\n            <div className=\"level\">\r\n                    <div className=\"level-left\">\r\n                        <div className=\"level-item\">\r\n                            <div className=\"field\">\r\n                                <p className=\"control has-icons-left  \">\r\n                                    <DebounceInput className=\"input is-small \" \r\n                                        type=\"text\" placeholder=\"Search documentation\"\r\n                                        minLength={3}\r\n                                        debounceTimeout={400}\r\n                                        onChange={(e)=>handleSearch(e.target.value)} />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                   {/*  <div className=\"level-item\"> <span className=\"is-size-6 has-text-weight-medium\">List of Clinics</span></div> */}\r\n                    <div className=\"level-right\">\r\n                { !standalone &&   <div className=\"level-item\"> \r\n                            <div className=\"level-item\"><div className=\"button is-success is-small\" onClick={handleNewDocument}>New</div></div>\r\n                        </div>}\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n                <div className=\" pullup \">\r\n                                <div className=\" is-fullwidth vscrollable pr-1\">\r\n                                   \r\n                                        {facilities.map((Clinic, i)=>(\r\n\r\n                                            <div key={Clinic._id}  onClick={()=>handleRow(Clinic)}   className={Clinic._id===(selectedClinic?._id||null)?\"is-selected\":\"\"}>\r\n                                               <div className=\"card mt-1 hovercard\">\r\n                                                    <header className=\"card-header\" onClick={(Clinic)=>Clinic.show=!Clinic.show}>\r\n                                                        <div className=\"card-header-title\">\r\n                                                        <div className=\"docdate\">{formatDistanceToNowStrict(new Date(Clinic.createdAt),{addSuffix: true})} <br/><span>{format(new Date(Clinic.createdAt),'dd-MM-yy')}</span></div> {Clinic.documentname} by {Clinic.createdByname} at {Clinic.location},{Clinic.facilityname} \r\n                                                        <p className=\"right ml-2 mr-0\">{Clinic.status} </p> \r\n                                                        </div>\r\n                                                       {/*  <button className=\"card-header-icon\" aria-label=\"more options\">\r\n                                                        <span className=\"icon\">\r\n                                                            <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\r\n                                                        </span>\r\n                                                        </button> */}\r\n                                                    </header>\r\n                                                    <div className={Clinic.show?\"card-content p-1\":\"card-content p-1 is-hidden\"}>\r\n                                                \r\n                                             \r\n                                                     {/* <div>{Clinic.client} </div> */}\r\n                                                \r\n                                               \r\n                                                 {/* <div>{JSON.stringify(Clinic.documentdetail,2,10)} </div> */}\r\n                                                 {\r\n                                                     Object.entries(Clinic.documentdetail).map(([keys,value],i)=>(\r\n                                                       <div className=\"field is-horizontal\"> \r\n                                                            <div className=\"field-label\"> \r\n                                                                <label className=\"label is-size-7\" key={i}>\r\n                                                                    {keys}:\r\n                                                                    </label>\r\n                                                            </div>\r\n                                                            <div className=\"field-body\"> \r\n                                                                <div className=\"field\" >\r\n                                                                    {value}   \r\n                                                                </div>  \r\n                                                            </div>                                                 \r\n                                                       </div>\r\n                                                     ))\r\n                                                 }\r\n                                                </div>\r\n                                                </div>                                           \r\n                                            </div>\r\n\r\n                                        ))}\r\n                                      {/* <!-- Add Ref to Load More div --> */}\r\n                                       {/*  <div className=\"loading\" ref={loader}>\r\n                                                <h2>Load More</h2>\r\n                                    </div> */}\r\n                                </div>\r\n                                    \r\n                </div> \r\n                <div className={`modal ${showModal?\"is-active\":\"\"}` }>\r\n                                    <div className=\"modal-background\"></div>\r\n                                    <div className=\"modal-card\">\r\n                                        <header className=\"modal-card-head\">\r\n                                        <p className=\"modal-card-title\">Choose Document Class</p>\r\n                                        <button className=\"delete\" aria-label=\"close\"  onClick={()=>setShowModal(false)}></button>\r\n                                        </header>\r\n                                        <section className=\"modal-card-body\">\r\n                                        <DocumentClassList standalone=\"true\" />\r\n                                        </section>\r\n                                        {/* <footer className=\"modal-card-foot\">\r\n                                        <button className=\"button is-success\">Save changes</button>\r\n                                        <button className=\"button\">Cancel</button>\r\n                                        </footer> */}\r\n                                    </div>\r\n                                </div>                     \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Clinic\\ClinicSetup.js",["139","140","141","142","143","144"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\EncounterMgt\\DocumentClass.js",["145","146","147","148","149"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\EncounterMgt\\Encounter.js",["150","151","152","153","154"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\EncounterMgt\\EncounterRight.js",["155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\App.js",["175","176"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\index.js",[],["177","178"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\context.js",[],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\feathers.js",["179","180"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Home.js",["181","182","183","184","185"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Login.js",["186","187","188"],"import React, {useState,useContext} from 'react'\r\nimport client from '../feathers'\r\nimport { useForm } from \"react-hook-form\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport {UserContext} from '../context'\r\n\r\nexport default function Login() {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const [error, setError] =useState(true)\r\n    const [errorMessage,setErrorMessage] = useState(\"\")\r\n    const userServ=client.service('/users')\r\n    const history = useHistory()\r\n    const {user,setUser} = useContext(UserContext)\r\n\r\n   \r\nconst onSubmit = (data,e) =>{\r\n        e.preventDefault();\r\n        setErrorMessage(\"\")\r\n        setError(false)\r\n           const  email=data.email\r\n           const password=data.password\r\n         \r\n          \r\n          client.authenticate({\r\n            strategy:'local',\r\n            email,\r\n            password\r\n        }).then(async (res)=>{\r\n                console.log(JSON.stringify(res.user))\r\n                e.target.reset();\r\n               await setUser(res.user)\r\n               console.log(user)\r\n               localStorage.setItem(\"user\",JSON.stringify(res.user))\r\n               history.push(\"/app\")\r\n\r\n            })\r\n            .catch((err)=>{\r\n                setErrorMessage(\"Error loggin in User, probable network issues \"+ err )\r\n                setError(true)\r\n            })\r\n\r\n      } \r\n\r\n    return (\r\n        <section className=\"section\">\r\n        <div className=\"container\">\r\n        <div className=\"columns is-centered\">\r\n        <div className=\"column is-4 \">\r\n        <div className=\"card v-centered\">\r\n            <div className=\"card-header\">\r\n                <p className=\"card-header-title\">\r\n                    Health Stack\r\n                </p>\r\n            </div>\r\n            <div className=\"card-content\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n           <div className=\"field\">\r\n            <p className=\"control has-icons-left has-icons-right\">\r\n                <input className=\"input\" ref={register({ required: true })}  name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n                  <span className=\"icon is-small is-left\">\r\n                     <i className=\"fas fa-envelope\"></i>\r\n                </span>\r\n                \r\n            </p>\r\n        </div>\r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n                <input className=\"input\" ref={register({ required: true })} name=\"password\" type=\"password\" placeholder=\"Password\"/>\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"fas fa-lock\"></i>\r\n                </span>\r\n            </p>\r\n        </div>\r\n        <div className=\"field\">\r\n            <p className=\"control\">\r\n                <button className=\"button is-success is-small\">\r\n                    Login\r\n                </button>\r\n            </p>\r\n        </div>\r\n        { error && <div className=\"message\"> {errorMessage}</div>}\r\n        </form>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    </section>\r\n    )\r\n}\r\n","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\FacilityModule.js",["189"],"import React from 'react'\r\nimport {Route, Switch,  useRouteMatch, Link, NavLink} from 'react-router-dom'\r\nimport CareTeam from './facility/CareTeam'\r\nimport Department from './facility/Department'\r\nimport DeptUnits from './facility/DeptUnits'\r\nimport FacilityHome from './facility/FacilityHome'\r\nimport Employee from './facility/Employee'\r\nimport Facility from './facility/Facility'\r\nimport HSModules from './facility/HSModules'\r\nimport Location from './facility/Location'\r\nimport Roaster from './facility/Roaster'\r\nimport Workspace from './facility/Workspace'\r\nimport Accessibility from './facility/Accessibility'\r\n\r\nexport default function FacilityModule() {\r\n    let { path, url } = useRouteMatch();\r\n    return (\r\n            <section className=\"section has-background-info remPad\">\r\n               {/*  <div className=\"\"> */}\r\n                    <nav className=\"navbar minHt z10 has-background-info\">\r\n                        <div className=\"container minHt \">\r\n                            <div className=\"navbar-brand minHt \">\r\n                                <div className=\"navbar-item \">\r\n                                    <span className=\"is-size-6 has-text-weight-medium\">Health Stack::Facility</span> \r\n                                </div>\r\n                            {/* <div className=\"navbar-item\">\r\n                                <img src=\"https://bulma.io/images/bulma-type-white.png\" alt=\"Logo\" />\r\n                            </div> */}\r\n                                <span className=\"navbar-burger\" data-target=\"navbarMenuHeroB\">\r\n                                    <span></span>\r\n                                    <span></span>\r\n                                    <span></span>\r\n                                </span>\r\n                            </div>\r\n                            <div id=\"navbarMenuHeroB\" className=\"navbar-menu\">\r\n                                <div className=\"navbar-end\">\r\n                                    <div className=\"navbar-item\">\r\n                                        <NavLink to={`${url}`}>Home Page</NavLink> \r\n                                    </div>\r\n                                    <div className=\"navbar-item\">\r\n                                        <NavLink to={`${url}/accessibility`}>User Access</NavLink>\r\n                                    </div>\r\n                                    <div className=\"navbar-item\">\r\n                                        <NavLink to={`${url}/careteam`}>Care Teams</NavLink>\r\n                                    </div>\r\n                                    <div className=\"navbar-item\">\r\n                                        <NavLink to={`${url}/department`}>Department</NavLink>\r\n                                    </div>\r\n                                    <div className=\"navbar-item\">\r\n                                        <NavLink to={`${url}/dept-unit`}>Department Units</NavLink>\r\n                                    </div>\r\n                                    <div className=\"navbar-item\">\r\n                                        <NavLink to={`${url}/employees`}>Employees</NavLink>\r\n                                    </div>\r\n                                    <div className=\"navbar-item\">\r\n                                        <NavLink to={`${url}/facility`}>Facility</NavLink>\r\n                                    </div>\r\n                                    <div className=\"navbar-item\">\r\n                                        <NavLink to={`${url}/hsmodules`}>Modules</NavLink>\r\n                                    </div>\r\n                                    <div className=\"navbar-item\">\r\n                                        <NavLink to={`${url}/location`}>Locations</NavLink>\r\n                                    </div>\r\n                                    <div className=\"navbar-item\">\r\n                                        <NavLink to={`${url}/roaster`}>Roaster</NavLink>\r\n                                    </div>\r\n                                    <div className=\"navbar-item\">\r\n                                        <NavLink to={`${url}/workspace`}>Workspace</NavLink>\r\n                                    </div>\r\n                                    \r\n                                {/* <span className=\"navbar-item\">\r\n                                <div className=\"button is-info is-inverted\">\r\n                                    <span className=\"icon\">\r\n                                    <i className=\"fab fa-github\"></i>\r\n                                    </span>\r\n                                    <span>Download</span>\r\n                                </div>\r\n                                </span> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n               {/*  </div> */}\r\n                \r\n                {/* <div className=\"section\"> */}\r\n                {/* <div className=\"container mvUp \" > */}\r\n                       \r\n                    <Switch>\r\n                        <Route path={path} exact>\r\n                            <FacilityHome />\r\n                        </Route>\r\n                        <Route path={`${path}/accessibility`} exact >\r\n                            <Accessibility />\r\n                        </Route>\r\n                      \r\n                        <Route path={`${path}/careteam`} exact>\r\n                            <CareTeam />\r\n                        </Route>\r\n                        <Route path={`${path}/department`} exact>\r\n                            <Department/>\r\n                        </Route>\r\n                        <Route path={`${path}/dept-unit`} exact>\r\n                            <DeptUnits />\r\n                        </Route>\r\n                        <Route path={`${path}/employees`} >\r\n                            <Employee />\r\n                        </Route>\r\n                        <Route path={`${path}/facility`} exact >\r\n                            <Facility />\r\n                        </Route>\r\n                        <Route path={`${path}/hsmodules`} exact>\r\n                            <HSModules />\r\n                        </Route>\r\n                        <Route path={`${path}/location`} exact>\r\n                            <Location/>\r\n                        </Route>\r\n                        <Route path={`${path}/roaster`} exact>\r\n                            <Roaster/>\r\n                        </Route>\r\n                        <Route path={`${path}/Workspace`} exact>\r\n                            <Workspace />\r\n                        </Route>\r\n\r\n                    </Switch>\r\n                  \r\n\r\n                \r\n            </section>\r\n    )\r\n}\r\n","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\Department.js",[],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\FacilityHome.js",[],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\Roaster.js",[],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\Accessibility.js",[],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\Facility.js",["190"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\inventory\\InventoryStore.js",["191","192","193","194","195","196","197","198"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\inventory\\InventoryReport.js",[],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\ClientMgt\\Patient.js",["199","200","201","202","203","204","205","206","207"],"import React, {useState,useContext, useEffect,useRef} from 'react'\r\nimport client from '../../feathers'\r\nimport {DebounceInput} from 'react-debounce-input';\r\nimport { useForm } from \"react-hook-form\";\r\n//import {useHistory} from 'react-router-dom'\r\nimport {UserContext,ObjectContext} from '../../context'\r\nimport {toast} from 'bulma-toast'\r\nimport { formatDistanceToNowStrict } from 'date-fns'\r\n// eslint-disable-next-line\r\nconst searchfacility={};\r\n\r\n\r\nexport default function Client() {\r\n    const {state}=useContext(ObjectContext) //,setState\r\n    // eslint-disable-next-line\r\n    const [selectedClient,setSelectedClient]=useState()\r\n    //const [showState,setShowState]=useState() //create|modify|detail\r\n    \r\n    return(\r\n        <section className= \"section remPadTop\">\r\n            <div className=\"columns \">\r\n            <div className=\"column is-6 \">\r\n                <ClientList />\r\n                </div>\r\n            <div className=\"column is-6 \">\r\n                {(state.ClientModule.show ==='create')&&<ClientCreate />}\r\n                {(state.ClientModule.show ==='detail')&&<ClientDetail  />}\r\n                {(state.ClientModule.show ==='modify')&&<ClientModify Client={selectedClient} />}\r\n               \r\n            </div>\r\n\r\n            </div>                            \r\n            </section>\r\n       \r\n    )\r\n    \r\n}\r\n\r\nexport function ClientCreate(){\r\n    const { register, handleSubmit,setValue} = useForm(); //, watch, errors, reset \r\n    const [error, setError] =useState(false)\r\n    const [success, setSuccess] =useState(false)\r\n    const [message,setMessage] = useState(\"\")\r\n    // eslint-disable-next-line\r\n    const [facility,setFacility] = useState()\r\n    const ClientServ=client.service('client')\r\n    //const history = useHistory()\r\n    const {user} = useContext(UserContext) //,setUser\r\n    // eslint-disable-next-line\r\n    const [currentUser,setCurrentUser] = useState()\r\n\r\n\r\n\r\n    const getSearchfacility=(obj)=>{\r\n        setValue(\"facility\", obj._id,  {\r\n            shouldValidate: true,\r\n            shouldDirty: true\r\n        })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        setCurrentUser(user)\r\n        //console.log(currentUser)\r\n        return () => {\r\n        \r\n        }\r\n    }, [user])\r\n\r\n  //check user for facility or get list of facility  \r\n    useEffect(()=>{\r\n        //setFacility(user.activeClient.FacilityId)//\r\n      if (!user.stacker){\r\n       /*    console.log(currentUser)\r\n        setValue(\"facility\", user.currentEmployee.facilityDetail._id,  {\r\n            shouldValidate: true,\r\n            shouldDirty: true\r\n        })  */\r\n      }\r\n    })\r\n\r\n    const onSubmit = (data,e) =>{\r\n        e.preventDefault();\r\n        setMessage(\"\")\r\n        setError(false)\r\n        setSuccess(false)\r\n         // data.createdby=user._id\r\n          console.log(data);\r\n          if (user.currentEmployee){\r\n          data.facility=user.currentEmployee.facilityDetail._id  // or from facility dropdown\r\n          }\r\n        ClientServ.create(data)\r\n        .then((res)=>{\r\n                //console.log(JSON.stringify(res))\r\n                e.target.reset();\r\n               /*  setMessage(\"Created Client successfully\") */\r\n                setSuccess(true)\r\n                toast({\r\n                    message: 'Client created succesfully',\r\n                    type: 'is-success',\r\n                    dismissible: true,\r\n                    pauseOnHover: true,\r\n                  })\r\n                  setSuccess(false)\r\n            })\r\n            .catch((err)=>{\r\n                toast({\r\n                    message: 'Error creating Client ' + err,\r\n                    type: 'is-danger',\r\n                    dismissible: true,\r\n                    pauseOnHover: true,\r\n                  })\r\n            })\r\n\r\n      } \r\n\r\n    return (\r\n        <>\r\n            <div className=\"card \">\r\n            <div className=\"card-header\">\r\n                <p className=\"card-header-title\">\r\n                    Create Client\r\n                </p>\r\n            </div>\r\n            <div className=\"card-content vscrollable\">\r\n            <p className=\" is-small\">\r\n                    Kindly search Client list before creating new Clients!\r\n                </p>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <p className=\"control has-icons-left has-icons-right\">\r\n                            <input className=\"input is-small\" ref={register()}  name=\"firstname\" type=\"text\" placeholder=\"First Name\" />\r\n                            <span className=\"icon is-small is-left\">\r\n                                <i className=\"fas fa-hospital\"></i>\r\n                            </span>                    \r\n                        </p>\r\n                    </div>\r\n                \r\n                \r\n                    <div className=\"field\">\r\n                        <p className=\"control has-icons-left has-icons-right\">\r\n                        <input className=\"input is-small\" ref={register()}  name=\"middlename\" type=\"text\" placeholder=\"Middle Name\" />\r\n                        <span className=\"icon is-small is-left\">\r\n                            <i className=\"fas fa-map-signs\"></i>\r\n                        </span>\r\n                        \r\n                        </p>\r\n                    </div>\r\n              \r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                        <input className=\"input is-small\" ref={register()} name=\"lastname\" type=\"text\" placeholder=\"Last Name\"/>\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\" fas fa-user-md \"></i>\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n            </div>  \r\n        </div>\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <input className=\"input is-small\" ref={register()} name=\"dob\" type=\"text\" placeholder=\"Date of Birth\"  />\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> \r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <input className=\"input is-small\" ref={register()} name=\"gender\" type=\"text\" placeholder=\"Gender\"  />\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> \r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <input className=\"input is-small\" ref={register()} name=\"maritalstatus\" type=\"text\" placeholder=\"Marital Status\"  />\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> \r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <input className=\"input is-small\" ref={register()} name=\"mrn\" type=\"text\" placeholder=\"Medical Records Number\"  />\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> \r\n            </div>\r\n        </div>\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <input className=\"input is-small\" ref={register()} name=\"religion\" type=\"text\" placeholder=\"Religion\"  />\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> \r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <input className=\"input is-small\" ref={register()} name=\"profession\" type=\"text\" placeholder=\"Profession\"  />\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> \r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                        <input className=\"input is-small\" ref={register({ required: true })} name=\"phone\" type=\"text\" placeholder=\" Phone No\"/>\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-phone-alt\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <input className=\"input is-small\" ref={register({ required: true })} name=\"email\" type=\"email\" placeholder=\"Email\"  />\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> \r\n            </div>\r\n        </div>\r\n   \r\n            <div className=\"field\">\r\n                <p className=\"control has-icons-left\">\r\n                \r\n                    <input className=\"input is-small\" ref={register()} name=\"address\" type=\"text\" placeholder=\"Residential Address\"  />\r\n                    <span className=\"icon is-small is-left\">\r\n                    <i className=\"fas fa-envelope\"></i>\r\n                    </span>\r\n                </p>\r\n            </div> \r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <input className=\"input is-small\" ref={register()} name=\"city\" type=\"text\" placeholder=\"Town/City\"  />\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> \r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <input className=\"input is-small\" ref={register()} name=\"lga\" type=\"text\" placeholder=\"Local Govt Area\"  />\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> \r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <input className=\"input is-small\" ref={register()} name=\"state\" type=\"text\" placeholder=\"State\"  />\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> \r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <input className=\"input is-small\" ref={register()} name=\"country\" type=\"text\" placeholder=\"Country\"  />\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div> \r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <p className=\"control has-icons-left\">\r\n                        \r\n                            <input className=\"input is-small\" ref={register()} name=\"bloodgroup\" type=\"text\" placeholder=\"Blood Group\"  />\r\n                            <span className=\"icon is-small is-left\">\r\n                            <i className=\"fas fa-envelope\"></i>\r\n                            </span>\r\n                        </p>\r\n                    </div> \r\n                    <div className=\"field\">\r\n                        <p className=\"control has-icons-left\">\r\n                        \r\n                            <input className=\"input is-small\" ref={register()} name=\"genotype\" type=\"text\" placeholder=\"Genotype\"  />\r\n                            <span className=\"icon is-small is-left\">\r\n                            <i className=\"fas fa-envelope\"></i>\r\n                            </span>\r\n                        </p>\r\n                    </div> \r\n                    <div className=\"field\">\r\n                        <p className=\"control has-icons-left\">\r\n                        \r\n                            <input className=\"input is-small\" ref={register()} name=\"disabilities\" type=\"text\" placeholder=\"Disabilities\"  />\r\n                            <span className=\"icon is-small is-left\">\r\n                            <i className=\"fas fa-envelope\"></i>\r\n                            </span>\r\n                        </p>\r\n                    </div> \r\n                </div> \r\n            </div>  \r\n            \r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-body\">\r\n\r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <input className=\"input is-small\" ref={register()} name=\"allergies\" type=\"text\" placeholder=\"Allergies\"  />\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> \r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <input className=\"input is-small\" ref={register()} name=\"comorbidities\" type=\"text\" placeholder=\"Co-mobidities\"  />\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> \r\n            </div>\r\n        </div>\r\n            <div className=\"field\">\r\n                <p className=\"control has-icons-left\">\r\n                \r\n                    <input className=\"input is-small\" ref={register()} name=\"clientTags\" type=\"text\" placeholder=\"Tags\"  />\r\n                    <span className=\"icon is-small is-left\">\r\n                    <i className=\"fas fa-envelope\"></i>\r\n                    </span>\r\n                </p>\r\n            </div> \r\n            <div className=\"field\">\r\n                <p className=\"control has-icons-left\">\r\n                    <input className=\"input is-small\" ref={register()} name=\"specificDetails\" type=\"text\" placeholder=\"Specific Details about patient\"  />\r\n                    <span className=\"icon is-small is-left\">\r\n                    <i className=\"fas fa-envelope\"></i>\r\n                    </span>\r\n                </p>\r\n            </div> \r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                        <input className=\"input is-small\" ref={register()} name=\"nok_name\" type=\"text\" placeholder=\"Next of Kin Full Name\"/>\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-clinic-medical\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                        <input className=\"input is-small\" ref={register()} name=\"nok_phoneno\" type=\"text\" placeholder=\"Next of Kin Phone Number\"/>\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-clinic-medical\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> \r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <input className=\"input is-small\" ref={register()} name=\"nok_email\" type=\"email\" placeholder=\"Next of Kin Email\"  />\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <input className=\"input is-small\" ref={register()} name=\"nok_relationship\" type=\"text\" placeholder=\"Next of Kin Relationship\"  />\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div> \r\n        <div className=\"field  is-grouped mt-2\" >\r\n                <p className=\"control\">\r\n                    <button type=\"submit\" className=\"button is-success is-small\" >\r\n                        Save\r\n                    </button>\r\n                </p>\r\n                <p className=\"control\">\r\n                    <button className=\"button is-warning is-small\" onClick={(e)=>e.target.reset()}>\r\n                        Cancel\r\n                    </button>\r\n                </p>\r\n               {/*  <p className=\"control\">\r\n                    <button className=\"button is-danger is-small\" onClick={()=>handleDelete()} type=\"delete\">\r\n                       Delete\r\n                    </button>\r\n                </p> */}\r\n            </div>\r\n     \r\n            </form>\r\n            </div>\r\n            </div>\r\n                 {/*  <div className=\"field\"  style={ !user.stacker?{display:\"none\"}:{}} >\r\n                <InputSearch  getSearchfacility={getSearchfacility} clear={success} /> \r\n                <p className=\"control has-icons-left \" style={{display:\"none\"}}>\r\n                    <input className=\"input is-small\" ref={register ({ required: true }) } name=\"facility\" type=\"text\" placeholder=\"Facility\" />\r\n                    <span className=\"icon is-small is-left\">\r\n                    <i className=\"fas  fa-map-marker-alt\"></i>\r\n                    </span>\r\n                </p>\r\n            </div> */}\r\n         {/*   <div className=\"field\">\r\n                <div className=\"control has-icons-left\">\r\n                    <div className=\"dropdown \">\r\n                        <div className=\"dropdown-trigger\">\r\n                            <input className=\"input is-small\" ref={register({ required: true })} name=\"department\" type=\"text\" placeholder=\"Department\"/>\r\n                            <span className=\"icon is-small is-left\">\r\n                            <i className=\"fas fa-hospital-symbol\"></i>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"dropdown-menu\">\r\n                            <div className=\"dropdown-content\">\r\n                                <div className=\"dropdown-item\">\r\n                                    simpa\r\n                                </div>\r\n                                <div className=\"dropdown-item is-active\">\r\n                                    simpa 2\r\n                                </div>\r\n                                <div className=\"dropdown-item\">\r\n                                    simpa 3\r\n                                </div>\r\n                                <div className=\"dropdown-item\">\r\n                                    simpa 4\r\n                                </div>\r\n                            </div>\r\n                        </div>   \r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n        </>\r\n    )\r\n   \r\n}\r\n\r\nexport function ClientList(){\r\n   // const { register, handleSubmit, watch, errors } = useForm();\r\n    // eslint-disable-next-line\r\n    const [error, setError] =useState(false)\r\n     // eslint-disable-next-line\r\n    const [success, setSuccess] =useState(false)\r\n     // eslint-disable-next-line\r\n   const [message, setMessage] = useState(\"\") \r\n    const ClientServ=client.service('client')\r\n    //const history = useHistory()\r\n   // const {user,setUser} = useContext(UserContext)\r\n    const [facilities,setFacilities]=useState([])\r\n     // eslint-disable-next-line\r\n   const [selectedClient, setSelectedClient]=useState() //\r\n    // eslint-disable-next-line\r\n    const {state,setState}=useContext(ObjectContext)\r\n    // eslint-disable-next-line\r\n    const {user,setUser}=useContext(UserContext)\r\n\r\n\r\n\r\n    const handleCreateNew = async()=>{\r\n        const newClientModule={\r\n            selectedClient:{},\r\n            show :'create'\r\n            }\r\n        await setState((prevstate)=>({...prevstate, ClientModule:newClientModule}))\r\n       //console.log(state)\r\n        } \r\n\r\n    \r\n    const handleRow= async(Client)=>{\r\n        await setSelectedClient(Client)\r\n        const    newClientModule={\r\n            selectedClient:Client,\r\n            show :'detail'\r\n        }\r\n       await setState((prevstate)=>({...prevstate, ClientModule:newClientModule}))\r\n    }\r\n\r\n   const handleSearch=(val)=>{\r\n       const field='firstname'\r\n       console.log(val)\r\n       ClientServ.find({query: {\r\n                $or:[\r\n                    { firstname: {\r\n                        $regex:val,\r\n                        $options:'i' \r\n                    }},\r\n                    { lastname: {\r\n                        $regex:val,\r\n                        $options:'i' \r\n                    }},\r\n                    { middlename: {\r\n                        $regex:val,\r\n                        $options:'i' \r\n                    }},\r\n                    { phone: {\r\n                        $regex:val,\r\n                        $options:'i' \r\n                    }},\r\n                    { clientTags: {\r\n                        $regex:val,\r\n                        $options:'i' \r\n                    }},\r\n                    { mrn: {\r\n                        $regex:val,\r\n                        $options:'i' \r\n                    }},\r\n                    { specificDetails: {\r\n                        $regex:val,\r\n                        $options:'i' \r\n                    }},\r\n                ],\r\n              \r\n              // facility:user.currentEmployee.facilityDetail._id || \"\",\r\n                $limit:10,\r\n                $sort: {\r\n                    createdAt: -1\r\n                  }\r\n                    }}).then((res)=>{\r\n                console.log(res)\r\n               setFacilities(res.data)\r\n                setMessage(\" Client  fetched successfully\")\r\n                setSuccess(true) \r\n            })\r\n            .catch((err)=>{\r\n                console.log(err)\r\n                setMessage(\"Error fetching Client, probable network issues \"+ err )\r\n                setError(true)\r\n            })\r\n        }\r\n   \r\n    const getFacilities= async()=>{\r\n            if (user.currentEmployee){      \r\n            const findClient= await ClientServ.find(\r\n                {query: {\r\n                   // facility:user.currentEmployee.facilityDetail._id,\r\n                    $limit:20,\r\n                    $sort: {\r\n                        createdAt: -1\r\n                    }\r\n                    }})\r\n\r\n         await setFacilities(findClient.data)\r\n                }\r\n                else {\r\n                    if (user.stacker){\r\n                        const findClient= await ClientServ.find(\r\n                            {query: {\r\n                                \r\n                                $limit:20,\r\n                                $sort: {\r\n                                    createdAt: -1\r\n                                }\r\n                                }})\r\n            \r\n                    await setFacilities(findClient.data)\r\n\r\n                    }\r\n                }\r\n          /*   .then((res)=>{\r\n                console.log(res)\r\n                    setFacilities(res.data)\r\n                    setMessage(\" Client  fetched successfully\")\r\n                    setSuccess(true)\r\n                })\r\n                .catch((err)=>{\r\n                    setMessage(\"Error creating Client, probable network issues \"+ err )\r\n                    setError(true)\r\n                }) */\r\n            }\r\n            \r\n    /* useEffect(() => {\r\n                setTimeout(() => {\r\n                    console.log(\"happy birthday\")\r\n                    //getFacilities(user)\r\n                }, 200);\r\n\r\n                return () => {\r\n                    \r\n\r\n                }\r\n            },[]) */\r\n\r\n    useEffect(() => {\r\n               \r\n                if (user){\r\n                    getFacilities()\r\n                }else{\r\n                    /* const localUser= localStorage.getItem(\"user\")\r\n                    const user1=JSON.parse(localUser)\r\n                    console.log(localUser)\r\n                    console.log(user1)\r\n                    fetchUser(user1)\r\n                    console.log(user)\r\n                    getFacilities(user) */\r\n                }\r\n                ClientServ.on('created', (obj)=>getFacilities())\r\n                ClientServ.on('updated', (obj)=>getFacilities())\r\n                ClientServ.on('patched', (obj)=>getFacilities())\r\n                ClientServ.on('removed', (obj)=>getFacilities())\r\n                return () => {\r\n                \r\n                }\r\n            },[])\r\n\r\n\r\n    //todo: pagination and vertical scroll bar\r\n\r\n    return(\r\n        <>\r\n           {user?( <>  \r\n                <div className=\"level\">\r\n                    <div className=\"level-left\">\r\n                        <div className=\"level-item\">\r\n                            <div className=\"field\">\r\n                                <p className=\"control has-icons-left  \">\r\n                                    <DebounceInput className=\"input is-small \" \r\n                                        type=\"text\" placeholder=\"Search Clients\"\r\n                                        minLength={3}\r\n                                        debounceTimeout={400}\r\n                                        onChange={(e)=>handleSearch(e.target.value)} />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"level-item\"> <span className=\"is-size-6 has-text-weight-medium\">List of Clients </span></div>\r\n                    <div className=\"level-right\">\r\n                        <div className=\"level-item\"> \r\n                            <div className=\"level-item\"><div className=\"button is-success is-small\" onClick={handleCreateNew}>New</div></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"table-container pullup \">\r\n                                <table className=\"table is-striped is-narrow is-hoverable is-fullwidth is-scrollable \">\r\n                                    <thead>\r\n                                        <tr>\r\n                                        <th><abbr title=\"Serial No\">S/No</abbr></th>\r\n                                        <th>First Name</th>\r\n                                        <th><abbr title=\"Middle Name\">Middle Name</abbr></th>\r\n                                       <th><abbr title=\"Last Name\">Last Name</abbr></th>\r\n                                       <th><abbr title=\"Age\">Age</abbr></th>\r\n                                        <th><abbr title=\"Gender\">Gender</abbr></th> \r\n                                        <th><abbr title=\"Phone\">Phone</abbr></th>\r\n                                        <th><abbr title=\"Email\">Email</abbr></th>\r\n                                        <th><abbr title=\"Tags\">Tags</abbr></th>\r\n                                        <th><abbr title=\"Actions\">Actions</abbr></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tfoot>\r\n                                        \r\n                                    </tfoot>\r\n                                    <tbody>\r\n                                        {facilities.map((Client, i)=>(\r\n\r\n                                            <tr key={Client._id} onClick={()=>handleRow(Client)}  className={Client._id===(selectedClient?._id||null)?\"is-selected\":\"\"}>\r\n                                            <th>{i+1}</th>\r\n                                            <th>{Client.firstname}</th>\r\n                                            <td>{Client.middlename}</td>\r\n                                           < td>{Client.lastname}</td>\r\n                                           <td>{formatDistanceToNowStrict(new Date(Client.dob))}</td>\r\n                                            <td>{Client.gender}</td>\r\n                                             <td>{Client.phone}</td>\r\n                                            <td>{Client.email}</td>\r\n                                            <td>{Client.clientTags}</td>\r\n                                            <td><span   className=\"showAction\"  >...</span></td>\r\n                                           \r\n                                            </tr>\r\n\r\n                                        ))}\r\n                                    </tbody>\r\n                                    </table>\r\n                                    \r\n                </div>              \r\n            </>):<div>loading</div>}\r\n            </>\r\n              \r\n    )\r\n    }\r\n\r\n\r\n\r\nexport function ClientDetail(){\r\n    //const { register, handleSubmit, watch, setValue } = useForm(); //errors,\r\n     // eslint-disable-next-line\r\n    const [error, setError] =useState(false) //, \r\n    //const [success, setSuccess] =useState(false)\r\n     // eslint-disable-next-line\r\n    const [message, setMessage] = useState(\"\") //,\r\n    //const ClientServ=client.service('/Client')\r\n    //const history = useHistory()\r\n    //const {user,setUser} = useContext(UserContext)\r\n    const {state,setState} = useContext(ObjectContext)\r\n\r\n   \r\n\r\n   const Client =state.ClientModule.selectedClient \r\n    const client=Client\r\n    const handleEdit= async()=>{\r\n        const    newClientModule={\r\n            selectedClient:Client,\r\n            show :'modify'\r\n        }\r\n       await setState((prevstate)=>({...prevstate, ClientModule:newClientModule}))\r\n       //console.log(state)\r\n       \r\n    }\r\n \r\n    return (\r\n        <>\r\n        <div className=\"card \">\r\n            <div className=\"card-header\">\r\n                <p className=\"card-header-title\">\r\n                    Client Details\r\n                </p>\r\n            </div>\r\n            <div className=\"card-content vscrollable\">\r\n           \r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-body\">\r\n                {Client.firstname &&  <div className=\"field\">\r\n                        <p className=\"control has-icons-left has-icons-right\">\r\n                            <label className=\"label is-size-7 my-0 \"   name=\"firstname\" type=\"text\">First Name </label><label className=\"is-size-7 my-0 \">{Client.firstname }</label>\r\n                            <span className=\"icon is-small is-left\">\r\n                                <i className=\"nop-hospital\"></i>\r\n                            </span>                    \r\n                        </p>\r\n                    </div>}\r\n\r\n\r\n                    {Client.middlename &&  <div className=\"field\">\r\n                        <p className=\"control has-icons-left has-icons-right\">\r\n                        <label className=\"label is-size-7 my-0\"   name=\"middlename\" type=\"text\"> Middle Name </label><label className=\"is-size-7 my-0\">{Client.middlename }</label>\r\n                        <span className=\"icon is-small is-left\">\r\n                            <i className=\"nop-map-signs\"></i>\r\n                        </span>\r\n                        \r\n                        </p>\r\n                    </div>}\r\n             {Client.lastname &&\r\n                <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                        <label className=\"label is-size-7 my-0\"  name=\"lastname\" type=\"text\">Last Name</label><label className=\"is-size-7 my-0\">{Client.lastname }</label>\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\" nop-user-md \"></i>\r\n                        </span>\r\n                    </p>\r\n                </div>}\r\n                </div>  \r\n                </div>\r\n                <div className=\"field is-horizontal\">\r\n                <div className=\"field-body\">\r\n                {Client.dob &&<div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <label className=\"label is-size-7 my-0\"  name=\"dob\" type=\"text\">Date of Birth </label><label className=\"is-size-7 my-0\">{ new Date(Client.dob).toLocaleDateString('en-GB')}</label>\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"nop-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> }\r\n                {Client.gender &&<div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <label className=\"label is-size-7 my-0\"  name=\"gender\" type=\"text\">Gender </label><label className=\"is-size-7 my-0\">{Client.gender }</label>\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"nop-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> }\r\n                {Client.maritalstatus && <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <label className=\"label is-size-7 my-0\"  name=\"maritalstatus\" type=\"text\">Marital Status </label><label className=\"is-size-7 my-0\">{Client.maritalstatus }</label>\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"nop-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> }\r\n                {Client.mrn && <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <label className=\"label is-size-7 my-0\"  name=\"mrn\" type=\"text\">Medical Records Number  </label><label className=\"is-size-7 my-0\">{Client.mrn }</label>\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"nop-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> }\r\n                </div>\r\n                </div>\r\n                <div className=\"field is-horizontal\">\r\n                    <div className=\"field-body\">\r\n                    {Client.religion && <div className=\"field\">\r\n                        <p className=\"control has-icons-left\">\r\n                        \r\n                            <label className=\"label is-size-7 my-0\"  name=\"religion\" type=\"text\">Religion  </label><label className=\"is-size-7 my-0\">{Client.religion }</label>\r\n                            <span className=\"icon is-small is-left\">\r\n                            <i className=\"nop-envelope\"></i>\r\n                            </span>\r\n                        </p>\r\n                    </div> }\r\n                    {Client.profession &&  <div className=\"field\">\r\n                        <p className=\"control has-icons-left\">\r\n                        \r\n                            <label className=\"label is-size-7 my-0\"  name=\"profession\" type=\"text\">Profession  </label><label className=\"is-size-7 my-0\">{Client.profession }</label>\r\n                            <span className=\"icon is-small is-left\">\r\n                            <i className=\"nop-envelope\"></i>\r\n                            </span>\r\n                        </p>\r\n                    </div> }\r\n                    {Client.phone &&<div className=\"field\">\r\n                        <p className=\"control has-icons-left\">\r\n                            <label className=\"label is-size-7 my-0\"  name=\"phone\" type=\"text\"> Phone No</label><label className=\"is-size-7 my-0\">{Client.phone }</label>\r\n                            <span className=\"icon is-small is-left\">\r\n                            <i className=\"nop-phone-alt\"></i>\r\n                            </span>\r\n                        </p>\r\n                    </div>}\r\n\r\n                    {Client.email && <div className=\"field\">\r\n                        <p className=\"control has-icons-left\">\r\n                        \r\n                            <label className=\"label is-size-7 my-0\"  name=\"email\" type=\"email\">Email  </label><label className=\"is-size-7 my-0\">{Client.email }</label>\r\n                            <span className=\"icon is-small is-left\">\r\n                            <i className=\"nop-envelope\"></i>\r\n                            </span>\r\n                        </p>\r\n                    </div> }\r\n                    </div>\r\n                </div>\r\n\r\n                {Client.address &&<div className=\"field\">\r\n                <p className=\"control has-icons-left\">\r\n\r\n                    <label className=\"label is-size-7 my-0\"  name=\"address\" type=\"text\">Residential Address  </label><label className=\"is-size-7 my-0\">{Client.address }</label>\r\n                    <span className=\"icon is-small is-left\">\r\n                    <i className=\"nop-envelope\"></i>\r\n                    </span>\r\n                </p>\r\n                </div>} \r\n                <div className=\"field is-horizontal\">\r\n                    <div className=\"field-body\">\r\n                        {Client.city && <div className=\"field\">\r\n                            <p className=\"control has-icons-left\">\r\n                            \r\n                                <label className=\"label is-size-7 my-0\"  name=\"city\" type=\"text\">Town/City  </label><label className=\"is-size-7 my-0\">{Client.city }</label>\r\n                                <span className=\"icon is-small is-left\">\r\n                                <i className=\"nop-envelope\"></i>\r\n                                </span>\r\n                            </p>\r\n                        </div> }\r\n                        {Client.lga && <div className=\"field\">\r\n                            <p className=\"control has-icons-left\">\r\n                            \r\n                                <label className=\"label is-size-7 my-0\"  name=\"lga\" type=\"text\">Local Govt Area  </label><label className=\"is-size-7 my-0\">{Client.lga }</label>\r\n                                <span className=\"icon is-small is-left\">\r\n                                <i className=\"nop-envelope\"></i>\r\n                                </span>\r\n                            </p>\r\n                        </div> }\r\n                        {Client.state && <div className=\"field\">\r\n                            <p className=\"control has-icons-left\">\r\n                                <label className=\"label is-size-7 my-0\"  name=\"state\" type=\"text\">State  </label><label className=\"is-size-7 my-0\">{Client.state }</label>\r\n                                <span className=\"icon is-small is-left\">\r\n                                <i className=\"nop-envelope\"></i>\r\n                                </span>\r\n                            </p>\r\n                        </div> }\r\n                        {Client.country &&<div className=\"field\">\r\n                        <p className=\"control has-icons-left\">\r\n                        \r\n                            <label className=\"label is-size-7 my-0\"  name=\"country\" type=\"text\">Country  </label><label className=\"is-size-7 my-0\">{Client.country }</label>\r\n                            <span className=\"icon is-small is-left\">\r\n                            <i className=\"nop-envelope\"></i>\r\n                            </span>\r\n                        </p>\r\n                    </div>}\r\n                    </div>\r\n                </div> \r\n                <div className=\"field is-horizontal\">\r\n                <div className=\"field-body\">\r\n                     {Client.bloodgroup &&  <div className=\"field\">\r\n                        <p className=\"control has-icons-left\">\r\n                        \r\n                            <label className=\"label is-size-7 my-0\"  name=\"bloodgroup\" type=\"text\">Blood Group </label><label className=\"is-size-7 my-0\">{Client.bloodgroup }</label>\r\n                            <span className=\"icon is-small is-left\">\r\n                            <i className=\"nop-envelope\"></i>\r\n                            </span>\r\n                        </p>\r\n                    </div>}\r\n                   \r\n                    {Client.genotype && <div className=\"field\">\r\n                        <p className=\"control has-icons-left\">\r\n                        \r\n                            <label className=\"label is-size-7 my-0\"  name=\"genotype\" type=\"text\">Genotype  </label><label className=\"is-size-7 my-0\">{Client.genotype }</label>\r\n                            <span className=\"icon is-small is-left\">\r\n                            <i className=\"nop-envelope\"></i>\r\n                            </span>\r\n                        </p>\r\n                    </div> }\r\n                    {Client.disabilities && <div className=\"field\">\r\n                        <p className=\"control has-icons-left\">\r\n                        \r\n                            <label className=\"label is-size-7 my-0\"  name=\"disabilities\" type=\"text\">Disabilities  </label><label className=\"is-size-7 my-0\">{Client.disabilities }</label>\r\n                            <span className=\"icon is-small is-left\">\r\n                            <i className=\"nop-envelope\"></i>\r\n                            </span>\r\n                        </p>\r\n                    </div> }\r\n                </div> \r\n                </div>  \r\n\r\n                <div className=\"field is-horizontal\">\r\n                <div className=\"field-body\">\r\n\r\n                {Client.allergies && <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <label className=\"label is-size-7 my-0\"  name=\"allergies\" type=\"text\">Allergies  </label><label className=\"is-size-7 my-0\">{Client.allergies }</label>\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"nop-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> }\r\n                {Client.comorbidities && <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <label className=\"label is-size-7 my-0\"  name=\"comorbidities\" type=\"text\">Co-mobidities  </label><label className=\"is-size-7 my-0\">{Client.comorbidities }</label>\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"nop-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> }\r\n                </div>\r\n                </div>\r\n               {Client.clientTags && <div className=\"field\">\r\n                <p className=\"control has-icons-left\">\r\n\r\n                    <label className=\"label is-size-7 my-0\"  name=\"clientTags\" type=\"text\">Tags </label><label className=\"is-size-7 my-0\">{Client.clientTags }</label>\r\n                    <span className=\"icon is-small is-left\">\r\n                    <i className=\"nop-envelope\"></i>\r\n                    </span>\r\n                </p>\r\n                </div> }\r\n                {Client.specificDetails && <div className=\"field\">\r\n                <p className=\"control has-icons-left\">\r\n                    <label className=\"label is-size-7 my-0\"  name=\"specificDetails\" type=\"text\">Specific Details about Client </label><label className=\"is-size-7 my-0\">{Client.specificDetails }</label>\r\n                    <span className=\"icon is-small is-left\">\r\n                    <i className=\"nop-envelope\"></i>\r\n                    </span>\r\n                </p>\r\n                </div> }\r\n                <div className=\"field is-horizontal\">\r\n                <div className=\"field-body\">\r\n                {Client.nok_name && <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                        <label className=\"label is-size-7 my-0\"  name=\"nok_name\" type=\"text\">Next of Kin Full Name</label><label className=\"is-size-7 my-0\">{Client.nok_name }</label>\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"nop-clinic-medical\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div>}\r\n                {Client.nok_phoneno && <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                        <label className=\"label is-size-7 my-0\"  name=\"nok_phoneno\" type=\"text\">Next of Kin Phone Number</label><label className=\"is-size-7 my-0\">{Client.nok_phoneno }</label>\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"nop-clinic-medical\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div> }\r\n                {Client.nok_email && <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <label className=\"label is-size-7 my-0\"  name=\"nok_email\" type=\"email\">Next of Kin Email </label><label className=\"is-size-7 my-0\">{Client.nok_email }</label>\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"nop-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div>}\r\n                {Client.nok_relationship && <div className=\"field\">\r\n                    <p className=\"control has-icons-left\">\r\n                    \r\n                        <label className=\"label is-size-7 my-0\"  name=\"nok_relationship\" type=\"text\">Next of Kin Relationship\"  </label><label className=\"is-size-7 my-0\">{Client.nok_relationship }</label>\r\n                        <span className=\"icon is-small is-left\">\r\n                        <i className=\"nop-envelope\"></i>\r\n                        </span>\r\n                    </p>\r\n                </div>}\r\n                </div>\r\n                </div> \r\n            <div className=\"field is-grouped  mt-2\">\r\n                <p className=\"control\">\r\n                    <button className=\"button is-success is-small\" onClick={handleEdit}>\r\n                        Edit Details\r\n                    </button>\r\n                </p>\r\n                <p className=\"control\">\r\n                    <button className=\"button is-info is-small\" >\r\n                        Financial Info\r\n                    </button>\r\n                </p>\r\n                <p className=\"control\">\r\n                    <button className=\"button is-warning is-small\" >\r\n                        Schedule appointment\r\n                    </button>\r\n                </p>\r\n                <p className=\"control\">\r\n                    <button className=\"button is-danger is-small\" >\r\n                        Check into Clinic \r\n                    </button>\r\n                </p>\r\n            </div>\r\n            \r\n           \r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n   \r\n   \r\n}\r\n\r\nexport function ClientModify(){\r\n    const { register, handleSubmit, setValue,reset, errors } = useForm(); //watch, errors,\r\n    // eslint-disable-next-line \r\n    const [error, setError] =useState(false)\r\n    // eslint-disable-next-line \r\n    const [success, setSuccess] =useState(false)\r\n    // eslint-disable-next-line \r\n    const [message,setMessage] = useState(\"\")\r\n    // eslint-disable-next-line \r\n    const ClientServ=client.service('client')\r\n    //const history = useHistory()\r\n     // eslint-disable-next-line\r\n    const {user} = useContext(UserContext)\r\n    const {state,setState} = useContext(ObjectContext)\r\n\r\n    const Client =state.ClientModule.selectedClient \r\n\r\n        useEffect(() => {\r\n            setValue(\"firstname\", Client.firstname,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            })\r\n            setValue(\"middlename\", Client.middlename,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            })\r\n             setValue(\"lastname\", Client.lastname,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            })\r\n            setValue(\"phone\", Client.phone,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            })\r\n            setValue(\"email\", Client.email,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            })\r\n            setValue(\"dob\", Client.dob,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            })\r\n            setValue(\"gender\", Client.gender,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            }) \r\n             setValue(\"profession\", Client.profession,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            }) \r\n            setValue(\"address\", Client.address,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            })\r\n            setValue(\"city\", Client.city,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            })\r\n             setValue(\"state\", Client.state,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            })\r\n            setValue(\"country\", Client.country,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            })\r\n            setValue(\"nok_name\", Client.nok_name,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            })\r\n            setValue(\"nok_email\", Client.nok_email,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            })\r\n            setValue(\"nok_phoneno\", Client.nokphoneno,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            }) \r\n             setValue(\"lga\", Client.lga,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            }) \r\n            setValue(\"bloodgroup\", Client.bloodgroup,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            })\r\n            setValue(\"genotype\", Client.genotype,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            })\r\n             setValue(\"disabilities\", Client.disabilities,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            })\r\n            setValue(\"specificDetails\", Client.specificDetails,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            })\r\n            setValue(\"clientTags\", Client.clientTags,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            })\r\n            setValue(\"mrn\", Client.mrn,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            })\r\n            setValue(\"comorbidities\", Client.comorbidities,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            }) \r\n             setValue(\"allergies\", Client.allergies,  {\r\n                shouldValidate: true,\r\n                shouldDirty: true\r\n            }) \r\n           \r\n            \r\n            return () => {\r\n                \r\n            }\r\n        })\r\n\r\n   const handleCancel=async()=>{\r\n    const    newClientModule={\r\n        selectedClient:{},\r\n        show :'create'\r\n      }\r\n   await setState((prevstate)=>({...prevstate, ClientModule:newClientModule}))\r\n   //console.log(state)\r\n           }\r\n\r\n\r\n        const changeState =()=>{\r\n        const    newClientModule={\r\n            selectedClient:{},\r\n            show :'create'\r\n        }\r\n        setState((prevstate)=>({...prevstate, ClientModule:newClientModule}))\r\n\r\n        }\r\n    const handleDelete=async()=>{\r\n        let conf=window.confirm(\"Are you sure you want to delete this data?\")\r\n        \r\n        const dleteId=Client._id\r\n        if (conf){\r\n             \r\n        ClientServ.remove(dleteId)\r\n        .then((res)=>{\r\n                //console.log(JSON.stringify(res))\r\n                reset();\r\n               /*  setMessage(\"Deleted Client successfully\")\r\n                setSuccess(true)\r\n                changeState()\r\n               setTimeout(() => {\r\n                setSuccess(false)\r\n                }, 200); */\r\n                toast({\r\n                    message: 'Client deleted succesfully',\r\n                    type: 'is-success',\r\n                    dismissible: true,\r\n                    pauseOnHover: true,\r\n                  })\r\n                changeState()\r\n            })\r\n            .catch((err)=>{\r\n               // setMessage(\"Error deleting Client, probable network issues \"+ err )\r\n               // setError(true)\r\n                toast({\r\n                    message: \"Error deleting Client, probable network issues or \"+ err,\r\n                    type: 'is-danger',\r\n                    dismissible: true,\r\n                    pauseOnHover: true,\r\n                  })\r\n            })\r\n        }\r\n    }\r\n        \r\n\r\n   /* ()=> setValue(\"firstName\", \"Bill\", , {\r\n            shouldValidate: true,\r\n            shouldDirty: true\r\n          })) */\r\n    const onSubmit = (data,e) =>{\r\n        e.preventDefault();\r\n        \r\n        setSuccess(false)\r\n       // console.log(data)\r\n      //  data.facility=Client.facility\r\n          //console.log(data);\r\n          \r\n        ClientServ.patch(Client._id,data)\r\n        .then((res)=>{\r\n                //console.log(JSON.stringify(res))\r\n               // e.target.reset();\r\n               // setMessage(\"updated Client successfully\")\r\n                 toast({\r\n                    message: 'Client updated succesfully',\r\n                    type: 'is-success',\r\n                    dismissible: true,\r\n                    pauseOnHover: true,\r\n                  })\r\n                  \r\n                changeState()\r\n\r\n            })\r\n            .catch((err)=>{\r\n                //setMessage(\"Error creating Client, probable network issues \"+ err )\r\n               // setError(true)\r\n                toast({\r\n                    message: \"Error updating Client, probable network issues or \"+ err,\r\n                    type: 'is-danger',\r\n                    dismissible: true,\r\n                    pauseOnHover: true,\r\n                  })\r\n            })\r\n\r\n      } \r\n     \r\n      \r\n    return (\r\n        \r\n        <>\r\n        <div className=\"card \">\r\n            <div className=\"card-header\">\r\n                <p className=\"card-header-title\">\r\n                    Client Details-Modify\r\n                </p>\r\n            </div>\r\n            <div className=\"card-content vscrollable\">\r\n           \r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"field is-horizontal\">\r\n        <div className=\"field-body\">\r\n            <div className=\"field\">\r\n                <p className=\"control has-icons-left has-icons-right\">\r\n                    <label className=\"label is-size-7\"   >First Name </label> <input className=\"input is-small\" ref={register()} name=\"firstname\" type=\"text\"placeholder=\"First Name \" />\r\n                    <span className=\"icon is-small is-left\">\r\n                        <i className=\"nop-hospital\"></i>\r\n                    </span>                    \r\n                </p>\r\n            </div>\r\n\r\n\r\n            <div className=\"field\">\r\n                <p className=\"control has-icons-left has-icons-right\">\r\n                <label className=\"label is-size-7\"   > Middle Name </label><input className=\"input is-small\" ref={register()} name=\"middlename\" type=\"text\" placeholder=\"Middle Name \" />\r\n                <span className=\"icon is-small is-left\">\r\n                    <i className=\"nop-map-signs\"></i>\r\n                </span>\r\n                \r\n                </p>\r\n            </div>\r\n\r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n                <label className=\"label is-size-7\"  >Last Name</label><input className=\"input is-small\" ref={register()} name=\"lastname\" type=\"text\"placeholder=\"Last Name \" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\" nop-user-md \"></i>\r\n                </span>\r\n            </p>\r\n        </div>\r\n        </div>  \r\n        </div>\r\n        \r\n        <div className=\"field is-horizontal\">\r\n        <div className=\"field-body\">\r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n            \r\n                <label className=\"label is-size-7\"  >Date of Birth  </label><input className=\"input is-small\" ref={register()} name=\"dob\" type=\"text\"placeholder=\"Date of Birth \" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"nop-envelope\"></i>\r\n                </span>\r\n            </p>\r\n        </div> \r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n            \r\n                <label className=\"label is-size-7\"  >Gender  </label><input className=\"input is-small\" ref={register()} name=\"gender\" type=\"text\"placeholder=\"Gender  \" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"nop-envelope\"></i>\r\n                </span>\r\n            </p>\r\n        </div> \r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n            \r\n                <label className=\"label is-size-7\"  >Marital Status  </label><input className=\"input is-small\" ref={register()} name=\"maritalstatus\" type=\"text\"placeholder=\"Marital Status  \" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"nop-envelope\"></i>\r\n                </span>\r\n            </p>\r\n        </div> \r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n            \r\n                <label className=\"label is-size-7\"  > Records Number </label><input className=\"input is-small\" ref={register()} name=\"mrn\" type=\"text\"placeholder=\"Records Number  \" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"nop-envelope\"></i>\r\n                </span>\r\n            </p>\r\n        </div> \r\n        </div>\r\n        </div>\r\n        <div className=\"field is-horizontal\">\r\n        <div className=\"field-body\">\r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n            \r\n                <label className=\"label is-size-7\"  >Religion</label><input className=\"input is-small\" ref={register()} name=\"religion\" type=\"text\"placeholder=\"Religion \" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"nop-envelope\"></i>\r\n                </span>\r\n            </p>\r\n        </div> \r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n            \r\n                <label className=\"label is-size-7\"  >Profession  </label><input className=\"input is-small\" ref={register()} name=\"profession\" type=\"text\" placeholder=\"Profession\" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"nop-envelope\"></i>\r\n                </span>\r\n            </p>\r\n        </div> \r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n                <label className=\"label is-size-7\"  > Phone No</label><input className=\"input is-small\" ref={register()} name=\"phone\" type=\"text\" placeholder=\" Phone No \" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"nop-phone-alt\"></i>\r\n                </span>\r\n            </p>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n            \r\n                <label className=\"label is-size-7\"  >Email  </label><input className=\"input is-small\" ref={register()} name=\"email\" type=\"email\"placeholder=\"Email  \" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"nop-envelope\"></i>\r\n                </span>\r\n            </p>\r\n        </div> \r\n        </div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n        <p className=\"control has-icons-left\">\r\n\r\n            <label className=\"label is-size-7\"  >Residential Address  </label><input className=\"input is-small\" ref={register()} name=\"address\" type=\"text\" placeholder=\"Residential Address  \" />\r\n            <span className=\"icon is-small is-left\">\r\n            <i className=\"nop-envelope\"></i>\r\n            </span>\r\n        </p>\r\n        </div> \r\n        <div className=\"field is-horizontal\">\r\n        <div className=\"field-body\">\r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n            \r\n                <label className=\"label is-size-7\"  >Town/City  </label><input className=\"input is-small\" ref={register()} name=\"city\" type=\"text\" placeholder=\"Town/City  \" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"nop-envelope\"></i>\r\n                </span>\r\n            </p>\r\n        </div> \r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n            \r\n                <label className=\"label is-size-7\"  >Local Govt Area  </label><input className=\"input is-small\" ref={register()} name=\"lga\" type=\"text\"placeholder=\"Local Govt Area  \" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"nop-envelope\"></i>\r\n                </span>\r\n            </p>\r\n        </div> \r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n            \r\n                <label className=\"label is-size-7\"  >State  </label><input className=\"input is-small\" ref={register()} name=\"state\" type=\"text\"placeholder=\"State\" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"nop-envelope\"></i>\r\n                </span>\r\n            </p>\r\n        </div> \r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n            \r\n                <label className=\"label is-size-7\"  >Country  </label><input className=\"input is-small\" ref={register()} name=\"country\" type=\"text\" placeholder=\"Country  \" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"nop-envelope\"></i>\r\n                </span>\r\n            </p>\r\n        </div>\r\n        </div>\r\n        </div> \r\n        <div className=\"field is-horizontal\">\r\n        <div className=\"field-body\">\r\n            <div className=\"field\">\r\n                <p className=\"control has-icons-left\">\r\n                \r\n                    <label className=\"label is-size-7\"  >Blood Group </label><input className=\"input is-small\" ref={register()} name=\"bloodgroup\" type=\"text\"placeholder=\"Blood Group \" />\r\n                    <span className=\"icon is-small is-left\">\r\n                    <i className=\"nop-envelope\"></i>\r\n                    </span>\r\n                </p>\r\n            </div> \r\n            <div className=\"field\">\r\n                <p className=\"control has-icons-left\">\r\n                \r\n                    <label className=\"label is-size-7\"  >Genotype  </label><input className=\"input is-small\" ref={register()} name=\"genotype\" type=\"text\" placeholder=\"Genotype \" />\r\n                    <span className=\"icon is-small is-left\">\r\n                    <i className=\"nop-envelope\"></i>\r\n                    </span>\r\n                </p>\r\n            </div> \r\n            <div className=\"field\">\r\n                <p className=\"control has-icons-left\">\r\n                \r\n                    <label className=\"label is-size-7\" >Disabilities  </label><input className=\"input is-small\" ref={register()}  name=\"disabilities\" type=\"text\"placeholder=\"Disabilities  \" />\r\n                    <span className=\"icon is-small is-left\">\r\n                    <i className=\"nop-envelope\"></i>\r\n                    </span>\r\n                </p>\r\n            </div> \r\n        </div> \r\n        </div>  \r\n\r\n        <div className=\"field is-horizontal\">\r\n        <div className=\"field-body\">\r\n\r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n            \r\n                <label className=\"label is-size-7\"  >Allergies  </label><input className=\"input is-small\" ref={register()} name=\"allergies\" type=\"text\"placeholder=\"Allergies  \" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"nop-envelope\"></i>\r\n                </span>\r\n            </p>\r\n        </div> \r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n            \r\n                <label className=\"label is-size-7\"  >Co-mobidities </label><input className=\"input is-small\" ref={register()} name=\"comorbidities\" type=\"text\"placeholder=\"Co-mobidities \" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"nop-envelope\"></i>\r\n                </span>\r\n            </p>\r\n        </div> \r\n        </div>\r\n        </div>\r\n        <div className=\"field\">\r\n        <p className=\"control has-icons-left\">\r\n\r\n            <label className=\"label is-size-7\"  >Tags  </label><input className=\"input is-small\" ref={register()} name=\"clientTags\" type=\"text\" placeholder=\"Tags \" />\r\n            <span className=\"icon is-small is-left\">\r\n            <i className=\"nop-envelope\"></i>\r\n            </span>\r\n        </p>\r\n        </div> \r\n        <div className=\"field\">\r\n        <p className=\"control has-icons-left\">\r\n            <label className=\"label is-size-7\"  >Specific Details about client  </label><input className=\"input is-small\" ref={register()} name=\"specificDetails\" type=\"text\"placeholder=\"Specific Details about client \" />\r\n            <span className=\"icon is-small is-left\">\r\n            <i className=\"nop-envelope\"></i>\r\n            </span>\r\n        </p>\r\n        </div> \r\n        <div className=\"field is-horizontal\">\r\n        <div className=\"field-body\">\r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n                <label className=\"label is-size-7\"  >Next of Kin Full Name</label><input className=\"input is-small\" ref={register()} name=\"nok_name\" type=\"text\"placeholder=\"Next of Kin Full Name \" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"nop-clinic-medical\"></i>\r\n                </span>\r\n            </p>\r\n        </div>\r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n                <label className=\"label is-size-7\" >Phone Number</label><input className=\"input is-small\" ref={register()}  name=\"nok_phoneno\" type=\"text\"placeholder=\" \" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"nop-clinic-medical\"></i>\r\n                </span>\r\n            </p>\r\n        </div> \r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n            \r\n                <label className=\"label is-size-7\"  >Next of Kin Email  </label><input className=\"input is-small\" ref={register()} name=\"nok_email\" type=\"email\"placeholder=\"Next of Kin Email  \" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"nop-envelope\"></i>\r\n                </span>\r\n            </p>\r\n        </div>\r\n        <div className=\"field\">\r\n            <p className=\"control has-icons-left\">\r\n            \r\n                <label className=\"label is-size-7\"  > Relationship  </label><input className=\"input is-small\" ref={register()} name=\"nok_relationship\" type=\"text\" placeholder=\"Next of Kin Relationship\" />\r\n                <span className=\"icon is-small is-left\">\r\n                <i className=\"nop-envelope\"></i>\r\n                </span>\r\n            </p>\r\n        </div>\r\n        </div>\r\n        </div> \r\n           \r\n           \r\n            </form>\r\n            \r\n            <div className=\"field  is-grouped mt-2\" >\r\n                <p className=\"control\">\r\n                    <button type=\"submit\" className=\"button is-success is-small\" onClick={handleSubmit(onSubmit)}>\r\n                        Save\r\n                    </button>\r\n                </p>\r\n                <p className=\"control\">\r\n                    <button className=\"button is-warning is-small\" onClick={handleCancel}>\r\n                        Cancel\r\n                    </button>\r\n                </p>\r\n               {/*  <p className=\"control\">\r\n                    <button className=\"button is-danger is-small\" onClick={()=>handleDelete()} type=\"delete\">\r\n                       Delete\r\n                    </button>\r\n                </p> */}\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n   \r\n   \r\n                \r\n}   \r\n\r\nexport  function InputSearch({getSearchfacility,clear}) {\r\n    const ClientServ=client.service('client')\r\n   // const facilityServ=client.service('facility')\r\n    const [facilities,setFacilities]=useState([])\r\n     // eslint-disable-next-line\r\n     const [searchError, setSearchError] =useState(false)\r\n     // eslint-disable-next-line\r\n    const [showPanel, setShowPanel] =useState(false)\r\n     // eslint-disable-next-line\r\n   const [searchMessage, setSearchMessage] = useState(\"\") \r\n   // eslint-disable-next-line \r\n   const [simpa,setSimpa]=useState(\"\")\r\n   // eslint-disable-next-line \r\n   const [chosen,setChosen]=useState(false)\r\n   // eslint-disable-next-line \r\n   const [count,setCount]=useState(0)\r\n   const inputEl=useRef(null)\r\n\r\n\r\n   const handleRow= async(obj)=>{\r\n        await setChosen(true)\r\n        //alert(\"something is chaning\")\r\n       getSearchfacility(obj)\r\n       \r\n       await setSimpa(obj.facilityName)\r\n       \r\n        // setSelectedFacility(obj)\r\n        setShowPanel(false)\r\n        await setCount(2)\r\n        /* const    newfacilityModule={\r\n            selectedFacility:facility,\r\n            show :'detail'\r\n        }\r\n   await setState((prevstate)=>({...prevstate, facilityModule:newfacilityModule})) */\r\n   //console.log(state)\r\n}\r\n    const handleBlur=async(e)=>{\r\n         if (count===2){\r\n             console.log(\"stuff was chosen\")\r\n         }\r\n       \r\n       /*  console.log(\"blur\")\r\n         setShowPanel(false)\r\n        console.log(JSON.stringify(simpa))\r\n        if (simpa===\"\"){\r\n            console.log(facilities.length)\r\n            setSimpa(\"abc\")\r\n            setSimpa(\"\")\r\n            setFacilities([])\r\n            inputEl.current.setValue=\"\"\r\n        }\r\n        console.log(facilities.length)\r\n        console.log(inputEl.current) */\r\n    }\r\n    const handleSearch=async(val)=>{\r\n        \r\n        const field='facilityName' //field variable\r\n       \r\n        if (val.length>=3){\r\n            ClientServ.find({query: {     //service\r\n                 [field]: {\r\n                     $regex:val,\r\n                     $options:'i'\r\n                    \r\n                 },\r\n                 $limit:10,\r\n                 $sort: {\r\n                     createdAt: -1\r\n                   }\r\n                     }}).then((res)=>{\r\n              console.log(\"facility  fetched successfully\") \r\n                setFacilities(res.data)\r\n                 setSearchMessage(\" facility  fetched successfully\")\r\n                 setShowPanel(true)\r\n             })\r\n             .catch((err)=>{\r\n                 console.log(err)\r\n                 setSearchMessage(\"Error searching facility, probable network issues \"+ err )\r\n                 setSearchError(true)\r\n             })\r\n         }\r\n        else{\r\n            console.log(\"less than 3 \")\r\n            console.log(val)\r\n            setShowPanel(false)\r\n            await setFacilities([])\r\n            console.log(facilities)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n       if (clear){\r\n           setSimpa(\"\")\r\n       }\r\n        return () => {\r\n            \r\n        }\r\n    }, [clear] )\r\n    return (\r\n        <div>\r\n            <div className=\"field\">\r\n                <div className=\"control has-icons-left  \">\r\n                    <div className={`dropdown ${showPanel?\"is-active\":\"\"}`}>\r\n                        <div className=\"dropdown-trigger\">\r\n                            <DebounceInput className=\"input is-small \" \r\n                                type=\"text\" placeholder=\"Search Facilities\"\r\n                                value={simpa}\r\n                                minLength={1}\r\n                                debounceTimeout={400}\r\n                                onBlur={(e)=>handleBlur(e)}\r\n                                onChange={(e)=>handleSearch(e.target.value)}\r\n                                inputRef={inputEl}\r\n                                  />\r\n                            <span className=\"icon is-small is-left\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </span>\r\n                        </div>\r\n                        {searchError&&<div>{searchMessage}</div>}\r\n                        <div className=\"dropdown-menu\" >\r\n                            <div className=\"dropdown-content\">\r\n                            {facilities.map((facility, i)=>(\r\n                                    \r\n                                    <div className=\"dropdown-item\" key={facility._id} onClick={()=>handleRow(facility)}>\r\n                                        \r\n                                        <span>{facility.facilityName}</span>\r\n                                        \r\n                                    </div>\r\n                                    \r\n                                    ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          \r\n        </div>\r\n    )\r\n}","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\InventoryModule.js",["208","209","210","211"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\ClinicModule.js",["212","213","214","215"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\LandingPage.js",[],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\HSModules.js",[],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\Location.js",["216","217","218","219"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\inventory\\ProductEntry.js",["220","221","222","223","224","225","226"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\inventory\\Products.js",["227","228","229","230","231","232","233"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Clinic\\ClinicHome.js",["234","235","236","237","238","239"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Clinic\\ClinicEntry.js",["240","241","242","243","244","245","246"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\ClientMgt\\PatientProfile.js",["247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\utils\\VideoConference.js",["271","272","273","274"],"import React, {useState,useContext, useEffect,useRef} from 'react'\r\nimport Draggable from 'react-draggable';\r\nimport { Jutsu } from 'react-jutsu'\r\n//import { useJitsi } from 'react-jutsu' // Custom hook\r\nimport {UserContext,ObjectContext} from '../../context'\r\n \r\nconst VideoConference = () => {\r\n  const [room, setRoom] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [call, setCall] = useState(false)\r\n  const [password, setPassword] = useState('')\r\n  const {state}=useContext(ObjectContext) //,setState\r\n  // eslint-disable-next-line\r\n  const [selectedClient,setSelectedClient]=useState() \r\n  const client =state.ClientModule.selectedClient\r\n  const {user,setUser}=useContext(UserContext)\r\n \r\n  const handleClick = event => {\r\n    event.preventDefault()\r\n    setRoom(client._id)\r\n    setName(user.firstname)\r\n    if (room && name) setCall(true)\r\n  }\r\n \r\n  return call ? (\r\n    <Draggable>\r\n    <Jutsu\r\n      roomName={room}\r\n      displayName={name}\r\n      password={password}\r\n      onMeetingEnd={() => setCall(false)}\r\n      loadingComponent={<p>loading ...</p>}\r\n      errorComponent={<><p>Oops, something went wrong</p>   </>} \r\n      containerStyles={{ width: '100%', height: '250px' }}\r\n      />\r\n    </Draggable>  \r\n  ) : (\r\n    <form>\r\n      {/* <input id='room' type='text' placeholder='Room' value={room} onChange={(e) => setRoom(e.target.value)} />\r\n      <input id='name' type='text' placeholder='Name' value={name} onChange={(e) => setName(e.target.value)} /> */}\r\n     {/*  <input id='password' type='text' placeholder='Password (optional)' value={password} onChange={(e) => setPassword(e.target.value)} /> */}\r\n      <button className=\"button is-success is-small mt-1\" onClick={handleClick} type='submit'>\r\n        Start / Join Teleconsultation\r\n      </button>\r\n    </form>\r\n  )\r\n \r\n}\r\n \r\nexport default VideoConference",{"ruleId":"275","severity":1,"message":"276","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":17},{"ruleId":"275","severity":1,"message":"279","line":8,"column":9,"nodeType":"277","messageId":"278","endLine":8,"endColumn":14},{"ruleId":"275","severity":1,"message":"280","line":32,"column":18,"nodeType":"277","messageId":"278","endLine":32,"endColumn":25},{"ruleId":"275","severity":1,"message":"281","line":34,"column":11,"nodeType":"277","messageId":"278","endLine":34,"endColumn":17},{"ruleId":"275","severity":1,"message":"282","line":44,"column":11,"nodeType":"277","messageId":"278","endLine":44,"endColumn":26},{"ruleId":"275","severity":1,"message":"283","line":117,"column":19,"nodeType":"277","messageId":"278","endLine":117,"endColumn":25},{"ruleId":"284","severity":1,"message":"285","line":195,"column":15,"nodeType":"286","endLine":195,"endColumn":17,"suggestions":"287"},{"ruleId":"275","severity":1,"message":"288","line":1,"column":16,"nodeType":"277","messageId":"278","endLine":1,"endColumn":24},{"ruleId":"275","severity":1,"message":"289","line":1,"column":25,"nodeType":"277","messageId":"278","endLine":1,"endColumn":35},{"ruleId":"275","severity":1,"message":"290","line":1,"column":37,"nodeType":"277","messageId":"278","endLine":1,"endColumn":46},{"ruleId":"275","severity":1,"message":"291","line":1,"column":47,"nodeType":"277","messageId":"278","endLine":1,"endColumn":53},{"ruleId":"275","severity":1,"message":"292","line":2,"column":8,"nodeType":"277","messageId":"278","endLine":2,"endColumn":14},{"ruleId":"275","severity":1,"message":"279","line":3,"column":9,"nodeType":"277","messageId":"278","endLine":3,"endColumn":14},{"ruleId":"275","severity":1,"message":"293","line":43,"column":12,"nodeType":"277","messageId":"278","endLine":43,"endColumn":17},{"ruleId":"275","severity":1,"message":"294","line":45,"column":12,"nodeType":"277","messageId":"278","endLine":45,"endColumn":19},{"ruleId":"284","severity":1,"message":"295","line":317,"column":15,"nodeType":"286","endLine":317,"endColumn":17,"suggestions":"296"},{"ruleId":"275","severity":1,"message":"297","line":548,"column":53,"nodeType":"277","messageId":"278","endLine":548,"endColumn":59},{"ruleId":"275","severity":1,"message":"298","line":621,"column":11,"nodeType":"277","messageId":"278","endLine":621,"endColumn":23},{"ruleId":"275","severity":1,"message":"276","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":17},{"ruleId":"275","severity":1,"message":"299","line":8,"column":23,"nodeType":"277","messageId":"278","endLine":8,"endColumn":35},{"ruleId":"275","severity":1,"message":"300","line":13,"column":5,"nodeType":"277","messageId":"278","endLine":13,"endColumn":11},{"ruleId":"284","severity":1,"message":"301","line":40,"column":12,"nodeType":"286","endLine":40,"endColumn":14,"suggestions":"302"},{"ruleId":"275","severity":1,"message":"303","line":205,"column":11,"nodeType":"277","messageId":"278","endLine":205,"endColumn":27},{"ruleId":"275","severity":1,"message":"291","line":1,"column":47,"nodeType":"277","messageId":"278","endLine":1,"endColumn":53},{"ruleId":"275","severity":1,"message":"304","line":3,"column":9,"nodeType":"277","messageId":"278","endLine":3,"endColumn":22},{"ruleId":"275","severity":1,"message":"305","line":5,"column":9,"nodeType":"277","messageId":"278","endLine":5,"endColumn":26},{"ruleId":"275","severity":1,"message":"306","line":11,"column":18,"nodeType":"277","messageId":"278","endLine":11,"endColumn":26},{"ruleId":"275","severity":1,"message":"293","line":24,"column":12,"nodeType":"277","messageId":"278","endLine":24,"endColumn":17},{"ruleId":"275","severity":1,"message":"307","line":25,"column":12,"nodeType":"277","messageId":"278","endLine":25,"endColumn":19},{"ruleId":"275","severity":1,"message":"294","line":26,"column":12,"nodeType":"277","messageId":"278","endLine":26,"endColumn":19},{"ruleId":"275","severity":1,"message":"308","line":38,"column":11,"nodeType":"277","messageId":"278","endLine":38,"endColumn":28},{"ruleId":"275","severity":1,"message":"293","line":244,"column":12,"nodeType":"277","messageId":"278","endLine":244,"endColumn":17},{"ruleId":"275","severity":1,"message":"307","line":245,"column":12,"nodeType":"277","messageId":"278","endLine":245,"endColumn":19},{"ruleId":"275","severity":1,"message":"294","line":246,"column":12,"nodeType":"277","messageId":"278","endLine":246,"endColumn":19},{"ruleId":"275","severity":1,"message":"308","line":258,"column":11,"nodeType":"277","messageId":"278","endLine":258,"endColumn":28},{"ruleId":"275","severity":1,"message":"293","line":481,"column":12,"nodeType":"277","messageId":"278","endLine":481,"endColumn":17},{"ruleId":"275","severity":1,"message":"307","line":482,"column":12,"nodeType":"277","messageId":"278","endLine":482,"endColumn":19},{"ruleId":"275","severity":1,"message":"294","line":483,"column":12,"nodeType":"277","messageId":"278","endLine":483,"endColumn":19},{"ruleId":"275","severity":1,"message":"308","line":495,"column":11,"nodeType":"277","messageId":"278","endLine":495,"endColumn":28},{"ruleId":"275","severity":1,"message":"293","line":700,"column":12,"nodeType":"277","messageId":"278","endLine":700,"endColumn":17},{"ruleId":"275","severity":1,"message":"307","line":701,"column":12,"nodeType":"277","messageId":"278","endLine":701,"endColumn":19},{"ruleId":"275","severity":1,"message":"294","line":702,"column":12,"nodeType":"277","messageId":"278","endLine":702,"endColumn":19},{"ruleId":"275","severity":1,"message":"308","line":714,"column":11,"nodeType":"277","messageId":"278","endLine":714,"endColumn":28},{"ruleId":"275","severity":1,"message":"309","line":111,"column":18,"nodeType":"277","messageId":"278","endLine":111,"endColumn":23},{"ruleId":"284","severity":1,"message":"310","line":132,"column":4,"nodeType":"286","endLine":132,"endColumn":6,"suggestions":"311"},{"ruleId":"312","replacedBy":"313"},{"ruleId":"314","replacedBy":"315"},{"ruleId":"275","severity":1,"message":"316","line":6,"column":7,"nodeType":"277","messageId":"278","endLine":6,"endColumn":12},{"ruleId":"275","severity":1,"message":"317","line":8,"column":7,"nodeType":"277","messageId":"278","endLine":8,"endColumn":10},{"ruleId":"275","severity":1,"message":"318","line":2,"column":40,"nodeType":"277","messageId":"278","endLine":2,"endColumn":44},{"ruleId":"275","severity":1,"message":"319","line":13,"column":12,"nodeType":"277","messageId":"278","endLine":13,"endColumn":16},{"ruleId":"275","severity":1,"message":"320","line":13,"column":17,"nodeType":"277","messageId":"278","endLine":13,"endColumn":24},{"ruleId":"275","severity":1,"message":"321","line":84,"column":16,"nodeType":"277","messageId":"278","endLine":84,"endColumn":20},{"ruleId":"284","severity":1,"message":"322","line":108,"column":7,"nodeType":"286","endLine":108,"endColumn":9,"suggestions":"323"},{"ruleId":"275","severity":1,"message":"324","line":8,"column":37,"nodeType":"277","messageId":"278","endLine":8,"endColumn":42},{"ruleId":"275","severity":1,"message":"297","line":8,"column":44,"nodeType":"277","messageId":"278","endLine":8,"endColumn":50},{"ruleId":"275","severity":1,"message":"325","line":11,"column":11,"nodeType":"277","messageId":"278","endLine":11,"endColumn":19},{"ruleId":"275","severity":1,"message":"318","line":2,"column":40,"nodeType":"277","messageId":"278","endLine":2,"endColumn":44},{"ruleId":"284","severity":1,"message":"326","line":275,"column":7,"nodeType":"286","endLine":275,"endColumn":9,"suggestions":"327"},{"ruleId":"275","severity":1,"message":"293","line":43,"column":12,"nodeType":"277","messageId":"278","endLine":43,"endColumn":17},{"ruleId":"275","severity":1,"message":"294","line":45,"column":12,"nodeType":"277","messageId":"278","endLine":45,"endColumn":19},{"ruleId":"284","severity":1,"message":"328","line":416,"column":15,"nodeType":"286","endLine":416,"endColumn":17,"suggestions":"329"},{"ruleId":"284","severity":1,"message":"330","line":423,"column":12,"nodeType":"286","endLine":423,"endColumn":45,"suggestions":"331"},{"ruleId":"284","severity":1,"message":"330","line":546,"column":11,"nodeType":"286","endLine":546,"endColumn":22,"suggestions":"332"},{"ruleId":"275","severity":1,"message":"297","line":668,"column":53,"nodeType":"277","messageId":"278","endLine":668,"endColumn":59},{"ruleId":"284","severity":1,"message":"333","line":708,"column":11,"nodeType":"286","endLine":708,"endColumn":13,"suggestions":"334"},{"ruleId":"275","severity":1,"message":"298","line":731,"column":11,"nodeType":"277","messageId":"278","endLine":731,"endColumn":23},{"ruleId":"275","severity":1,"message":"293","line":41,"column":12,"nodeType":"277","messageId":"278","endLine":41,"endColumn":17},{"ruleId":"275","severity":1,"message":"307","line":42,"column":12,"nodeType":"277","messageId":"278","endLine":42,"endColumn":19},{"ruleId":"275","severity":1,"message":"294","line":43,"column":12,"nodeType":"277","messageId":"278","endLine":43,"endColumn":19},{"ruleId":"275","severity":1,"message":"308","line":54,"column":11,"nodeType":"277","messageId":"278","endLine":54,"endColumn":28},{"ruleId":"275","severity":1,"message":"335","line":505,"column":14,"nodeType":"277","messageId":"278","endLine":505,"endColumn":19},{"ruleId":"284","severity":1,"message":"336","line":629,"column":15,"nodeType":"286","endLine":629,"endColumn":17,"suggestions":"337"},{"ruleId":"275","severity":1,"message":"338","line":726,"column":11,"nodeType":"277","messageId":"278","endLine":726,"endColumn":17},{"ruleId":"275","severity":1,"message":"297","line":1052,"column":53,"nodeType":"277","messageId":"278","endLine":1052,"endColumn":59},{"ruleId":"275","severity":1,"message":"298","line":1190,"column":11,"nodeType":"277","messageId":"278","endLine":1190,"endColumn":23},{"ruleId":"275","severity":1,"message":"318","line":2,"column":40,"nodeType":"277","messageId":"278","endLine":2,"endColumn":44},{"ruleId":"275","severity":1,"message":"339","line":11,"column":9,"nodeType":"277","messageId":"278","endLine":11,"endColumn":20},{"ruleId":"275","severity":1,"message":"306","line":14,"column":18,"nodeType":"277","messageId":"278","endLine":14,"endColumn":26},{"ruleId":"284","severity":1,"message":"340","line":30,"column":12,"nodeType":"286","endLine":30,"endColumn":14,"suggestions":"341"},{"ruleId":"275","severity":1,"message":"318","line":2,"column":40,"nodeType":"277","messageId":"278","endLine":2,"endColumn":44},{"ruleId":"275","severity":1,"message":"339","line":11,"column":9,"nodeType":"277","messageId":"278","endLine":11,"endColumn":20},{"ruleId":"275","severity":1,"message":"306","line":14,"column":18,"nodeType":"277","messageId":"278","endLine":14,"endColumn":26},{"ruleId":"284","severity":1,"message":"342","line":30,"column":12,"nodeType":"286","endLine":30,"endColumn":14,"suggestions":"343"},{"ruleId":"275","severity":1,"message":"293","line":43,"column":12,"nodeType":"277","messageId":"278","endLine":43,"endColumn":17},{"ruleId":"275","severity":1,"message":"294","line":45,"column":12,"nodeType":"277","messageId":"278","endLine":45,"endColumn":19},{"ruleId":"284","severity":1,"message":"344","line":389,"column":15,"nodeType":"286","endLine":389,"endColumn":17,"suggestions":"345"},{"ruleId":"275","severity":1,"message":"297","line":620,"column":53,"nodeType":"277","messageId":"278","endLine":620,"endColumn":59},{"ruleId":"275","severity":1,"message":"293","line":44,"column":12,"nodeType":"277","messageId":"278","endLine":44,"endColumn":17},{"ruleId":"275","severity":1,"message":"294","line":46,"column":12,"nodeType":"277","messageId":"278","endLine":46,"endColumn":19},{"ruleId":"346","severity":1,"message":"347","line":537,"column":21,"nodeType":"348","messageId":"349","endLine":537,"endColumn":36},{"ruleId":"284","severity":1,"message":"350","line":555,"column":15,"nodeType":"286","endLine":555,"endColumn":17,"suggestions":"351"},{"ruleId":"284","severity":1,"message":"330","line":563,"column":16,"nodeType":"286","endLine":563,"endColumn":49,"suggestions":"352"},{"ruleId":"275","severity":1,"message":"353","line":654,"column":11,"nodeType":"277","messageId":"278","endLine":654,"endColumn":21},{"ruleId":"275","severity":1,"message":"297","line":862,"column":53,"nodeType":"277","messageId":"278","endLine":862,"endColumn":59},{"ruleId":"275","severity":1,"message":"293","line":43,"column":12,"nodeType":"277","messageId":"278","endLine":43,"endColumn":17},{"ruleId":"275","severity":1,"message":"307","line":44,"column":12,"nodeType":"277","messageId":"278","endLine":44,"endColumn":19},{"ruleId":"275","severity":1,"message":"294","line":45,"column":12,"nodeType":"277","messageId":"278","endLine":45,"endColumn":19},{"ruleId":"275","severity":1,"message":"308","line":56,"column":11,"nodeType":"277","messageId":"278","endLine":56,"endColumn":28},{"ruleId":"284","severity":1,"message":"354","line":392,"column":15,"nodeType":"286","endLine":392,"endColumn":17,"suggestions":"355"},{"ruleId":"275","severity":1,"message":"297","line":624,"column":53,"nodeType":"277","messageId":"278","endLine":624,"endColumn":59},{"ruleId":"275","severity":1,"message":"298","line":697,"column":11,"nodeType":"277","messageId":"278","endLine":697,"endColumn":23},{"ruleId":"275","severity":1,"message":"288","line":1,"column":16,"nodeType":"277","messageId":"278","endLine":1,"endColumn":24},{"ruleId":"275","severity":1,"message":"290","line":1,"column":25,"nodeType":"277","messageId":"278","endLine":1,"endColumn":34},{"ruleId":"275","severity":1,"message":"356","line":2,"column":8,"nodeType":"277","messageId":"278","endLine":2,"endColumn":13},{"ruleId":"275","severity":1,"message":"357","line":2,"column":17,"nodeType":"277","messageId":"278","endLine":2,"endColumn":26},{"ruleId":"275","severity":1,"message":"339","line":3,"column":9,"nodeType":"277","messageId":"278","endLine":3,"endColumn":20},{"ruleId":"275","severity":1,"message":"358","line":8,"column":11,"nodeType":"277","messageId":"278","endLine":8,"endColumn":27},{"ruleId":"275","severity":1,"message":"293","line":44,"column":12,"nodeType":"277","messageId":"278","endLine":44,"endColumn":17},{"ruleId":"275","severity":1,"message":"294","line":46,"column":12,"nodeType":"277","messageId":"278","endLine":46,"endColumn":19},{"ruleId":"346","severity":1,"message":"347","line":537,"column":21,"nodeType":"348","messageId":"349","endLine":537,"endColumn":36},{"ruleId":"284","severity":1,"message":"350","line":555,"column":15,"nodeType":"286","endLine":555,"endColumn":17,"suggestions":"359"},{"ruleId":"284","severity":1,"message":"330","line":563,"column":16,"nodeType":"286","endLine":563,"endColumn":49,"suggestions":"360"},{"ruleId":"275","severity":1,"message":"353","line":654,"column":11,"nodeType":"277","messageId":"278","endLine":654,"endColumn":21},{"ruleId":"275","severity":1,"message":"297","line":862,"column":53,"nodeType":"277","messageId":"278","endLine":862,"endColumn":59},{"ruleId":"275","severity":1,"message":"291","line":1,"column":47,"nodeType":"277","messageId":"278","endLine":1,"endColumn":53},{"ruleId":"275","severity":1,"message":"292","line":2,"column":8,"nodeType":"277","messageId":"278","endLine":2,"endColumn":14},{"ruleId":"275","severity":1,"message":"304","line":3,"column":9,"nodeType":"277","messageId":"278","endLine":3,"endColumn":22},{"ruleId":"275","severity":1,"message":"276","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":17},{"ruleId":"275","severity":1,"message":"339","line":6,"column":9,"nodeType":"277","messageId":"278","endLine":6,"endColumn":20},{"ruleId":"275","severity":1,"message":"279","line":7,"column":9,"nodeType":"277","messageId":"278","endLine":7,"endColumn":14},{"ruleId":"275","severity":1,"message":"361","line":9,"column":8,"nodeType":"277","messageId":"278","endLine":9,"endColumn":23},{"ruleId":"275","severity":1,"message":"362","line":24,"column":9,"nodeType":"277","messageId":"278","endLine":24,"endColumn":14},{"ruleId":"275","severity":1,"message":"363","line":25,"column":9,"nodeType":"277","messageId":"278","endLine":25,"endColumn":14},{"ruleId":"275","severity":1,"message":"364","line":28,"column":9,"nodeType":"277","messageId":"278","endLine":28,"endColumn":17},{"ruleId":"275","severity":1,"message":"365","line":29,"column":9,"nodeType":"277","messageId":"278","endLine":29,"endColumn":20},{"ruleId":"275","severity":1,"message":"366","line":30,"column":9,"nodeType":"277","messageId":"278","endLine":30,"endColumn":18},{"ruleId":"275","severity":1,"message":"367","line":31,"column":9,"nodeType":"277","messageId":"278","endLine":31,"endColumn":25},{"ruleId":"275","severity":1,"message":"368","line":37,"column":9,"nodeType":"277","messageId":"278","endLine":37,"endColumn":12},{"ruleId":"275","severity":1,"message":"369","line":38,"column":9,"nodeType":"277","messageId":"278","endLine":38,"endColumn":16},{"ruleId":"275","severity":1,"message":"370","line":39,"column":9,"nodeType":"277","messageId":"278","endLine":39,"endColumn":13},{"ruleId":"275","severity":1,"message":"371","line":40,"column":9,"nodeType":"277","messageId":"278","endLine":40,"endColumn":12},{"ruleId":"275","severity":1,"message":"372","line":42,"column":9,"nodeType":"277","messageId":"278","endLine":42,"endColumn":16},{"ruleId":"275","severity":1,"message":"373","line":50,"column":9,"nodeType":"277","messageId":"278","endLine":50,"endColumn":20},{"ruleId":"275","severity":1,"message":"374","line":52,"column":9,"nodeType":"277","messageId":"278","endLine":52,"endColumn":22},{"ruleId":"275","severity":1,"message":"375","line":54,"column":9,"nodeType":"277","messageId":"278","endLine":54,"endColumn":23},{"ruleId":"275","severity":1,"message":"376","line":56,"column":9,"nodeType":"277","messageId":"278","endLine":56,"endColumn":19},{"ruleId":"284","severity":1,"message":"377","line":59,"column":5,"nodeType":"277","endLine":59,"endColumn":14,"suggestions":"378"},{"ruleId":"379","severity":1,"message":"380","line":75,"column":30,"nodeType":"381","endLine":75,"endColumn":114},{"ruleId":"275","severity":1,"message":"290","line":1,"column":37,"nodeType":"277","messageId":"278","endLine":1,"endColumn":46},{"ruleId":"275","severity":1,"message":"291","line":1,"column":47,"nodeType":"277","messageId":"278","endLine":1,"endColumn":53},{"ruleId":"275","severity":1,"message":"382","line":11,"column":20,"nodeType":"277","messageId":"278","endLine":11,"endColumn":31},{"ruleId":"275","severity":1,"message":"320","line":16,"column":15,"nodeType":"277","messageId":"278","endLine":16,"endColumn":22},"no-unused-vars","'useForm' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","'setPage' is assigned a value but never used.","'loader' is assigned a value but never used.","'handleCreateNew' is assigned a value but never used.","'ulimit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ClinicServ', 'getFacilities', 'page', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["383"],"'useState' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'client' is defined but never used.","'error' is assigned a value but never used.","'message' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'DocumentClassServ' and 'getFacilities'. Either include them or remove the dependency array.",["384"],"'errors' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'ClientDetail' is defined but never used.","'random' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleChangeClient' and 'state.ClientModule.selectedClient'. Either include them or remove the dependency array.",["385"],"'handleAddproduct' is assigned a value but never used.","'DebounceInput' is defined but never used.","'DocumentClassList' is defined but never used.","'setState' is assigned a value but never used.","'success' is assigned a value but never used.","'getSearchfacility' is assigned a value but never used.","'user1' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setUser' and 'user'. Either include them or remove the dependency array.",["386"],"no-native-reassign",["387"],"no-negated-in-lhs",["388"],"'herok' is assigned a value but never used.","'API' is assigned a value but never used.","'Link' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'resp' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'reAuth', 'setUser', and 'user'. Either include them or remove the dependency array.",["389"],"'watch' is assigned a value but never used.","'userServ' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'facilityServ' and 'getFacilities'. Either include them or remove the dependency array.",["390"],"React Hook useEffect has missing dependencies: 'InventoryServ', 'getFacilities', and 'user'. Either include them or remove the dependency array.",["391"],"React Hook useEffect has a missing dependency: 'getFacilities'. Either include it or remove the dependency array.",["392"],["393"],"React Hook useEffect has a missing dependency: 'handleSetPrice'. Either include it or remove the dependency array.",["394"],"'field' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ClientServ', 'getFacilities', and 'user'. Either include them or remove the dependency array.",["395"],"'client' is assigned a value but never used.","'UserContext' is defined but never used.","React Hook useEffect has missing dependencies: 'handleChangeStore' and 'selectedStore'. Either include them or remove the dependency array.",["396"],"React Hook useEffect has missing dependencies: 'handleChangeClinic' and 'selectedClinic'. Either include them or remove the dependency array.",["397"],"React Hook useEffect has missing dependencies: 'LocationServ', 'getFacilities', and 'user'. Either include them or remove the dependency array.",["398"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","React Hook useEffect has missing dependencies: 'ProductEntryServ', 'getFacilities', and 'state.StoreModule.selectedStore'. Either include them or remove the dependency array.",["399"],["400"],"'handleEdit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ProductServ', 'getFacilities', and 'user'. Either include them or remove the dependency array.",["401"],"'Store' is defined but never used.","'StoreList' is defined but never used.","'handleCloseModal' is assigned a value but never used.",["402"],["403"],"'VideoConference' is defined but never used.","'phone' is assigned a value but never used.","'email' is assigned a value but never used.","'nok_name' is assigned a value but never used.","'nok_phoneno' is assigned a value but never used.","'nok_email' is assigned a value but never used.","'nok_relationship' is assigned a value but never used.","'mrn' is assigned a value but never used.","'address' is assigned a value but never used.","'city' is assigned a value but never used.","'lga' is assigned a value but never used.","'country' is assigned a value but never used.","'cashDetails' is assigned a value but never used.","'familyDetails' is assigned a value but never used.","'companyDetails' is assigned a value but never used.","'hmoDetails' is assigned a value but never used.","React Hook useEffect contains a call to 'setSelectedClient'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [state.ClientModule.selectedClient, client, selectedClient] as a second argument to the useEffect Hook.",["404"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'setPassword' is assigned a value but never used.",{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},"no-global-assign","no-unsafe-negation",{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"419","fix":"435"},{"desc":"436","fix":"437"},{"desc":"433","fix":"438"},{"desc":"419","fix":"439"},{"desc":"440","fix":"441"},"Update the dependencies array to be: [ClinicServ, getFacilities, page, user]",{"range":"442","text":"443"},"Update the dependencies array to be: [DocumentClassServ, getFacilities]",{"range":"444","text":"445"},"Update the dependencies array to be: [handleChangeClient, state.ClientModule.selectedClient]",{"range":"446","text":"447"},"Update the dependencies array to be: [setUser, user]",{"range":"448","text":"449"},"Update the dependencies array to be: [reAuth, setUser, user]",{"range":"450","text":"451"},"Update the dependencies array to be: [facilityServ, getFacilities]",{"range":"452","text":"453"},"Update the dependencies array to be: [InventoryServ, getFacilities, user]",{"range":"454","text":"455"},"Update the dependencies array to be: [getFacilities, state.StoreModule.selectedStore]",{"range":"456","text":"457"},"Update the dependencies array to be: [Inventory, getFacilities]",{"range":"458","text":"459"},"Update the dependencies array to be: [handleSetPrice]",{"range":"460","text":"461"},"Update the dependencies array to be: [ClientServ, getFacilities, user]",{"range":"462","text":"463"},"Update the dependencies array to be: [handleChangeStore, selectedStore]",{"range":"464","text":"465"},"Update the dependencies array to be: [handleChangeClinic, selectedClinic]",{"range":"466","text":"467"},"Update the dependencies array to be: [LocationServ, getFacilities, user]",{"range":"468","text":"469"},"Update the dependencies array to be: [ProductEntryServ, getFacilities, state.StoreModule.selectedStore]",{"range":"470","text":"471"},{"range":"472","text":"457"},"Update the dependencies array to be: [ProductServ, getFacilities, user]",{"range":"473","text":"474"},{"range":"475","text":"471"},{"range":"476","text":"457"},"Add dependencies array: [state.ClientModule.selectedClient, client, selectedClient]",{"range":"477","text":"478"},[7145,7147],"[ClinicServ, getFacilities, page, user]",[11271,11273],"[DocumentClassServ, getFacilities]",[1601,1603],"[handleChangeClient, state.ClientModule.selectedClient]",[3023,3025],"[setUser, user]",[3081,3083],"[reAuth, setUser, user]",[10381,10383],"[facilityServ, getFacilities]",[16336,16338],"[InventoryServ, getFacilities, user]",[16478,16511],"[getFacilities, state.StoreModule.selectedStore]",[22351,22362],"[Inventory, getFacilities]",[28049,28051],"[handleSetPrice]",[26520,26522],"[ClientServ, getFacilities, user]",[1149,1151],"[handleChangeStore, selectedStore]",[1104,1106],"[handleChangeClinic, selectedClinic]",[14869,14871],"[LocationServ, getFacilities, user]",[21183,21185],"[ProductEntryServ, getFacilities, state.StoreModule.selectedStore]",[21387,21420],[14978,14980],"[ProductServ, getFacilities, user]",[21192,21194],[21396,21429],[1727,1727],", [state.ClientModule.selectedClient, client, selectedClient]"]