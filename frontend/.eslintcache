[{"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Finance\\Payment.js":"1","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Finance\\PaymentCreate.js":"2","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\index.js":"3","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\context.js":"4","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\feathers.js":"5","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Home.js":"6","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Login.js":"7","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\SignUp.js":"8","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\InventoryModule.js":"9","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\ClinicModule.js":"10","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\CareTeam.js":"11","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\Workspace.js":"12","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\Department.js":"13","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\FacilityHome.js":"14","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\inventory\\InventorySetup.js":"15","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\Employee.js":"16","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\inventory\\InventoryStore.js":"17","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Finance\\FinanceStore.js":"18","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Finance\\ProductEntry.js":"19","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Finance\\ProductExit.js":"20","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Clinic\\ClinicStore.js":"21","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Clinic\\Clinic.js":"22","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Finance\\ClientBill.js":"23","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\inventory\\BillDispenseCreate.js":"24","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\EncounterMgt\\EncounterMain.js":"25","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\helpers\\FacilityPopup.js":"26","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\inventory\\BillPrescriptionCreate.js":"27"},{"size":21970,"mtime":1614583584966,"results":"28","hashOfConfig":"29"},{"size":45221,"mtime":1614641415838,"results":"30","hashOfConfig":"29"},{"size":500,"mtime":1606167681327,"results":"31","hashOfConfig":"29"},{"size":958,"mtime":1611095384833,"results":"32","hashOfConfig":"29"},{"size":638,"mtime":1614054617997,"results":"33","hashOfConfig":"29"},{"size":8388,"mtime":1614165644970,"results":"34","hashOfConfig":"29"},{"size":3070,"mtime":1611089651447,"results":"35","hashOfConfig":"29"},{"size":9542,"mtime":1610481859369,"results":"36","hashOfConfig":"29"},{"size":8619,"mtime":1614055707475,"results":"37","hashOfConfig":"29"},{"size":7966,"mtime":1614055451521,"results":"38","hashOfConfig":"29"},{"size":144,"mtime":1610340849334,"results":"39","hashOfConfig":"29"},{"size":146,"mtime":1610340786924,"results":"40","hashOfConfig":"29"},{"size":148,"mtime":1610340754492,"results":"41","hashOfConfig":"29"},{"size":597,"mtime":1612953434041,"results":"42","hashOfConfig":"29"},{"size":9318,"mtime":1610307391617,"results":"43","hashOfConfig":"29"},{"size":40586,"mtime":1611144169606,"results":"44","hashOfConfig":"29"},{"size":38844,"mtime":1613544987175,"results":"45","hashOfConfig":"29"},{"size":38844,"mtime":1614165763658,"results":"46","hashOfConfig":"29"},{"size":52276,"mtime":1614163882289,"results":"47","hashOfConfig":"29"},{"size":57661,"mtime":1614163882292,"results":"48","hashOfConfig":"29"},{"size":38856,"mtime":1612264335426,"results":"49","hashOfConfig":"29"},{"size":40695,"mtime":1614055518190,"results":"50","hashOfConfig":"29"},{"size":11238,"mtime":1614245676414,"results":"51","hashOfConfig":"29"},{"size":26832,"mtime":1614161732800,"results":"52","hashOfConfig":"29"},{"size":19335,"mtime":1614084118420,"results":"53","hashOfConfig":"29"},{"size":15112,"mtime":1613312865451,"results":"54","hashOfConfig":"29"},{"size":38779,"mtime":1614613902735,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"vuhkqw",{"filePath":"58","messages":"59","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Finance\\Payment.js",["111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Finance\\PaymentCreate.js",["134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"import React, {useState,useContext, useEffect,useRef} from 'react'\r\nimport client from '../../feathers'\r\nimport {DebounceInput} from 'react-debounce-input';\r\nimport { useForm } from \"react-hook-form\";\r\n//import {useHistory} from 'react-router-dom'\r\nimport {UserContext,ObjectContext} from '../../context'\r\nimport {toast} from 'bulma-toast'\r\nimport {ProductCreate} from './Products'\r\nimport Encounter from '../EncounterMgt/Encounter';\r\nvar random = require('random-string-generator');\r\n// eslint-disable-next-line\r\nconst searchfacility={};\r\n\r\nexport default function PaymentCreate(){\r\n    // const { register, handleSubmit,setValue} = useForm(); //, watch, errors, reset \r\n     //const [error, setError] =useState(false)\r\n     const [success, setSuccess] =useState(false)\r\n     const [message,setMessage] = useState(\"\")\r\n     // eslint-disable-next-line\r\n     const [facility,setFacility] = useState()\r\n     const SubwalletTxServ=client.service('subwallettransactions')\r\n     const SubwalletServ=client.service('subwallet')\r\n     const OrderServ=client.service('order')\r\n     const InvoiceServ=client.service('invoice')\r\n     //const history = useHistory()\r\n     const {user} = useContext(UserContext) //,setUser\r\n     // eslint-disable-next-line\r\n     const [currentUser,setCurrentUser] = useState()\r\n     const [type,setType] = useState(\"Bill\")\r\n     const [documentNo,setDocumentNo] = useState(\"\")\r\n     const [totalamount,setTotalamount] = useState(0)\r\n     const [description,setDescription] = useState(null)\r\n     const [productId,setProductId] = useState(\"\")\r\n     const [source,setSource] = useState(\"\")\r\n     const [date,setDate] = useState(\"\")\r\n     const [name,setName] = useState(\"\")\r\n     const [inventoryId,setInventoryId] = useState(\"\")\r\n     const [baseunit,setBaseunit] = useState(\"\")\r\n     const [quantity,setQuantity] = useState(\"\")\r\n     const [sellingprice,setSellingPrice] = useState(\"\")\r\n     const [costprice,setCostprice] = useState(0)\r\n     const [invquantity,setInvQuantity] = useState(\"\")\r\n     const [calcamount,setCalcAmount] = useState(0)\r\n     const [productItem,setProductItem] = useState([])\r\n      const [billingId,setBilllingId]=useState(\"\")  \r\n      const [changeAmount, setChangeAmount] = useState(true)\r\n      const [paymentmode, setPaymentMode] = useState(\"Cash\")\r\n      const [paymentOptions, setPaymentOptions]=useState([])\r\n      const [billMode, setBillMode]=useState(\"\")\r\n      const [productModal, setProductModal]=useState(false)\r\n      const [obj, setObj]=useState(\"\")\r\n      const [amountPaid, setAmountPaid]=useState(0)\r\n      const [balance, setBalance]=useState(0)\r\n      const [buttonState, setButtonState]=useState(false)\r\n      const [partPay,setPartPay]=useState([])\r\n     \r\n     const {state,setState}=useContext(ObjectContext)\r\n     const inputEl = useRef(0);\r\n     let calcamount1\r\n     let hidestatus\r\n  \r\n\r\n    \r\n  let medication =state.financeModule.selectedFinance\r\n  //console.log(state.financeModule.state)\r\n\r\n  const showDocumentation = async (value)=>{\r\n    setProductModal(true)\r\n  }\r\n  const handlecloseModal =()=>{\r\n    setProductModal(false)\r\n   // handleSearch(val)\r\n    }\r\n\r\n  const handleChangeMode= async(value)=>{\r\n        //console.log(value)\r\n       await setPaymentMode(value)\r\n      /*   console.log(paymentOptions)\r\n       let billm= paymentOptions.filter(el=>el.name===value)\r\n       await setBillMode(billm)\r\n        console.log(billm) */\r\n        // at startup\r\n        // check payment mode options from patient financial info\r\n        // load that to select options\r\n        // default to HMO-->company-->family-->cash\r\n        //when chosen\r\n        //append payment mode to order\r\n        //check service contract for pricing info\r\n        // calculate pricing \r\n        // pricing\r\n\r\n\r\n    }\r\n\r\n  const handleRow= async(ProductEntry)=>{\r\n    //console.log(\"b4\",state)\r\n\r\n    //console.log(\"handlerow\",ProductEntry)\r\n\r\n    //await setMedication(ProductEntry)\r\n\r\n    const    newProductEntryModule={\r\n        selectedMedication:ProductEntry,\r\n        show :'detail'\r\n    }\r\n  await setState((prevstate)=>({...prevstate, medicationModule:newProductEntryModule}))\r\n   //console.log(state)\r\n  // ProductEntry.show=!ProductEntry.show\r\n\r\n        }  \r\n \r\n  const [productEntry,setProductEntry]=useState({\r\n         productitems:[],\r\n         date,\r\n         documentNo,\r\n         type,\r\n         totalamount,\r\n         source,\r\n \r\n     })\r\n  \r\n  const productItemI={\r\n         productId,\r\n         name,\r\n         quantity,\r\n         sellingprice,\r\n         amount:calcamount, //||qamount\r\n         baseunit,\r\n         costprice,\r\n         billingId\r\n \r\n     }\r\n     // consider batchformat{batchno,expirydate,qtty,baseunit}\r\n     //consider baseunoit conversions\r\n  const getSearchfacility=async (obj)=>{\r\n       await setObj(obj)\r\n        if (!obj){\r\n            //\"clear stuff\"\r\n            setProductId(\"\")\r\n            setName(\"\")\r\n            setBaseunit(\"\")\r\n            setInventoryId(\"\")\r\n            setSellingPrice(\"\")\r\n            setInvQuantity(\"\")\r\n            setDescription(\"\")\r\n            setCostprice(\"\")\r\n           // setCalcAmount(null)\r\n            return\r\n        }\r\n \r\n         setProductId(obj.productId)\r\n         setName(obj.name)\r\n         setBaseunit(obj.baseunit)\r\n         setInventoryId(obj.inventoryId)\r\n         setSellingPrice(obj.sellingprice) //modify this based on billing mode\r\n         setInvQuantity(obj.quantity)\r\n         setCostprice(obj.costprice)\r\n         setBilllingId(obj.billingId)\r\n\r\n         const contracts=obj.billingDetails.contracts\r\n         //const billingserv=client.service('billing')\r\n        if( billMode.type===\"HMO Cover\"){ //paymentmode\r\n         let contract=contracts.filter(el=>el.source_org===billMode.detail.hmo)\r\n         console.log(contract[0].price)\r\n         setSellingPrice(contract[0].price)\r\n         console.log(sellingprice)\r\n        \r\n        }\r\n        if( billMode.type===\"Company Cover\"){ //paymentmode\r\n            let contract=contracts.filter(el=>el.source_org===billMode.detail.company)\r\n            console.log(contract[0].price)\r\n            setSellingPrice(contract[0].price)\r\n            console.log(sellingprice)\r\n           \r\n           }\r\n          \r\n        /*  setValue(\"facility\", obj._id,  {\r\n             shouldValidate: true,\r\n             shouldDirty: true\r\n         }) */\r\n     }\r\n\r\n     useEffect(() => {\r\n       /*  console.log(obj)\r\n        console.log(billMode)\r\n        if( paymentmode!==\"Cash\" && obj){\r\n            const contracts=obj.billingDetails.contracts\r\n            let contract=contracts.filter(el=>el.source_org===billMode.detail.hmo)\r\n           console.log(contract[0].price)\r\n           setSellingPrice(contract[0].price)\r\n           console.log(sellingprice)\r\n       }\r\n         return () => {\r\n            \r\n         } */\r\n     }, [obj])\r\n\r\n     useEffect(() => {\r\n         setCurrentUser(user)\r\n         //console.log(currentUser)\r\n         return () => {\r\n         \r\n         }\r\n     }, [user])\r\n \r\n     const handleUpdateTotal=async ()=>{\r\n        await setTotalamount(prevtotal=>Number(prevtotal) + Number(calcamount))\r\n     }\r\n \r\n     const handleChangeType=async (e)=>{\r\n         console.log(e.target.value)\r\n         await setType(e.target.value)\r\n     }\r\n \r\n     const handleAmount= async()=>{\r\n         await setDescription(\"\")\r\n        // alert(\"Iam chaning qamount\")\r\n     }\r\n\r\n     const handleClickProd=async()=>{\r\n       /*   console.log(\"amount: \",productItemI.amount)\r\n         console.log(\"qamount: \",qamount)\r\n         console.log(\"calcamount: \",calcamount) */\r\n        if ( quantity===0||quantity===\"\"|| productId===\"\"){\r\n            toast({\r\n                message: 'You need to choose a product and quantity to proceed',\r\n                type: 'is-danger',\r\n                dismissible: true,\r\n                pauseOnHover: true,\r\n              }) \r\n              return \r\n        }\r\n\r\n         await setSuccess(false)\r\n         await setProductItem(\r\n             prevProd=>prevProd.concat(productItemI)\r\n         )\r\n        handleUpdateTotal()\r\n            // generate billing info\r\n            const billInfo={\r\n                orderInfo:{\r\n                    orderId:medication._id,\r\n                    orderObj:medication,\r\n                  },\r\n                  serviceInfo:{            \r\n                    price: productItemI.sellingprice,\r\n                    quantity: productItemI.quantity,\r\n                    productId: productItemI.productId,\r\n                    name: productItemI.name,\r\n                    baseunit: productItemI.baseunit,\r\n                    amount:productItemI.amount,\r\n                    billingId:productItemI.billingId,\r\n                    createdby:user._id,\r\n                  },\r\n                  paymentInfo:{},\r\n                  participantInfo:{\r\n                    billingFacility:medication.destination,\r\n                    billingFacilityName:medication.destination_name,\r\n                    locationId:state.StoreModule.selectedStore._id, //selected location,\r\n                    clientId:medication.clientId,\r\n                    client:medication.client,\r\n                    paymentmode:billMode\r\n                  },\r\n                  createdBy:user.id,\r\n                  billing_status:\"Unpaid\"\r\n                }\r\n\r\n        //update order\r\n        \r\n        OrderServ.patch(medication._id,{\r\n            order_status:\"Billed\",\r\n            billInfo,\r\n        }).then((resp)=>{\r\n           // medication=resp\r\n           // console.log(resp)\r\n             handleRow(resp) \r\n            //update dispense\r\n\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n        \r\n        //update status(billed) + action()\r\n        //?attached chosen product to medication\r\n        //dispense helper?\r\n         setName(\"\")\r\n         setBaseunit(\"\")\r\n         setQuantity(\"\")\r\n         setInventoryId(\"\")\r\n         setSellingPrice(\"\")\r\n         setInvQuantity(\"\")\r\n             handleAmount()\r\n        // setCalcAmount(null)\r\n        await setSuccess(true)\r\n        /* console.log(success)\r\n        console.log(qamount)\r\n        console.log(productItem) */\r\n        setChangeAmount(true)\r\n     }\r\n   //check user for facility or get list of facility  \r\n    /*  useEffect(()=>{\r\n         //setFacility(user.activeProductEntry.FacilityId)//\r\n       if (!user.stacker){\r\n           console.log(currentUser)\r\n            /* setValue(\"facility\", user.currentEmployee.facilityDetail._id,  {\r\n             shouldValidate: true,\r\n             shouldDirty: true\r\n         })  \r\n \r\n       }\r\n     }) */\r\n \r\n     const handleQtty=async(e)=>{\r\n         if (invquantity<e.target.value){\r\n             toast({\r\n                 message: 'You can not sell more quantity than exist in inventory ' ,\r\n                 type: 'is-danger',\r\n                 dismissible: true,\r\n                 pauseOnHover: true,\r\n               })\r\n             return\r\n         }\r\n         setQuantity(e.target.value)\r\n         calcamount1=quantity*sellingprice\r\n         await setCalcAmount(calcamount1)\r\n         console.log(calcamount)\r\n     }\r\n \r\n     useEffect( () => {\r\n          setProductEntry({\r\n             \r\n             date,\r\n             documentNo,\r\n             type,\r\n             totalamount,\r\n             source,\r\n         })\r\n\r\n        setCalcAmount(quantity*sellingprice) \r\n         return () => {\r\n             \r\n         }\r\n     },[date])\r\n \r\n     const resetform=()=>{\r\n      setType(\"Sales\")\r\n     setDocumentNo(\"\")\r\n     setTotalamount(\"\")\r\n     setProductId(\"\")\r\n     setSource(\"\")\r\n     setDate(\"\")\r\n     setName(\"\")\r\n     setBaseunit()\r\n     setCostprice()\r\n     setProductItem([])\r\n     }\r\n\r\n\r\n     const handleMedicationDone= async()=>{ //handle selected single order\r\n        //console.log(\"b4\",state)\r\n    \r\n        //console.log(\"handlerow\",ProductEntry)\r\n    \r\n       // await setSelectedMedication(\"\")\r\n    \r\n        const    newProductEntryModule={\r\n            selectedMedication:{},\r\n            show :'create'\r\n        }\r\n      await setState((prevstate)=>({...prevstate, medicationModule:newProductEntryModule}))\r\n       //console.log(state)\r\n      // ProductEntry.show=!ProductEntry.show\r\n    \r\n    }\r\n \r\n     const onSubmit = async(e) =>{\r\n         e.preventDefault();\r\n         setMessage(\"\")\r\n         //setError(false)\r\n         setSuccess(false)\r\n         await setProductEntry({\r\n             \r\n             date,\r\n             documentNo,\r\n             type,\r\n             totalamount,\r\n             source,\r\n         })\r\n         productEntry.productitems=productItem\r\n         productEntry.createdby=user._id\r\n         productEntry.transactioncategory=\"debit\"\r\n        \r\n          // console.log(\"b4 facility\",productEntry);\r\n           if (user.currentEmployee){\r\n          productEntry.facility=user.currentEmployee.facilityDetail._id  // or from facility dropdown\r\n           }else{\r\n             toast({\r\n                 message: 'You can not remove inventory from any organization',\r\n                 type: 'is-danger',\r\n                 dismissible: true,\r\n                 pauseOnHover: true,\r\n               }) \r\n               return\r\n           }\r\n           \r\n           if (state.StoreModule.selectedStore._id){\r\n             productEntry.storeId=state.StoreModule.selectedStore._id\r\n           }else{\r\n             toast({\r\n                 message: 'You need to select a store before removing inventory',\r\n                 type: 'is-danger',\r\n                 dismissible: true,\r\n                 pauseOnHover: true,\r\n               }) \r\n               return\r\n           }\r\n       } \r\n\r\n    const handleChangeAmount=()=>{\r\n        setChangeAmount((rev)=>(!rev))\r\n        \r\n    }\r\n\r\n    const newclient=async ()=>{\r\n        await  setProductItem([])\r\n    }\r\n    const handleAccept=async()=>{\r\n        await setButtonState(true)\r\n        if (paymentmode===\"\"||amountPaid===0|| amountPaid===\"\"){\r\n            toast({\r\n                message: 'Kindly choose payment mode or enter amount' ,\r\n                type: 'is-danger',\r\n                dismissible: true,\r\n                pauseOnHover: true,\r\n              })\r\n              await setButtonState(false)\r\n              return\r\n        }\r\n        let obj={\r\n           // toWallet:{ type: Schema.Types.ObjectId, ref:'facility', }, //receiving money\r\n            //fromWallet:{ type: Schema.Types.ObjectId, ref:'facility', },//sending money\r\n            //subwallet:{ type: Schema.Types.ObjectId, ref:'subwallet', },\r\n            client:medication.participantInfo.client._id,\r\n            organization:user.employeeData[0].facilityDetail._id,\r\n            category:\"credit\", //debit/credit\r\n            amount:amountPaid,\r\n            description: description,\r\n           \r\n            toName:user.employeeData[0].facilityDetail.facilityName,\r\n            fromName:medication.participantInfo.client.firstname + \" \"+ medication.participantInfo.client.lastname,\r\n            createdby: user._id,\r\n            \r\n           // refBill:[{ type: Schema.Types.ObjectId, ref:'bills'  }], //billid to be paid : ref invoice to pay\r\n           // info:{ type: Schema.Types.Mixed},\r\n            paymentmode:paymentmode,\r\n            \r\n            facility: user.employeeData[0].facilityDetail._id,\r\n            locationId: state.LocationModule.selectedLocation._id,\r\n            type: \"Deposit\"\r\n\r\n        }\r\n       SubwalletTxServ.create(obj)\r\n       .then((resp)=>{\r\n           console.log(resp)\r\n\r\n        toast({\r\n            message: 'Deposit accepted succesfully',\r\n            type: 'is-success',\r\n            dismissible: true,\r\n            pauseOnHover: true,\r\n          })\r\n          setAmountPaid(0)\r\n       })\r\n       .catch((err)=>{\r\n        toast({\r\n            message: 'Error accepting deposit ' + err,\r\n            type: 'is-danger',\r\n            dismissible: true,\r\n            pauseOnHover: true,\r\n          })\r\n\r\n       })\r\n       await setButtonState(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const oldname=medication.participantInfo.client.firstname + \" \"+ medication.participantInfo.client.lastname\r\n       // console.log(\"oldname\",oldname)\r\n        setSource(medication.participantInfo.client.firstname + \" \"+ medication.participantInfo.client.lastname)\r\n\r\n        const newname=source\r\n       // console.log(\"newname\",newname)\r\n        if (oldname!==newname){\r\n            //newdispense\r\n        \r\n        setProductItem([])\r\n        setTotalamount(0)\r\n\r\n        }\r\n        if (state.financeModule.state){\r\n            medication.show=\"none\"\r\n            medication.proposedpayment={\r\n                balance:0,\r\n                paidup:medication.paymentInfo.paidup + medication.paymentInfo.balance,\r\n                amount:medication.paymentInfo.balance\r\n            }\r\n            //no payment detail push\r\n          \r\n         setProductItem(\r\n            prevProd=>prevProd.concat(medication)\r\n        )\r\n        }else{\r\n            if(productItem.length>0){\r\n                setProductItem(\r\n                    prevProd=>prevProd.filter(el=>el._id!==medication._id)\r\n                )\r\n            }\r\n        }\r\n\r\n       // const paymentoptions= []\r\n        //const info = medication.participantInfo.client.paymentinfo\r\n        //let billme={}\r\n        getFacilities()\r\n       \r\n        return () => {\r\n           \r\n        }\r\n    }, [state.financeModule])\r\n\r\n    const getTotal= async()=>{\r\n        setTotalamount(0)\r\n        productItem.forEach(el=>{\r\n            if (el.show===\"none\"){\r\n                setTotalamount(prevtotal=>Number(prevtotal) + Number(el.serviceInfo.amount) )\r\n            }\r\n            if (el.show===\"flex\"){\r\n                setTotalamount(prevtotal=>Number(prevtotal) + Number(el.partPay) )\r\n            }\r\n          \r\n            // \r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(productItem)\r\n       getTotal()\r\n        return () => {\r\n        \r\n        }\r\n    }, [productItem])\r\n\r\n    const getFacilities= async()=>{\r\n       \r\n        // console.log(\"here b4 server\")\r\n        const findProductEntry= await SubwalletServ.find(\r\n        {query: {\r\n           \r\n            client:medication.participantInfo.client._id,\r\n            organization:user.employeeData[0].facilityDetail._id,\r\n            //storeId:state.StoreModule.selectedStore._id,\r\n            //clientId:state.ClientModule.selectedClient._id,\r\n            $limit:100,\r\n            $sort: {\r\n                createdAt: -1\r\n            }\r\n            }})\r\n             console.log(findProductEntry)\r\n\r\n     // console.log(\"balance\", findProductEntry.data[0].amount)\r\n        if (findProductEntry.data.length>0){\r\n            await setBalance(findProductEntry.data[0].amount)\r\n        }else{\r\n            await setBalance(0) \r\n            \r\n        } \r\n\r\n      //  await setState((prevstate)=>({...prevstate, currentClients:findProductEntry.groupedOrder}))\r\n        }   \r\n\r\n\r\n\r\n     useEffect(() => {\r\n       // const medication =state.medicationModule.selectedMedication\r\n         const today=new Date().toLocaleString()\r\n         //console.log(today)\r\n         setDate(today)\r\n         const invoiceNo=random(6,'uppernumeric')\r\n         setDocumentNo(invoiceNo)\r\n\r\n            getFacilities()\r\n            SubwalletServ.on('created', (obj)=>getFacilities())\r\n            SubwalletServ.on('updated', (obj)=>getFacilities())\r\n            SubwalletServ.on('patched', (obj)=>getFacilities())\r\n            SubwalletServ.on('removed', (obj)=>getFacilities())\r\n\r\n         return async() => {\r\n            const    newProductEntryModule={\r\n                selectedFinance:{},\r\n                show :'create'\r\n                }\r\n           await setState((prevstate)=>({...prevstate, financeModule:newProductEntryModule}))\r\n           await setPartPay([])\r\n         }\r\n     }, [])\r\n\r\n  /*   useEffect(() => {\r\n        calcamount1=quantity*sellingprice\r\n         setCalcAmount(calcamount1)\r\n         console.log(calcamount)\r\n         setChangeAmount(true)\r\n        return () => {\r\n            \r\n        }\r\n    }, [quantity]) */\r\n\r\n    \r\n    const handleChangePart= async(bill, e)=>{\r\n        console.log(bill, e.target.value)\r\n        if(e.target.value===\"Part\"){\r\n            bill.show=\"flex\"\r\n        setPartPay((prev)=>prev.concat(bill))\r\n        }\r\n      \r\n        if(e.target.value===\"Full\"){\r\n            bill.show=\"none\"\r\n            \r\n            let item=  await productItem.find(el=>\r\n                el._id===bill._id\r\n            )\r\n            const   payObj={\r\n                amount:  item.paymentInfo.balance,\r\n                mode:\"Full\",\r\n                date: new Date().toLocaleString()\r\n            }\r\n            //item.partPay=\"\"\r\n           // item.paymentInfo.paymentDetails.push(payObj)\r\n            item.proposedpayment={\r\n                balance:Number(item.paymentInfo.balance) - Number(payObj.amount),\r\n                paidup:Number(item.paymentInfo.paidup) + Number(payObj.amount),\r\n                amount:payObj.amount\r\n            }\r\n           // item.paymentInfo.balance=item.paymentInfo.balance - item.paymentInfo.balance\r\n          //  item.paymentInfo.paidup=Number(item.paymentInfo.paidup) + Number(payObj.amount)\r\n            getTotal()\r\n            setPartPay((prev)=>prev.concat(bill))\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    const handlePartAmount= async(bill,e)=>{\r\n        \r\n        let partAmount = e.target.value\r\n       // bill.partPay=partAmount\r\n       //const itemList=productItem\r\n       if (partAmount===\"\" ||partAmount===0  ){\r\n        toast({\r\n            message: 'Please enter an amount as part payment',\r\n            type: 'is-danger',\r\n            dismissible: true,\r\n            pauseOnHover: true,\r\n          })\r\n        return\r\n       }\r\n       let item=  await productItem.find(el=>\r\n        el._id===bill._id\r\n        )\r\n    item.partPay=partAmount\r\n    setPartPay((prev)=>prev.concat(bill))     \r\n        //setProductItem(productItem)\r\n    }\r\n\r\n    const handleUpdate= async(bill,e)=>{\r\n        if (bill.partPay===\"\" ||bill.partPay===0||bill.partPay===undefined  ){\r\n            toast({\r\n                message: 'Please enter an amount as part payment',\r\n                type: 'is-danger',\r\n                dismissible: true,\r\n                pauseOnHover: true,\r\n              })\r\n            return\r\n           }\r\n       // console.log(bill)\r\n        let item=  await productItem.find(el=>\r\n            el._id===bill._id\r\n        )\r\n       // console.log(item)\r\n        /* item.partPay=partAmount\r\n        console.log(item)\r\n        console.log(productItem) */\r\n        \r\n        let partAmount= item.partPay\r\n       \r\n        if (bill.show===\"flex\"){\r\n                const  payObj={\r\n                amount:  partAmount,\r\n                mode:\"Part\",\r\n                date: new Date().toLocaleString()\r\n            }\r\n           // item.paymentInfo.paymentDetails.push(payObj)\r\n            item.proposedpayment={\r\n                balance:Number(item.paymentInfo.balance) - Number(payObj.amount),\r\n                paidup:Number(item.paymentInfo.paidup) + Number(payObj.amount),\r\n                amount:payObj.amount\r\n            }\r\n            /* item.paymentInfo.balance=item.paymentInfo.balance-partAmount\r\n            item.paymentInfo.paidup=Number(item.paymentInfo.paidup)+ Number(partAmount) */\r\n\r\n        }\r\n\r\n        /* if (bill.show===\"none\"){\r\n            const   payObj={\r\n                amount:  item.paymentInfo.balance,\r\n                mode:\"Full\",\r\n                date: new Date().toLocaleString()\r\n            }\r\n            item.paymentInfo.paymentDetails.push(payObj)\r\n            item.paymentInfo.balance=item.paymentInfo.balance - item.paymentInfo.balance\r\n            }\r\n            \r\n */\r\n        \r\n        getTotal()\r\n        setPartPay((prev)=>prev.concat(bill))\r\n        toast({\r\n            message: 'Part payment updated successfully',\r\n            type: 'is-success',\r\n            dismissible: true,\r\n            pauseOnHover: true,\r\n          })\r\n\r\n    }\r\n\r\n    const handlePayment= async ()=>{\r\n           //1. check if there is sufficient amount\r\n           if ( totalamount>balance){\r\n            toast({\r\n                message: 'Total amount due greater than money received. Kindly top up account or reduce number of bills to be paid',\r\n                type: 'is-success',\r\n                dismissible: true,\r\n                pauseOnHover: true,\r\n              })\r\n    \r\n              return\r\n           }\r\n          \r\n           \r\n           \r\n    productItem.forEach(el=>{\r\n            if (!el.proposedpayment.amount){\r\n             toast({\r\n                 message: 'one or more bills do not have a payment method selected',\r\n                 type: 'is-danger',\r\n                 dismissible: true,\r\n                 pauseOnHover: true,\r\n               })\r\n             return\r\n             }\r\n            })\r\n\r\n             //transform \r\n    productItem.forEach(el=>{\r\n            if (el.show===\"flex\"){\r\n                    const  payObj={\r\n                    amount:  el.proposedpayment.amount,\r\n                    mode:\"Part\",\r\n                    date: new Date().toLocaleString()\r\n                }\r\n            el.paymentInfo.paymentDetails.push(payObj)\r\n            }\r\n\r\n            if (el.show===\"none\"){\r\n                const  payObj={\r\n                amount:  el.proposedpayment.amount,\r\n                mode:\"Full\",\r\n                date: new Date().toLocaleString()\r\n                }\r\n                el.paymentInfo.paymentDetails.push(payObj)\r\n                }\r\n\r\n            })\r\n\r\n        let allItems=productItem\r\n\r\n           allItems.forEach(el=>{\r\n\r\n            el.paymentInfo.balance = el.proposedpayment.balance\r\n            el.paymentInfo.paidup = el.proposedpayment.paidup\r\n            el.paymentInfo.amountpaid = el.proposedpayment.amount\r\n\r\n            if (el.paymentInfo.balance === 0){\r\n                el.billing_status=\"Fully Paid\"\r\n            }else{\r\n                el.billing_status=\"Partially Paid\"\r\n            }\r\n            el.show=\"none\"\r\n            el.checked=false\r\n            delete el.proposedpayment\r\n            delete el.partPay\r\n           })\r\n           \r\n\r\n           const obj ={\r\n            clientId:medication.participantInfo.client._id,//sending money\r\n            clientName: source ,\r\n            client:medication.participantInfo.client,\r\n            facilityId:user.employeeData[0].facilityDetail._id,\r\n            invoiceNo:documentNo,\r\n            totalamount:totalamount,\r\n            createdby:user._id,\r\n            status:\"Fully Paid\", //billid to be paid : ref invoice to pay\r\n            bills:allItems,\r\n            balance:balance,\r\n            facilityName:user.employeeData[0].facilityDetail.facilityName\r\n           }\r\n\r\n           console.log(obj)\r\n\r\n           \r\n            InvoiceServ.create(obj)\r\n            .then( async(resp)=>{\r\n                setProductItem([])\r\n                toast({\r\n                    message: 'payment successful',\r\n                    type: 'is-success',\r\n                    dismissible: true,\r\n                    pauseOnHover: true,\r\n                  })\r\n                  const    newProductEntryModule={\r\n                    selectedFinance:{},\r\n                    show :'create'\r\n                }\r\n              await setState((prevstate)=>({...prevstate, finance:newProductEntryModule}))\r\n            })\r\n            .catch((err)=>{\r\n                toast({\r\n                    message: 'Error occurred with payment' + err,\r\n                    type: 'is-danger',\r\n                    dismissible: true,\r\n                    pauseOnHover: true,\r\n                  }) \r\n            })\r\n\r\n        \r\n           \r\n           //2. call single end point for billspayment?\r\n\r\n           //2.1 create subwallet transaction- debit\r\n\r\n           //2.2 update subwallet\r\n\r\n           //2.3 mark orders as paid\r\n\r\n           //2.4 mark bills as paid\r\n\r\n        }\r\n// console.log(\"simpa\")\r\n     return (\r\n         <>\r\n             <div className=\"card card-overflow\">\r\n             <div className=\"card-header\">\r\n                 <p className=\"card-header-title\">\r\n                     Pay Bill\r\n                 </p>\r\n                 <button className=\"button is-success is-small btnheight mt-2\" >\r\n                    Balance: N {balance}\r\n                 </button>\r\n             </div>\r\n             <div className=\"card-content \">\r\n    \r\n            {/*  <form onSubmit={onSubmit}>  */}\r\n             <div className=\"field is-horizontal\">\r\n             <div className=\"field-body\">\r\n         \r\n             <div className=\"field\">\r\n                     <p className=\"control has-icons-left has-icons-right\">\r\n                         <input className=\"input is-small\" /* ref={register({ required: true })} */ value={source} name=\"client\" type=\"text\" onChange={e=>setSource(e.target.value)} placeholder=\"Client\" />\r\n                         <span className=\"icon is-small is-left\">\r\n                             <i className=\"fas fa-hospital\"></i>\r\n                         </span>                    \r\n                     </p>\r\n                 </div>\r\n                 <div className=\"field\">\r\n                 <p className=\"control has-icons-left\">\r\n                     <input className=\"input is-small\" /* ref={register} */ name=\"documentNo\" value={documentNo} type=\"text\" onChange={e=>setDocumentNo(e.target.value)} placeholder=\" Invoice Number\"/>\r\n                     <span className=\"icon is-small is-left\">\r\n                     <i className=\"fas fa-phone-alt\"></i>\r\n                     </span>\r\n                 </p>\r\n             </div>\r\n                 \r\n            \r\n                </div>\r\n             </div>\r\n             <div className=\"field is-horizontal\">\r\n             <div className=\"field-body\" >\r\n             <div className=\"field\">\r\n             <label className=\"label is-small\">Total Amount Due:</label>\r\n             </div>\r\n             <div className=\"field\" style={{width:\"40%\"}}>\r\n                 <p className=\"control has-icons-left \" /* style={{display:\"none\"}} */>\r\n                     <input className=\"input is-small\"  disabled={changeAmount} value={totalamount} name=\"totalamount\"  onChange={e=>setTotalamount(e.target.value)} placeholder=\"Amount\"  />\r\n                     <span className=\"icon is-small is-left\">\r\n                     <i className=\"fas fa-dollar-sign\"></i>\r\n                     </span>\r\n                 </p>\r\n                \r\n \r\n             </div> \r\n            \r\n             </div>\r\n          </div>\r\n                \r\n               {/*   </form>   */} \r\n                \r\n            \r\n          {/* array of ProductEntry items */}\r\n         \r\n         <label className=\"label is-small \">Payment Information:</label>\r\n         <div className=\"field is-horizontal\">\r\n             <div className=\"field-body\">\r\n             <div className=\"field\">    \r\n                    <div className=\"control\">\r\n                        <div className=\"select is-small \">\r\n                            <select name=\"paymentmode\" value={paymentmode} onChange={(e)=>handleChangeMode(e.target.value)} className=\"selectadd\" >\r\n                                <option value=\"\">Payment Mode </option>\r\n                                <option value=\"Cash\">Cash</option>\r\n                                <option value=\"Wallet\">Wallet </option>\r\n                                <option value=\"Wallet\">Bank Transfer </option>\r\n                                <option value=\"Card\">Card</option>\r\n                                <option value=\"Cheque\">Cheque</option> \r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n             <div className=\"field\" >\r\n                 <p className=\"control has-icons-left\" >\r\n                     <input className=\"input is-small\"  name=\"order\" value={amountPaid} type=\"text\" onChange={ e=> setAmountPaid(e.target.value)} placeholder=\"Amount\"  />\r\n                     <span className=\"icon is-small is-left\">\r\n                     <i className=\"fas fa-hashtag\"></i>\r\n                     </span>\r\n                 </p>\r\n             </div> \r\n             <div className=\"field\">\r\n                <p className=\"control\">\r\n                     <button className=\"button is-info is-small  is-pulled-right selectadd\" disabled={buttonState}>\r\n                       <span className=\"is-small\" onClick={handleAccept} >Accept</span>\r\n                     </button>\r\n                 </p>\r\n             </div>\r\n             </div>\r\n             </div>\r\n            \r\n          \r\n         <div className=\"field is-horizontal pullup\">\r\n             <div className=\"field-body\" >\r\n             <div className=\"field\">\r\n             <label className=\"label is-small\">Payment Details:</label>\r\n             </div>\r\n             <div className=\"field\" >\r\n                 <p className=\"control has-icons-left \" /* style={{display:\"none\"}} */>\r\n                     <input className=\"input is-small\"  name=\"description\"  value={description} type=\"text\"  onChange={async e=> await setDescription(e.target.value)}  placeholder=\"Payment Details\"  />\r\n                     <span className=\"icon is-small is-left\">\r\n                     <i className=\"fas fa-dollar-sign\"></i>\r\n                     </span>\r\n                 </p>\r\n                \r\n \r\n             </div> \r\n            \r\n             </div>\r\n          </div>\r\n             \r\n        {(productItem.length>0) && <>\r\n            <label>Product Items:</label>\r\n        <div className=\"vscrollable-acc\">\r\n             \r\n          <table className=\"table is-striped  is-hoverable is-fullwidth is-scrollable \">\r\n                 <thead>\r\n                     <tr>\r\n                     <th><abbr title=\"Serial No\">S/No</abbr></th>\r\n                     <th><abbr title=\"Category\">Category</abbr></th>\r\n                     <th><abbr title=\"Description\">Description</abbr></th>\r\n                    \r\n                     <th><abbr title=\"Cost Price\">Type</abbr></th>\r\n                     <th><abbr title=\"Amount\">Amount</abbr></th>\r\n                     {/* <th><abbr title=\"Cost Price\">Amount</abbr></th> */}\r\n                     {/* <th><abbr title=\"Actions\">Actions</abbr></th> */}\r\n                     </tr>\r\n                 </thead>\r\n                 <tfoot>\r\n                     \r\n                 </tfoot>\r\n                 <tbody>\r\n                    { productItem.map((ProductEntry, i)=>(\r\n                          <tr key={i}>\r\n                         <th>{i+1}</th>\r\n                         <th>{ProductEntry.orderInfo.orderObj.order_category}</th>\r\n                         <td>{ProductEntry.serviceInfo.name}</td>\r\n                         <td><label className=\" is-small\">\r\n                             <input  type=\"radio\" name={ProductEntry._id} value=\"Full\" checked={ProductEntry.show===\"none\"}  onChange={(e)=>{handleChangePart(ProductEntry,e)}}/>\r\n                               <span > Full</span>\r\n                              </label> <br/>\r\n                              <label className=\" is-small\">\r\n                             <input type=\"radio\" name={ProductEntry._id}  value=\"Part\" onChange={(e)=>handleChangePart(ProductEntry,e)}/>\r\n                             <span> Part </span>\r\n                              </label>\r\n                              <div className=\"field has-addons\" style={{display:`${ProductEntry.show}`}}>\r\n                              <div className=\"control\">\r\n                                  <input  className=\"input selectadd\" type=\"text\" name={ProductEntry._id}  /* value={ProductEntry.partPay}  */  onChange={(e)=>handlePartAmount(ProductEntry,e)} />\r\n                                  </div> \r\n                                  <div className=\"control\">\r\n                                  <button className=\"button is-info selectadd\" onClick={(e)=>handleUpdate(ProductEntry,e)}>Update</button>\r\n                                  </div>\r\n                                  </div>\r\n                             {/*  {ProductEntry.partPay} */}\r\n                              </td>\r\n                         <td>\r\n                            <p><strong>Balance Due:</strong>{ProductEntry.paymentInfo.balance}  ({ProductEntry.proposedpayment.balance})</p>\r\n                            <p><strong>Paid Up:</strong>{ProductEntry.paymentInfo.paidup} ({ProductEntry.proposedpayment.paidup })</p>\r\n                            <p><strong>Amount:</strong>{ProductEntry.paymentInfo.amountDue}</p>\r\n                         </td>\r\n\r\n                          \r\n                        {/* <td>{ProductEntry.amount}</td> */}\r\n                        {/*  <td><span className=\"showAction\"  >x</span></td> */}\r\n                         </tr>\r\n                     ))}\r\n                 </tbody>\r\n                 </table>\r\n                 </div>    \r\n                 <div className=\"field mt-2 is-grouped\">\r\n                    <p className=\"control\">\r\n                        <button className=\"button is-success is-small\" disabled={!productItem.length>0} onClick={handlePayment}>\r\n                            Pay\r\n                        </button>\r\n                    </p>\r\n                  {/* <p className=\"control\">\r\n                     <button className=\"button is-info is-small\" disabled={!productItem.length>0} onClick={onSubmit} >\r\n                         Generate Invoice\r\n                     </button>\r\n                 </p>  */}\r\n                 </div>\r\n        \r\n            </>\r\n        }   \r\n             \r\n             \r\n             </div>\r\n             </div>\r\n             <div className={`modal ${productModal?\"is-active\":\"\"}` }>\r\n                                    <div className=\"modal-background\"></div>\r\n                                    <div className=\"modal-card  modalbkgrnd\">\r\n                                        <header className=\"modal-card-head  btnheight\">\r\n                                        <p className=\"modal-card-title\">Documentation</p>\r\n                                        <button className=\"delete\" aria-label=\"close\"  onClick={handlecloseModal}></button>\r\n                                        </header>\r\n                                        <section className=\"modal-card-body modalcolor\">\r\n                                      \r\n                                         <Encounter standalone=\"true\" />\r\n                                        </section> \r\n                                        {/* <footer className=\"modal-card-foot\">\r\n                                        <button className=\"button is-success\">Save changes</button>\r\n                                        <button className=\"button\">Cancel</button>\r\n                                        </footer>  */}\r\n                                   </div>\r\n                                </div>      \r\n         </>\r\n     )\r\n    \r\n }\r\n\r\n export  function InventorySearch({getSearchfacility,clear}) {\r\n    \r\n    const productServ=client.service('inventory')\r\n    const [facilities,setFacilities]=useState([])\r\n     // eslint-disable-next-line\r\n     const [searchError, setSearchError] =useState(false)\r\n     // eslint-disable-next-line\r\n    const [showPanel, setShowPanel] =useState(false)\r\n     // eslint-disable-next-line\r\n   const [searchMessage, setSearchMessage] = useState(\"\") \r\n   // eslint-disable-next-line \r\n   const [simpa,setSimpa]=useState(\"\")\r\n   // eslint-disable-next-line \r\n   const [chosen,setChosen]=useState(false)\r\n   // eslint-disable-next-line \r\n   const [count,setCount]=useState(0)\r\n   const inputEl=useRef(null)\r\n   const [val,setVal]=useState(\"\")\r\n   const {user} = useContext(UserContext) \r\n   const {state}=useContext(ObjectContext)\r\n    const [productModal,setProductModal]=useState(false)\r\n\r\n   const handleRow= async(obj)=>{\r\n        await setChosen(true)\r\n        //alert(\"something is chaning\")\r\n       getSearchfacility(obj)\r\n       \r\n       await setSimpa(obj.name)\r\n       \r\n        // setSelectedFacility(obj)\r\n        setShowPanel(false)\r\n        await setCount(2)\r\n        /* const    newfacilityModule={\r\n            selectedFacility:facility,\r\n            show :'detail'\r\n        }\r\n   await setState((prevstate)=>({...prevstate, facilityModule:newfacilityModule})) */\r\n   //console.log(state)\r\n    }\r\n    const handleBlur=async(e)=>{\r\n         if (count===2){\r\n             console.log(\"stuff was chosen\")\r\n         }\r\n       \r\n       /*  console.log(\"blur\")\r\n         setShowPanel(false)\r\n        console.log(JSON.stringify(simpa))\r\n        if (simpa===\"\"){\r\n            console.log(facilities.length)\r\n            setSimpa(\"abc\")\r\n            setSimpa(\"\")\r\n            setFacilities([])\r\n            inputEl.current.setValue=\"\"\r\n        }\r\n        console.log(facilities.length)\r\n        console.log(inputEl.current) */\r\n    }\r\n    const handleSearch=async(value)=>{\r\n        setVal(value)\r\n        if (value===\"\"){\r\n            setShowPanel(false)\r\n            getSearchfacility(false)\r\n            return\r\n        }\r\n        const field='name' //field variable\r\n\r\n       \r\n        if (value.length>=3 ){\r\n            productServ.find({query: {     //service\r\n                 [field]: {\r\n                     $regex:value,\r\n                     $options:'i'\r\n                    \r\n                 },\r\n                 facility: user.currentEmployee.facilityDetail._id,\r\n                 storeId: state.StoreModule.selectedStore._id,\r\n                 $limit:10,\r\n                 $sort: {\r\n                     createdAt: -1\r\n                   }\r\n                     }}).then((res)=>{\r\n              console.log(\"product  fetched successfully\") \r\n              console.log(res.data) \r\n                setFacilities(res.data)\r\n                 setSearchMessage(\" product  fetched successfully\")\r\n                 setShowPanel(true)\r\n             })\r\n             .catch((err)=>{\r\n                toast({\r\n                    message: 'Error creating ProductEntry ' + err,\r\n                    type: 'is-danger',\r\n                    dismissible: true,\r\n                    pauseOnHover: true,\r\n                  })\r\n             })\r\n         }\r\n        else{\r\n            console.log(\"less than 3 \")\r\n            console.log(val)\r\n            setShowPanel(false)\r\n            await setFacilities([])\r\n            console.log(facilities)\r\n        }\r\n    }\r\n\r\n    const handleAddproduct =()=>{\r\n        setProductModal(true) \r\n    }\r\n    const handlecloseModal =()=>{\r\n        setProductModal(false)\r\n        handleSearch(val)\r\n    }\r\n    useEffect(() => {\r\n       if (clear){\r\n           console.log(\"success has changed\",clear)\r\n           setSimpa(\"\")\r\n       }\r\n        return () => {\r\n            \r\n        }\r\n    }, [clear] )\r\n    return (\r\n        <div>\r\n            <div className=\"field\">\r\n                <div className=\"control has-icons-left  \">\r\n                    <div className={`dropdown ${showPanel?\"is-active\":\"\"}`} style={{width:\"100%\"}}>\r\n                        <div className=\"dropdown-trigger\" style={{width:\"100%\"}}>\r\n                            <DebounceInput className=\"input is-small  is-expanded\" \r\n                                type=\"text\" placeholder=\"Search Product\"\r\n                                value={simpa}\r\n                                minLength={3}\r\n                                debounceTimeout={400}\r\n                                onBlur={(e)=>handleBlur(e)}\r\n                                onChange={(e)=>handleSearch(e.target.value)}\r\n                                inputRef={inputEl}\r\n                                  />\r\n                            <span className=\"icon is-small is-left\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </span>\r\n                        </div>\r\n                        {/* {searchError&&<div>{searchMessage}</div>} */}\r\n                        <div className=\"dropdown-menu expanded\" style={{width:\"100%\"}}>\r\n                            <div className=\"dropdown-content\">\r\n                          { facilities.length>0?\"\":<div className=\"dropdown-item\" /* onClick={handleAddproduct} */> <span> {val} is not in your inventory</span> </div>}\r\n\r\n                              {facilities.map((facility, i)=>(\r\n                                    \r\n                                    <div className=\"dropdown-item\" key={facility._id} onClick={()=>handleRow(facility)}>\r\n                                        \r\n                                        <div><span>{facility.name}</span></div>\r\n                                        <div><span><strong>{facility.quantity}</strong></span>\r\n                                        <span>{facility.baseunit}(s) remaining</span>\r\n                                        <span className=\"padleft\"><strong>Price:</strong> N{facility.sellingprice}</span></div>\r\n                                        \r\n                                    </div>\r\n                                    \r\n                                    ))}\r\n                                    \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\index.js",[],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\context.js",[],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\feathers.js",["162","163"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Home.js",["164","165","166","167","168"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Login.js",["169","170","171"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\SignUp.js",["172","173"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\InventoryModule.js",["174","175","176","177"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\ClinicModule.js",["178","179","180","181"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\CareTeam.js",[],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\Workspace.js",[],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\Department.js",[],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\FacilityHome.js",[],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\inventory\\InventorySetup.js",[],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\facility\\Employee.js",["182","183"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\inventory\\InventoryStore.js",["184","185","186","187","188","189","190","191"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Finance\\FinanceStore.js",["192","193","194","195","196","197","198","199"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Finance\\ProductEntry.js",["200","201","202","203","204","205","206"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Finance\\ProductExit.js",["207","208","209","210","211","212","213","214","215","216","217","218","219"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Clinic\\ClinicStore.js",["220","221","222","223","224","225","226","227"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Clinic\\Clinic.js",["228","229","230","231","232"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\Finance\\ClientBill.js",["233","234","235","236","237","238","239","240","241","242","243","244","245"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\inventory\\BillDispenseCreate.js",["246","247","248","249","250","251","252","253","254"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\EncounterMgt\\EncounterMain.js",["255","256","257","258","259","260","261","262"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\helpers\\FacilityPopup.js",["263","264"],"C:\\Users\\simpa\\Documents\\healthstack\\frontend\\frontend\\src\\components\\inventory\\BillPrescriptionCreate.js",["265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281"],{"ruleId":"282","severity":1,"message":"283","line":1,"column":47,"nodeType":"284","messageId":"285","endLine":1,"endColumn":53},{"ruleId":"282","severity":1,"message":"286","line":4,"column":10,"nodeType":"284","messageId":"285","endLine":4,"endColumn":17},{"ruleId":"282","severity":1,"message":"287","line":7,"column":9,"nodeType":"284","messageId":"285","endLine":7,"endColumn":14},{"ruleId":"282","severity":1,"message":"288","line":8,"column":17,"nodeType":"284","messageId":"285","endLine":8,"endColumn":42},{"ruleId":"282","severity":1,"message":"289","line":10,"column":8,"nodeType":"284","messageId":"285","endLine":10,"endColumn":22},{"ruleId":"282","severity":1,"message":"290","line":18,"column":5,"nodeType":"284","messageId":"285","endLine":18,"endColumn":23},{"ruleId":"282","severity":1,"message":"291","line":34,"column":12,"nodeType":"284","messageId":"285","endLine":34,"endColumn":17},{"ruleId":"282","severity":1,"message":"292","line":34,"column":19,"nodeType":"284","messageId":"285","endLine":34,"endColumn":27},{"ruleId":"282","severity":1,"message":"293","line":39,"column":10,"nodeType":"284","messageId":"285","endLine":39,"endColumn":18},{"ruleId":"282","severity":1,"message":"294","line":42,"column":11,"nodeType":"284","messageId":"285","endLine":42,"endColumn":21},{"ruleId":"282","severity":1,"message":"295","line":42,"column":22,"nodeType":"284","messageId":"285","endLine":42,"endColumn":35},{"ruleId":"282","severity":1,"message":"296","line":96,"column":12,"nodeType":"284","messageId":"285","endLine":96,"endColumn":20},{"ruleId":"282","severity":1,"message":"297","line":96,"column":22,"nodeType":"284","messageId":"285","endLine":96,"endColumn":33},{"ruleId":"282","severity":1,"message":"298","line":158,"column":11,"nodeType":"284","messageId":"285","endLine":158,"endColumn":26},{"ruleId":"282","severity":1,"message":"299","line":171,"column":14,"nodeType":"284","messageId":"285","endLine":171,"endColumn":19},{"ruleId":"282","severity":1,"message":"300","line":223,"column":11,"nodeType":"284","messageId":"285","endLine":223,"endColumn":20},{"ruleId":"301","severity":1,"message":"302","line":238,"column":15,"nodeType":"303","endLine":238,"endColumn":17,"suggestions":"304"},{"ruleId":"301","severity":1,"message":"305","line":258,"column":8,"nodeType":"303","endLine":258,"endColumn":34,"suggestions":"306"},{"ruleId":"282","severity":1,"message":"307","line":359,"column":12,"nodeType":"284","messageId":"285","endLine":359,"endColumn":24},{"ruleId":"282","severity":1,"message":"308","line":370,"column":6,"nodeType":"284","messageId":"285","endLine":370,"endColumn":18},{"ruleId":"282","severity":1,"message":"309","line":390,"column":11,"nodeType":"284","messageId":"285","endLine":390,"endColumn":21},{"ruleId":"301","severity":1,"message":"310","line":412,"column":8,"nodeType":"303","endLine":412,"endColumn":10,"suggestions":"311"},{"ruleId":"301","severity":1,"message":"312","line":437,"column":7,"nodeType":"303","endLine":437,"endColumn":9,"suggestions":"313"},{"ruleId":"282","severity":1,"message":"286","line":4,"column":10,"nodeType":"284","messageId":"285","endLine":4,"endColumn":17},{"ruleId":"282","severity":1,"message":"314","line":8,"column":9,"nodeType":"284","messageId":"285","endLine":8,"endColumn":22},{"ruleId":"282","severity":1,"message":"315","line":17,"column":13,"nodeType":"284","messageId":"285","endLine":17,"endColumn":20},{"ruleId":"282","severity":1,"message":"316","line":18,"column":13,"nodeType":"284","messageId":"285","endLine":18,"endColumn":20},{"ruleId":"282","severity":1,"message":"317","line":37,"column":13,"nodeType":"284","messageId":"285","endLine":37,"endColumn":24},{"ruleId":"282","severity":1,"message":"318","line":48,"column":14,"nodeType":"284","messageId":"285","endLine":48,"endColumn":28},{"ruleId":"282","severity":1,"message":"319","line":48,"column":30,"nodeType":"284","messageId":"285","endLine":48,"endColumn":47},{"ruleId":"282","severity":1,"message":"320","line":49,"column":24,"nodeType":"284","messageId":"285","endLine":49,"endColumn":35},{"ruleId":"282","severity":1,"message":"321","line":55,"column":14,"nodeType":"284","messageId":"285","endLine":55,"endColumn":21},{"ruleId":"282","severity":1,"message":"322","line":58,"column":12,"nodeType":"284","messageId":"285","endLine":58,"endColumn":19},{"ruleId":"282","severity":1,"message":"323","line":60,"column":10,"nodeType":"284","messageId":"285","endLine":60,"endColumn":20},{"ruleId":"282","severity":1,"message":"324","line":67,"column":9,"nodeType":"284","messageId":"285","endLine":67,"endColumn":26},{"ruleId":"282","severity":1,"message":"325","line":135,"column":9,"nodeType":"284","messageId":"285","endLine":135,"endColumn":26},{"ruleId":"282","severity":1,"message":"326","line":210,"column":12,"nodeType":"284","messageId":"285","endLine":210,"endColumn":28},{"ruleId":"282","severity":1,"message":"327","line":220,"column":12,"nodeType":"284","messageId":"285","endLine":220,"endColumn":27},{"ruleId":"282","severity":1,"message":"328","line":314,"column":12,"nodeType":"284","messageId":"285","endLine":314,"endColumn":22},{"ruleId":"301","severity":1,"message":"329","line":344,"column":8,"nodeType":"303","endLine":344,"endColumn":14,"suggestions":"330"},{"ruleId":"282","severity":1,"message":"331","line":346,"column":12,"nodeType":"284","messageId":"285","endLine":346,"endColumn":21},{"ruleId":"282","severity":1,"message":"332","line":360,"column":12,"nodeType":"284","messageId":"285","endLine":360,"endColumn":32},{"ruleId":"282","severity":1,"message":"333","line":377,"column":12,"nodeType":"284","messageId":"285","endLine":377,"endColumn":20},{"ruleId":"282","severity":1,"message":"334","line":420,"column":11,"nodeType":"284","messageId":"285","endLine":420,"endColumn":29},{"ruleId":"282","severity":1,"message":"335","line":425,"column":11,"nodeType":"284","messageId":"285","endLine":425,"endColumn":20},{"ruleId":"301","severity":1,"message":"336","line":529,"column":8,"nodeType":"303","endLine":529,"endColumn":29,"suggestions":"337"},{"ruleId":"301","severity":1,"message":"338","line":551,"column":8,"nodeType":"303","endLine":551,"endColumn":21,"suggestions":"339"},{"ruleId":"301","severity":1,"message":"340","line":605,"column":9,"nodeType":"303","endLine":605,"endColumn":11,"suggestions":"341"},{"ruleId":"282","severity":1,"message":"342","line":1094,"column":12,"nodeType":"284","messageId":"285","endLine":1094,"endColumn":24},{"ruleId":"282","severity":1,"message":"343","line":1179,"column":11,"nodeType":"284","messageId":"285","endLine":1179,"endColumn":27},{"ruleId":"282","severity":1,"message":"344","line":1182,"column":11,"nodeType":"284","messageId":"285","endLine":1182,"endColumn":27},{"ruleId":"282","severity":1,"message":"345","line":6,"column":7,"nodeType":"284","messageId":"285","endLine":6,"endColumn":12},{"ruleId":"282","severity":1,"message":"346","line":8,"column":7,"nodeType":"284","messageId":"285","endLine":8,"endColumn":10},{"ruleId":"282","severity":1,"message":"347","line":2,"column":40,"nodeType":"284","messageId":"285","endLine":2,"endColumn":44},{"ruleId":"282","severity":1,"message":"348","line":14,"column":12,"nodeType":"284","messageId":"285","endLine":14,"endColumn":16},{"ruleId":"282","severity":1,"message":"349","line":14,"column":17,"nodeType":"284","messageId":"285","endLine":14,"endColumn":24},{"ruleId":"282","severity":1,"message":"350","line":88,"column":16,"nodeType":"284","messageId":"285","endLine":88,"endColumn":20},{"ruleId":"301","severity":1,"message":"351","line":113,"column":7,"nodeType":"303","endLine":113,"endColumn":9,"suggestions":"352"},{"ruleId":"282","severity":1,"message":"353","line":8,"column":37,"nodeType":"284","messageId":"285","endLine":8,"endColumn":42},{"ruleId":"282","severity":1,"message":"354","line":8,"column":44,"nodeType":"284","messageId":"285","endLine":8,"endColumn":50},{"ruleId":"282","severity":1,"message":"355","line":11,"column":11,"nodeType":"284","messageId":"285","endLine":11,"endColumn":19},{"ruleId":"282","severity":1,"message":"353","line":7,"column":37,"nodeType":"284","messageId":"285","endLine":7,"endColumn":42},{"ruleId":"282","severity":1,"message":"354","line":7,"column":44,"nodeType":"284","messageId":"285","endLine":7,"endColumn":50},{"ruleId":"282","severity":1,"message":"347","line":2,"column":40,"nodeType":"284","messageId":"285","endLine":2,"endColumn":44},{"ruleId":"282","severity":1,"message":"356","line":12,"column":9,"nodeType":"284","messageId":"285","endLine":12,"endColumn":20},{"ruleId":"282","severity":1,"message":"357","line":16,"column":18,"nodeType":"284","messageId":"285","endLine":16,"endColumn":26},{"ruleId":"301","severity":1,"message":"358","line":32,"column":12,"nodeType":"303","endLine":32,"endColumn":14,"suggestions":"359"},{"ruleId":"282","severity":1,"message":"347","line":2,"column":40,"nodeType":"284","messageId":"285","endLine":2,"endColumn":44},{"ruleId":"282","severity":1,"message":"356","line":11,"column":9,"nodeType":"284","messageId":"285","endLine":11,"endColumn":20},{"ruleId":"282","severity":1,"message":"357","line":14,"column":18,"nodeType":"284","messageId":"285","endLine":14,"endColumn":26},{"ruleId":"301","severity":1,"message":"360","line":30,"column":12,"nodeType":"303","endLine":30,"endColumn":14,"suggestions":"361"},{"ruleId":"301","severity":1,"message":"362","line":81,"column":7,"nodeType":"303","endLine":81,"endColumn":13,"suggestions":"363"},{"ruleId":"301","severity":1,"message":"364","line":389,"column":15,"nodeType":"303","endLine":389,"endColumn":17,"suggestions":"365"},{"ruleId":"282","severity":1,"message":"291","line":43,"column":12,"nodeType":"284","messageId":"285","endLine":43,"endColumn":17},{"ruleId":"282","severity":1,"message":"316","line":45,"column":12,"nodeType":"284","messageId":"285","endLine":45,"endColumn":19},{"ruleId":"301","severity":1,"message":"366","line":416,"column":15,"nodeType":"303","endLine":416,"endColumn":17,"suggestions":"367"},{"ruleId":"301","severity":1,"message":"368","line":423,"column":12,"nodeType":"303","endLine":423,"endColumn":45,"suggestions":"369"},{"ruleId":"301","severity":1,"message":"368","line":544,"column":11,"nodeType":"303","endLine":544,"endColumn":22,"suggestions":"370"},{"ruleId":"282","severity":1,"message":"354","line":666,"column":53,"nodeType":"284","messageId":"285","endLine":666,"endColumn":59},{"ruleId":"301","severity":1,"message":"371","line":706,"column":11,"nodeType":"303","endLine":706,"endColumn":13,"suggestions":"372"},{"ruleId":"282","severity":1,"message":"373","line":729,"column":11,"nodeType":"284","messageId":"285","endLine":729,"endColumn":23},{"ruleId":"282","severity":1,"message":"291","line":43,"column":12,"nodeType":"284","messageId":"285","endLine":43,"endColumn":17},{"ruleId":"282","severity":1,"message":"316","line":45,"column":12,"nodeType":"284","messageId":"285","endLine":45,"endColumn":19},{"ruleId":"301","severity":1,"message":"366","line":416,"column":15,"nodeType":"303","endLine":416,"endColumn":17,"suggestions":"374"},{"ruleId":"301","severity":1,"message":"368","line":423,"column":12,"nodeType":"303","endLine":423,"endColumn":45,"suggestions":"375"},{"ruleId":"301","severity":1,"message":"368","line":544,"column":11,"nodeType":"303","endLine":544,"endColumn":22,"suggestions":"376"},{"ruleId":"282","severity":1,"message":"354","line":666,"column":53,"nodeType":"284","messageId":"285","endLine":666,"endColumn":59},{"ruleId":"301","severity":1,"message":"371","line":706,"column":11,"nodeType":"303","endLine":706,"endColumn":13,"suggestions":"377"},{"ruleId":"282","severity":1,"message":"373","line":729,"column":11,"nodeType":"284","messageId":"285","endLine":729,"endColumn":23},{"ruleId":"282","severity":1,"message":"291","line":44,"column":12,"nodeType":"284","messageId":"285","endLine":44,"endColumn":17},{"ruleId":"282","severity":1,"message":"316","line":46,"column":12,"nodeType":"284","messageId":"285","endLine":46,"endColumn":19},{"ruleId":"378","severity":1,"message":"379","line":537,"column":21,"nodeType":"380","messageId":"381","endLine":537,"endColumn":36},{"ruleId":"301","severity":1,"message":"382","line":555,"column":15,"nodeType":"303","endLine":555,"endColumn":17,"suggestions":"383"},{"ruleId":"301","severity":1,"message":"368","line":563,"column":16,"nodeType":"303","endLine":563,"endColumn":49,"suggestions":"384"},{"ruleId":"282","severity":1,"message":"309","line":654,"column":11,"nodeType":"284","messageId":"285","endLine":654,"endColumn":21},{"ruleId":"282","severity":1,"message":"354","line":862,"column":53,"nodeType":"284","messageId":"285","endLine":862,"endColumn":59},{"ruleId":"282","severity":1,"message":"291","line":45,"column":12,"nodeType":"284","messageId":"285","endLine":45,"endColumn":17},{"ruleId":"282","severity":1,"message":"316","line":47,"column":12,"nodeType":"284","messageId":"285","endLine":47,"endColumn":19},{"ruleId":"282","severity":1,"message":"317","line":63,"column":12,"nodeType":"284","messageId":"285","endLine":63,"endColumn":23},{"ruleId":"282","severity":1,"message":"322","line":74,"column":11,"nodeType":"284","messageId":"285","endLine":74,"endColumn":18},{"ruleId":"282","severity":1,"message":"323","line":76,"column":9,"nodeType":"284","messageId":"285","endLine":76,"endColumn":19},{"ruleId":"301","severity":1,"message":"329","line":231,"column":7,"nodeType":"303","endLine":231,"endColumn":13,"suggestions":"385"},{"ruleId":"301","severity":1,"message":"386","line":338,"column":21,"nodeType":"387","endLine":338,"endColumn":42},{"ruleId":"378","severity":1,"message":"379","line":682,"column":21,"nodeType":"380","messageId":"381","endLine":682,"endColumn":36},{"ruleId":"301","severity":1,"message":"382","line":700,"column":15,"nodeType":"303","endLine":700,"endColumn":17,"suggestions":"388"},{"ruleId":"301","severity":1,"message":"368","line":708,"column":16,"nodeType":"303","endLine":708,"endColumn":49,"suggestions":"389"},{"ruleId":"282","severity":1,"message":"309","line":799,"column":11,"nodeType":"284","messageId":"285","endLine":799,"endColumn":21},{"ruleId":"282","severity":1,"message":"354","line":1007,"column":53,"nodeType":"284","messageId":"285","endLine":1007,"endColumn":59},{"ruleId":"282","severity":1,"message":"343","line":1388,"column":11,"nodeType":"284","messageId":"285","endLine":1388,"endColumn":27},{"ruleId":"282","severity":1,"message":"291","line":43,"column":12,"nodeType":"284","messageId":"285","endLine":43,"endColumn":17},{"ruleId":"282","severity":1,"message":"316","line":45,"column":12,"nodeType":"284","messageId":"285","endLine":45,"endColumn":19},{"ruleId":"301","severity":1,"message":"366","line":416,"column":15,"nodeType":"303","endLine":416,"endColumn":17,"suggestions":"390"},{"ruleId":"301","severity":1,"message":"368","line":423,"column":12,"nodeType":"303","endLine":423,"endColumn":45,"suggestions":"391"},{"ruleId":"301","severity":1,"message":"368","line":546,"column":11,"nodeType":"303","endLine":546,"endColumn":22,"suggestions":"392"},{"ruleId":"282","severity":1,"message":"354","line":668,"column":53,"nodeType":"284","messageId":"285","endLine":668,"endColumn":59},{"ruleId":"301","severity":1,"message":"371","line":708,"column":11,"nodeType":"303","endLine":708,"endColumn":13,"suggestions":"393"},{"ruleId":"282","severity":1,"message":"373","line":731,"column":11,"nodeType":"284","messageId":"285","endLine":731,"endColumn":23},{"ruleId":"282","severity":1,"message":"291","line":43,"column":12,"nodeType":"284","messageId":"285","endLine":43,"endColumn":17},{"ruleId":"282","severity":1,"message":"316","line":45,"column":12,"nodeType":"284","messageId":"285","endLine":45,"endColumn":19},{"ruleId":"301","severity":1,"message":"394","line":392,"column":15,"nodeType":"303","endLine":392,"endColumn":17,"suggestions":"395"},{"ruleId":"282","severity":1,"message":"354","line":623,"column":53,"nodeType":"284","messageId":"285","endLine":623,"endColumn":59},{"ruleId":"282","severity":1,"message":"373","line":696,"column":11,"nodeType":"284","messageId":"285","endLine":696,"endColumn":23},{"ruleId":"282","severity":1,"message":"283","line":1,"column":47,"nodeType":"284","messageId":"285","endLine":1,"endColumn":53},{"ruleId":"282","severity":1,"message":"396","line":3,"column":9,"nodeType":"284","messageId":"285","endLine":3,"endColumn":22},{"ruleId":"282","severity":1,"message":"286","line":4,"column":10,"nodeType":"284","messageId":"285","endLine":4,"endColumn":17},{"ruleId":"282","severity":1,"message":"287","line":7,"column":9,"nodeType":"284","messageId":"285","endLine":7,"endColumn":14},{"ruleId":"282","severity":1,"message":"288","line":8,"column":17,"nodeType":"284","messageId":"285","endLine":8,"endColumn":42},{"ruleId":"282","severity":1,"message":"289","line":10,"column":8,"nodeType":"284","messageId":"285","endLine":10,"endColumn":22},{"ruleId":"282","severity":1,"message":"397","line":57,"column":12,"nodeType":"284","messageId":"285","endLine":57,"endColumn":31},{"ruleId":"282","severity":1,"message":"298","line":76,"column":12,"nodeType":"284","messageId":"285","endLine":76,"endColumn":27},{"ruleId":"282","severity":1,"message":"398","line":88,"column":12,"nodeType":"284","messageId":"285","endLine":88,"endColumn":24},{"ruleId":"282","severity":1,"message":"299","line":89,"column":15,"nodeType":"284","messageId":"285","endLine":89,"endColumn":20},{"ruleId":"399","severity":1,"message":"400","line":102,"column":18,"nodeType":"401","messageId":"402","endLine":102,"endColumn":30},{"ruleId":"301","severity":1,"message":"403","line":158,"column":16,"nodeType":"303","endLine":158,"endColumn":18,"suggestions":"404"},{"ruleId":"282","severity":1,"message":"300","line":160,"column":16,"nodeType":"284","messageId":"285","endLine":160,"endColumn":25},{"ruleId":"282","severity":1,"message":"286","line":4,"column":10,"nodeType":"284","messageId":"285","endLine":4,"endColumn":17},{"ruleId":"282","severity":1,"message":"291","line":15,"column":13,"nodeType":"284","messageId":"285","endLine":15,"endColumn":18},{"ruleId":"282","severity":1,"message":"316","line":17,"column":13,"nodeType":"284","messageId":"285","endLine":17,"endColumn":20},{"ruleId":"282","severity":1,"message":"317","line":33,"column":13,"nodeType":"284","messageId":"285","endLine":33,"endColumn":24},{"ruleId":"282","severity":1,"message":"322","line":44,"column":12,"nodeType":"284","messageId":"285","endLine":44,"endColumn":19},{"ruleId":"282","severity":1,"message":"323","line":46,"column":10,"nodeType":"284","messageId":"285","endLine":46,"endColumn":20},{"ruleId":"301","severity":1,"message":"329","line":201,"column":8,"nodeType":"303","endLine":201,"endColumn":14,"suggestions":"405"},{"ruleId":"301","severity":1,"message":"386","line":308,"column":22,"nodeType":"387","endLine":308,"endColumn":43},{"ruleId":"282","severity":1,"message":"343","line":609,"column":11,"nodeType":"284","messageId":"285","endLine":609,"endColumn":27},{"ruleId":"282","severity":1,"message":"286","line":4,"column":10,"nodeType":"284","messageId":"285","endLine":4,"endColumn":17},{"ruleId":"282","severity":1,"message":"287","line":8,"column":9,"nodeType":"284","messageId":"285","endLine":8,"endColumn":14},{"ruleId":"282","severity":1,"message":"406","line":11,"column":25,"nodeType":"284","messageId":"285","endLine":11,"endColumn":43},{"ruleId":"282","severity":1,"message":"407","line":34,"column":18,"nodeType":"284","messageId":"285","endLine":34,"endColumn":25},{"ruleId":"282","severity":1,"message":"408","line":36,"column":11,"nodeType":"284","messageId":"285","endLine":36,"endColumn":17},{"ruleId":"282","severity":1,"message":"298","line":51,"column":11,"nodeType":"284","messageId":"285","endLine":51,"endColumn":26},{"ruleId":"282","severity":1,"message":"409","line":124,"column":19,"nodeType":"284","messageId":"285","endLine":124,"endColumn":25},{"ruleId":"301","severity":1,"message":"410","line":203,"column":15,"nodeType":"303","endLine":203,"endColumn":17,"suggestions":"411"},{"ruleId":"282","severity":1,"message":"412","line":10,"column":12,"nodeType":"284","messageId":"285","endLine":10,"endColumn":17},{"ruleId":"301","severity":1,"message":"413","line":283,"column":7,"nodeType":"303","endLine":283,"endColumn":9,"suggestions":"414"},{"ruleId":"282","severity":1,"message":"286","line":4,"column":10,"nodeType":"284","messageId":"285","endLine":4,"endColumn":17},{"ruleId":"282","severity":1,"message":"314","line":8,"column":9,"nodeType":"284","messageId":"285","endLine":8,"endColumn":22},{"ruleId":"282","severity":1,"message":"316","line":18,"column":13,"nodeType":"284","messageId":"285","endLine":18,"endColumn":20},{"ruleId":"282","severity":1,"message":"415","line":21,"column":12,"nodeType":"284","messageId":"285","endLine":21,"endColumn":28},{"ruleId":"282","severity":1,"message":"416","line":30,"column":13,"nodeType":"284","messageId":"285","endLine":30,"endColumn":20},{"ruleId":"282","severity":1,"message":"317","line":35,"column":13,"nodeType":"284","messageId":"285","endLine":35,"endColumn":24},{"ruleId":"282","severity":1,"message":"322","line":52,"column":12,"nodeType":"284","messageId":"285","endLine":52,"endColumn":19},{"ruleId":"282","severity":1,"message":"323","line":54,"column":10,"nodeType":"284","messageId":"285","endLine":54,"endColumn":20},{"ruleId":"282","severity":1,"message":"326","line":226,"column":12,"nodeType":"284","messageId":"285","endLine":226,"endColumn":28},{"ruleId":"301","severity":1,"message":"329","line":365,"column":8,"nodeType":"303","endLine":365,"endColumn":14,"suggestions":"417"},{"ruleId":"282","severity":1,"message":"331","line":367,"column":12,"nodeType":"284","messageId":"285","endLine":367,"endColumn":21},{"ruleId":"282","severity":1,"message":"335","line":487,"column":11,"nodeType":"284","messageId":"285","endLine":487,"endColumn":20},{"ruleId":"301","severity":1,"message":"418","line":584,"column":8,"nodeType":"303","endLine":584,"endColumn":20,"suggestions":"419"},{"ruleId":"301","severity":1,"message":"386","line":599,"column":21,"nodeType":"387","endLine":599,"endColumn":42},{"ruleId":"282","severity":1,"message":"342","line":868,"column":12,"nodeType":"284","messageId":"285","endLine":868,"endColumn":24},{"ruleId":"282","severity":1,"message":"343","line":953,"column":11,"nodeType":"284","messageId":"285","endLine":953,"endColumn":27},{"ruleId":"282","severity":1,"message":"344","line":956,"column":11,"nodeType":"284","messageId":"285","endLine":956,"endColumn":27},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useForm' is defined but never used.","'toast' is defined but never used.","'formatDistanceToNowStrict' is defined but never used.","'PatientProfile' is defined but never used.","'AccordionItemState' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'BillServ' is assigned a value but never used.","'facilities' is assigned a value but never used.","'setFacilities' is assigned a value but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'handleCreateNew' is assigned a value but never used.","'field' is assigned a value but never used.","'handleRow' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'BillServ' and 'getFacilities'. Either include them or remove the dependency array.","ArrayExpression",["420"],"React Hook useEffect has a missing dependency: 'selectedOrders'. Either include it or remove the dependency array.",["421"],"'currentOrder' is assigned a value but never used.","'ProductEntry' is assigned a value but never used.","'handleEdit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'state.DispenseModule.selectedDispense' and 'state.currentClients'. Either include them or remove the dependency array.",["422"],"React Hook useEffect has missing dependencies: 'BillServ' and 'state.currentClients'. Either include them or remove the dependency array.",["423"],"'ProductCreate' is defined but never used.","'success' is assigned a value but never used.","'message' is assigned a value but never used.","'inventoryId' is assigned a value but never used.","'paymentOptions' is assigned a value but never used.","'setPaymentOptions' is assigned a value but never used.","'setBillMode' is assigned a value but never used.","'partPay' is assigned a value but never used.","'inputEl' is assigned a value but never used.","'hidestatus' is defined but never used.","'showDocumentation' is assigned a value but never used.","'getSearchfacility' is assigned a value but never used.","'handleChangeType' is assigned a value but never used.","'handleClickProd' is assigned a value but never used.","'handleQtty' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'documentNo', 'quantity', 'sellingprice', 'source', 'totalamount', and 'type'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setProductEntry' needs the current value of 'documentNo'.",["424"],"'resetform' is assigned a value but never used.","'handleMedicationDone' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'handleChangeAmount' is assigned a value but never used.","'newclient' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFacilities', 'medication', 'productItem.length', and 'source'. Either include them or remove the dependency array.",["425"],"React Hook useEffect has a missing dependency: 'getTotal'. Either include it or remove the dependency array.",["426"],"React Hook useEffect has missing dependencies: 'SubwalletServ', 'getFacilities', and 'setState'. Either include them or remove the dependency array.",["427"],"'productModal' is assigned a value but never used.","'handleAddproduct' is assigned a value but never used.","'handlecloseModal' is assigned a value but never used.","'herok' is assigned a value but never used.","'API' is assigned a value but never used.","'Link' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'resp' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'reAuth', 'setUser', and 'user'. Either include them or remove the dependency array.",["428"],"'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'userServ' is assigned a value but never used.","'UserContext' is defined but never used.","'setState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleChangeStore' and 'selectedStore'. Either include them or remove the dependency array.",["429"],"React Hook useEffect has missing dependencies: 'handleChangeClinic' and 'selectedClinic'. Either include them or remove the dependency array.",["430"],"React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["431"],"React Hook useEffect has missing dependencies: 'EmployeeServ', 'getFacilities', and 'user'. Either include them or remove the dependency array.",["432"],"React Hook useEffect has missing dependencies: 'InventoryServ', 'getFacilities', and 'user'. Either include them or remove the dependency array.",["433"],"React Hook useEffect has a missing dependency: 'getFacilities'. Either include it or remove the dependency array.",["434"],["435"],"React Hook useEffect has a missing dependency: 'handleSetPrice'. Either include it or remove the dependency array.",["436"],"'handleDelete' is assigned a value but never used.",["437"],["438"],["439"],["440"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","React Hook useEffect has missing dependencies: 'ProductEntryServ', 'getFacilities', and 'state.StoreModule.selectedStore'. Either include them or remove the dependency array.",["441"],["442"],["443"],"Assignments to the 'calcamount1' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","BinaryExpression",["444"],["445"],["446"],["447"],["448"],["449"],"React Hook useEffect has missing dependencies: 'ClinicServ', 'getFacilities', and 'user'. Either include them or remove the dependency array.",["450"],"'DebounceInput' is defined but never used.","'handleMedicationRow' is assigned a value but never used.","'handleSearch' is assigned a value but never used.","no-dupe-keys","Duplicate key 'order_status'.","ObjectExpression","unexpected","React Hook useEffect has missing dependencies: 'OrderServ' and 'getFacilities'. Either include them or remove the dependency array.",["451"],["452"],"'PrescriptionCreate' is defined but never used.","'setPage' is assigned a value but never used.","'loader' is assigned a value but never used.","'ulimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ClinicServ', 'getFacilities', 'page', and 'user'. Either include them or remove the dependency array.",["453"],"'state' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'facilityServ' and 'getFacilities'. Either include them or remove the dependency array.",["454"],"'ProductEntryServ' is assigned a value but never used.","'qamount' is assigned a value but never used.",["455"],"React Hook useEffect has missing dependencies: 'billMode' and 'source'. Either include them or remove the dependency array.",["456"],{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},{"desc":"469","fix":"470"},{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"483","fix":"491"},{"desc":"485","fix":"492"},{"desc":"487","fix":"493"},{"desc":"489","fix":"494"},{"desc":"495","fix":"496"},{"desc":"485","fix":"497"},{"desc":"465","fix":"498"},{"desc":"495","fix":"499"},{"desc":"485","fix":"500"},{"desc":"483","fix":"501"},{"desc":"485","fix":"502"},{"desc":"487","fix":"503"},{"desc":"489","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"465","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"465","fix":"514"},{"desc":"515","fix":"516"},"Update the dependencies array to be: [BillServ, getFacilities]",{"range":"517","text":"518"},"Update the dependencies array to be: [selectedOrders, state.financeModule.show]",{"range":"519","text":"520"},"Update the dependencies array to be: [state.DispenseModule.selectedDispense, state.currentClients]",{"range":"521","text":"522"},"Update the dependencies array to be: [BillServ, state.currentClients]",{"range":"523","text":"524"},"Update the dependencies array to be: [date, documentNo, quantity, sellingprice, source, totalamount, type]",{"range":"525","text":"526"},"Update the dependencies array to be: [getFacilities, medication, productItem.length, source, state.financeModule]",{"range":"527","text":"528"},"Update the dependencies array to be: [getTotal, productItem]",{"range":"529","text":"530"},"Update the dependencies array to be: [SubwalletServ, getFacilities, setState]",{"range":"531","text":"532"},"Update the dependencies array to be: [reAuth, setUser, user]",{"range":"533","text":"534"},"Update the dependencies array to be: [handleChangeStore, selectedStore]",{"range":"535","text":"536"},"Update the dependencies array to be: [handleChangeClinic, selectedClinic]",{"range":"537","text":"538"},"Update the dependencies array to be: [setValue, user]",{"range":"539","text":"540"},"Update the dependencies array to be: [EmployeeServ, getFacilities, user]",{"range":"541","text":"542"},"Update the dependencies array to be: [InventoryServ, getFacilities, user]",{"range":"543","text":"544"},"Update the dependencies array to be: [getFacilities, state.StoreModule.selectedStore]",{"range":"545","text":"546"},"Update the dependencies array to be: [Inventory, getFacilities]",{"range":"547","text":"548"},"Update the dependencies array to be: [handleSetPrice]",{"range":"549","text":"550"},{"range":"551","text":"544"},{"range":"552","text":"546"},{"range":"553","text":"548"},{"range":"554","text":"550"},"Update the dependencies array to be: [ProductEntryServ, getFacilities, state.StoreModule.selectedStore]",{"range":"555","text":"556"},{"range":"557","text":"546"},{"range":"558","text":"526"},{"range":"559","text":"556"},{"range":"560","text":"546"},{"range":"561","text":"544"},{"range":"562","text":"546"},{"range":"563","text":"548"},{"range":"564","text":"550"},"Update the dependencies array to be: [ClinicServ, getFacilities, user]",{"range":"565","text":"566"},"Update the dependencies array to be: [OrderServ, getFacilities]",{"range":"567","text":"568"},{"range":"569","text":"526"},"Update the dependencies array to be: [ClinicServ, getFacilities, page, user]",{"range":"570","text":"571"},"Update the dependencies array to be: [facilityServ, getFacilities]",{"range":"572","text":"573"},{"range":"574","text":"526"},"Update the dependencies array to be: [billMode, medication, source]",{"range":"575","text":"576"},[8800,8802],"[BillServ, getFacilities]",[9212,9238],"[selectedOrders, state.financeModule.show]",[17680,17682],"[state.DispenseModule.selectedDispense, state.currentClients]",[18507,18509],"[BillServ, state.currentClients]",[11435,11441],"[date, documentNo, quantity, sellingprice, source, totalamount, type]",[17359,17380],"[getFacilities, medication, productItem.length, source, state.financeModule]",[17938,17951],"[getTotal, productItem]",[19807,19809],"[SubwalletServ, getFacilities, setState]",[3294,3296],"[reAuth, setUser, user]",[1257,1259],"[handleChangeStore, selectedStore]",[1106,1108],"[handleChangeClinic, selectedClinic]",[2746,2752],"[setValue, user]",[14951,14953],"[EmployeeServ, getFacilities, user]",[16336,16338],"[InventoryServ, getFacilities, user]",[16478,16511],"[getFacilities, state.StoreModule.selectedStore]",[22339,22350],"[Inventory, getFacilities]",[28037,28039],"[handleSetPrice]",[16336,16338],[16478,16511],[22339,22350],[28037,28039],[21183,21185],"[ProductEntryServ, getFacilities, state.StoreModule.selectedStore]",[21387,21420],[7305,7311],[25911,25913],[26115,26148],[16336,16338],[16478,16511],[22351,22362],[28049,28051],[14984,14986],"[ClinicServ, getFacilities, user]",[5864,5866],"[OrderServ, getFacilities]",[6347,6353],[7642,7644],"[ClinicServ, getFacilities, page, user]",[10690,10692],"[facilityServ, getFacilities]",[12109,12115],[19059,19071],"[billMode, medication, source]"]